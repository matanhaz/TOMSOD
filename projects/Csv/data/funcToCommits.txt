{
    "functions": [
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreEmptyLines",
            "function params": [
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreEmptyLines CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setUnicodeEscapeInterpretation",
            "function params": [
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setUnicodeEscapeInterpretation CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfFile",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfFile CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextToken",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextToken CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser",
            "function params": [
                "input"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.CSVParser CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.Token",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.Token CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.parseLine",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.parseLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setDelimiter",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setDelimiter CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.simpleTokenLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setStrategy",
            "function params": [
                "delimiter",
                "encapsulator",
                "commentStart",
                "ignoreLeadingWhitespace",
                "interpretUnicodeEscapes",
                "ignoreEmptyLines"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.unicodeEscapeLexer",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.nextValue CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setEncapsulator",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setEncapsulator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCommentStart",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCommentStart CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.parse",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.parse CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getUnicodeEscapeInterpretation",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getUnicodeEscapeInterpretation CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCSVStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setCSVStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.encapsulatedTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getAllValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getAllValues CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getLineNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.isWhitespace",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.isWhitespace CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getEncapsulator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getEncapsulator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setExcelStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setExcelStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreLeadingWhitespaces",
            "function params": [
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.setIgnoreLeadingWhitespaces CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getCommentStart CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getDelimiter CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.getIgnoreLeadingWhitespaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.getIgnoreLeadingWhitespaces CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVParser.isEndOfLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.print",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.print CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.println CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printLine",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printLine CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getSeparatorChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getSeparatorChar CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter",
            "function params": [
                "out",
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.escapeAndQuote",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.escapeAndQuote CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.getCommentStart CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printlnComment",
            "function params": [
                "comment"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.printlnComment CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setCommentStart",
            "function params": [
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setCommentStart CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setSeparatorChar",
            "function params": [
                "separatorChar"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.CSVPrinter.setSeparatorChar CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.read",
            "function params": [
                "buf",
                "off",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.ExtendedBufferedReader",
            "function params": [
                "r",
                "bufSize"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.lookAhead",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readUntil",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readUntil ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skip",
            "function params": [
                "n"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skip ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readAgain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.readAgain ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.markSupported",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.markSupported ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skipUntil",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.java.ch.netcetera.wake.core.format.csv.ExtendedBufferedReader.skipUntil ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.FormatTests.main",
            "function params": [
                "args"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.FormatTests.main FormatTests.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.FormatTests.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.FormatTests.suite FormatTests.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.FormatTests.FormatTests",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.FormatTests.FormatTests FormatTests.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testCarriageReturnLineFeedEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine5 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetDelimiter CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.TestCSVParser",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse4 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testExcelStrategyTest2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextValue CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetLine CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.CSVParserTest",
            "function params": [
                "arg0"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.CSVParserTest CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine6 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testSetCSVStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testSetCSVStrategy CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine7",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine7 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.suite CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse7",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse7 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetCommentStart CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParseLine4 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetEncapsulator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetSetEncapsulator CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testLineTokenConsistency",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testUnicodeEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse5 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testParse6 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetAllValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.suite CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.CSVPrinterTest",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.CSVPrinterTest.CSVPrinterTest CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.suite ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkip0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkip0 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testMarkSupported",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testMarkSupported ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkipUntil",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testSkipUntil ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.ExtendedBufferedReaderTest",
            "function params": [
                "arg0"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.ExtendedBufferedReaderTest ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testConstructors",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testConstructors ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadUntil",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadUntil ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.getEBR",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 1,
                    "commit message": "import of csv parser code, as donated by netcetera [code grant recorded]\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/trunks-sandbox/csv@357300 13f79535-47bb-0310-9956-ffa450edef68 src.test.ch.netcetera.wake.core.format.csv.ExtendedBufferedReaderTest.getEBR ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setFieldHeader",
            "function params": [
                "fieldHeader"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFieldHeader CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFieldHeader CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreValueDelimiter",
            "function params": [
                "ignoreValueDelimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreValueDelimiter CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreValueDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getField",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getField CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getField CSVConfig.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getField CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setEndTrimmed",
            "function params": [
                "endTrimmed"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setEndTrimmed CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setEndTrimmed CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.isFixedWidth",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFixedWidth CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFixedWidth CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.isDelimiterIgnored",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isDelimiterIgnored CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isDelimiterIgnored CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setValueDelimiter",
            "function params": [
                "valueDelimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setValueDelimiter CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setValueDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getDelimiter CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.isEndTrimmed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isEndTrimmed CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isEndTrimmed CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.isValueDelimiterIgnored",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isValueDelimiterIgnored CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isValueDelimiterIgnored CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getFill",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFill CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFill CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getFields",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFields CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFields CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setFillChar",
            "function params": [
                "fillChar"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFillChar CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFillChar CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setDelimiter",
            "function params": [
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setDelimiter CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.isFieldHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFieldHeader CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.isFieldHeader CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getValueDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getValueDelimiter CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getValueDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setFill",
            "function params": [
                "fill"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFill CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFill CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreDelimiter",
            "function params": [
                "ignoreDelimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreDelimiter CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setIgnoreDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.addField",
            "function params": [
                "field"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.addField CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.addField CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setFixedWidth",
            "function params": [
                "fixedWidth"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFixedWidth CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFixedWidth CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setFields",
            "function params": [
                "csvField"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java"
                },
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setFields CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getFillChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFillChar CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getFillChar CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.equals",
            "function params": [
                "obj"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.equals CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.equals CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.CSVConfig",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.CSVConfig CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.CSVConfig CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.guessConfig",
            "function params": [
                "inputStream"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.guessConfig CSVConfig.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.guessConfig CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.analyseLines",
            "function params": [
                "lines"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.analyseLines CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.analyseLines CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFieldSeperator",
            "function params": [
                "lines"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFieldSeperator CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFieldSeperator CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidth",
            "function params": [
                "lines"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidth CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidth CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator",
            "function params": [
                "lines"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator CSVConfigGuesser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guessFixedWidthSeperator CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setInputStream",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setInputStream CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setInputStream CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java"
                },
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.CSVConfigGuesser CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.hasFieldHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.hasFieldHeader CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.hasFieldHeader CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setHasFieldHeader",
            "function params": [
                "hasFieldHeader"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setHasFieldHeader CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.setHasFieldHeader CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.getInputStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.getInputStream CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.getInputStream CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java"
                },
                {
                    "commit index": 33,
                    "commit message": "Make sure only 10 lines or less are read. Thanx to Stuart Robertson for noticing\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@526450 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfigGuesser.guess CSVConfigGuesser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.CSVField",
            "function params": [
                "name",
                "size"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
                },
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
                },
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.CSVField CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.setSize",
            "function params": [
                "size"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setSize CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setSize CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.setName",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setName CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setName CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.setFill",
            "function params": [
                "fill"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setFill CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.setFill CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.getSize",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getSize CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getSize CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.getFill",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getFill CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getFill CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.overrideFill",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.overrideFill CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.overrideFill CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVField.getName",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getName CSVField.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVField.getName CSVField.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVWriter.setWriter",
            "function params": [
                "writer"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setWriter CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setWriter CSVWriter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord",
            "function params": [
                "map"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java"
                },
                {
                    "commit index": 37,
                    "commit message": "SANDBOX-202: CSVWriter can't handle missing entries in the Map - or non-String map values\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@608911 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java"
                },
                {
                    "commit index": 52,
                    "commit message": "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1003046 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeRecord CSVWriter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVWriter.writeValue",
            "function params": [
                "field",
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java"
                },
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.writeValue CSVWriter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVWriter.getConfig",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.getConfig CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.getConfig CSVWriter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVWriter.setConfig",
            "function params": [
                "config"
            ],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setConfig CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.setConfig CSVWriter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java"
                },
                {
                    "commit index": 4,
                    "commit message": "Start with CSVWriter.. (it's kind of working already..)\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373942 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVWriter.CSVWriter CSVWriter.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess2 CSVConfigGuesserTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess2 CSVConfigGuesserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess1 CSVConfigGuesserTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testConfigGuess1 CSVConfigGuesserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testSetters",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testSetters CSVConfigGuesserTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigGuesserTest.testSetters CSVConfigGuesserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testDelimiter CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testDelimiter CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFixedWith",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFixedWith CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFixedWith CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields CSVConfigTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFields CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFieldHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFieldHeader CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFieldHeader CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testValueDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testValueDelimiter CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testValueDelimiter CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testFill",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFill CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testFill CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVConfigTest.testTrimEnd",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testTrimEnd CSVConfigTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVConfigTest.testTrimEnd CSVConfigTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVFieldTest.testCSVField",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testCSVField CSVFieldTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testCSVField CSVFieldTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVFieldTest.testFill",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testFill CSVFieldTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVFieldTest.testFill CSVFieldTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testCSVConfig",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testCSVConfig CSVWriterTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testCSVConfig CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 5,
                    "commit message": "Testcases for CSVWriter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@373943 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriter CSVWriterTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriter CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setCSVStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setCSVStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.getLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                },
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 35,
                    "commit message": "fix eol detection\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@558883 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setIgnoreEmptyLines",
            "function params": [
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setIgnoreEmptyLines CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setUnicodeEscapeInterpretation",
            "function params": [
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setUnicodeEscapeInterpretation CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.nextToken",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 50,
                    "commit message": "SANDBOX-313: Endless loops in CSV parser when last line is comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@964273 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 55,
                    "commit message": "Fix for issue reported in SANDBOX-218: CSV reader doesn't handle older Mac line endings (\\r) that are also used by recent versions of Excel for Mac.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065496 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 59,
                    "commit message": "Fixes for typos in comments and javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065549 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.getIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getIgnoreEmptyLines CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setDelimiter",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setDelimiter CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setExcelStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setExcelStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 8,
                    "commit message": "Moved back to JDK 1.3 compatibility. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@412968 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setIgnoreLeadingWhitespaces",
            "function params": [
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setIgnoreLeadingWhitespaces CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setStrategy",
            "function params": [
                "delimiter",
                "encapsulator",
                "commentStart",
                "ignoreLeadingWhitespace",
                "interpretUnicodeEscapes",
                "ignoreEmptyLines"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setStrategy CSVParser.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setStrategy CSVParser.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setEncapsulator",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setEncapsulator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.setCommentStart",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.setCommentStart CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.parse",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testParse4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testParse4 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.CSVParserTest",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.CSVParserTest CSVParserTest.java"
                },
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.CSVParserTest CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextValue CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextValue CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextValue CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testGetLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextToken4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextToken1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextToken5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testSetExcelStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testSetExcelStrategy CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testSetCSVStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testSetCSVStrategy CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextToken3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testExcelStrategy2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineTokenConsistency CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testParse6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testParse6 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextToken2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 6,
                    "commit message": "Javadoc improvements, more unit tests, change of API to a chain style, some bugfixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@383468 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.getStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getStrategy CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getStrategy CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.CSVParser",
            "function params": [
                "input",
                "delimiter",
                "encapsulator",
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 21,
                    "commit message": "CSVParser constructor with CSVStrategy: SANDBOX-180\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@477503 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 21,
                    "commit message": "CSVParser constructor with CSVStrategy: SANDBOX-180\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@477503 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 58,
                    "commit message": "Resolved warning caused by the usage of a deprecated constructor.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065526 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getEncapsulator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEncapsulator CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEncapsulator CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getDelimiter CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getDelimiter CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setDelimiter",
            "function params": [
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setDelimiter CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setDelimiter CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setEncapsulator",
            "function params": [
                "encapsulator"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEncapsulator CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEncapsulator CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getUnicodeEscapeInterpretation",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getUnicodeEscapeInterpretation CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getUnicodeEscapeInterpretation CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getCommentStart CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getCommentStart CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy",
            "function params": [
                "delimiter",
                "encapsulator",
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 41,
                    "commit message": "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setCommentStart",
            "function params": [
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setCommentStart CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setCommentStart CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces",
            "function params": [
                "ignoreLeadingWhitespaces"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces CSVStrategy.java"
                },
                {
                    "commit index": 41,
                    "commit message": "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreLeadingWhitespaces CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getIgnoreLeadingWhitespaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreLeadingWhitespaces CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreLeadingWhitespaces CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setIgnoreEmptyLines",
            "function params": [
                "ignoreEmptyLines"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreEmptyLines CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreEmptyLines CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreEmptyLines CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreEmptyLines CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation",
            "function params": [
                "interpretUnicodeEscapes"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation CSVStrategy.java"
                },
                {
                    "commit index": 41,
                    "commit message": "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setUnicodeEscapeInterpretation CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testNextToken6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart CSVStrategyTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart CSVStrategyTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetCommentStart CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetExcelStrategy CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator CSVStrategyTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator CSVStrategyTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetEncapsulator CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter CSVStrategyTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter CSVStrategyTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testGetSetDelimiter CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.CSVStrategyTest",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.CSVStrategyTest CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java"
                },
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.testSetCSVStrategy CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVStrategyTest.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 7,
                    "commit message": "Extracted the strategy concept into its own class\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@399987 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVStrategyTest.suite CSVStrategyTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.print",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 13,
                    "commit message": "Adding a minor optimisation as detailed in #SANDBOX-160 by Daniel Gredler. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427471 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 51,
                    "commit message": "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 51,
                    "commit message": "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.setStrategy",
            "function params": [
                "strategy"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.setStrategy CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter",
            "function params": [
                "out",
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.getStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.getStrategy CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.printlnComment",
            "function params": [
                "comment"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.isCommentingDisabled",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.isCommentingDisabled CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.isCommentingDisabled CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVUtils.printLine",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVUtils.parse",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
                },
                {
                    "commit index": 14,
                    "commit message": "Optimisation from Ortwin Glueck (#SANDBOX-166) in which empty String arrays are replaced with constants. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430240 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVUtils.parseLine",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parseLine CSVUtils.java"
                },
                {
                    "commit index": 14,
                    "commit message": "Optimisation from Ortwin Glueck (#SANDBOX-166) in which empty String arrays are replaced with constants. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430240 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parseLine CSVUtils.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.parseLine CSVUtils.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVUtils.CSVUtils",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVUtils.CSVUtils CSVUtils.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 28,
                    "commit message": "change excel strategy to use ',' as the separator: SANDBOX-182\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@489553 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse7",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse7 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse7 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine3 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine3 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse5 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse5 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine4 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine4 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine2 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine2 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse1 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse1 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse3 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse3 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine1 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine1 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse4 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse4 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine7",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine7 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine7 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine5 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine5 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse6 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse6 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine6 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParseLine6 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVUtilsTest.testParse2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 9,
                    "commit message": "Pulled some static methods into a CSVUtils class, switched CSVPrinter to use a CSVStrategy though it doesn't use it fully yet, added a COMMENTS_DISABLED constant instead of relying on (char) 0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@415323 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse2 CSVUtilsTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVUtilsTest.testParse2 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.isWhitespace",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 12,
                    "commit message": "Fixing bug reported byu Markus Rogg in #SANDBOX-153. Whitespace was being treated specially when it was not the delimiter. Unit test and patch applied. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427470 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 12,
                    "commit message": "Fixing bug reported byu Markus Rogg in #SANDBOX-153. Whitespace was being treated specially when it was not the delimiter. Unit test and patch applied. \n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@427470 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.getAllValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.Token",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.readUntil",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readUntil ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.readLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 15,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430322 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.append",
            "function params": [
                "cb"
            ],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.clear",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.clear CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.clear CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.CharBuffer",
            "function params": [
                "length"
            ],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.shrink",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toString CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toString CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.provideCapacity",
            "function params": [
                "capacity"
            ],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
                },
                {
                    "commit index": 32,
                    "commit message": "allocate extra space when expanding CharBuffer: SANDBOX-189\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@522920 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.length",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.length CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.length CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.capacity",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.capacity CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.capacity CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.getCharacters",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java"
                },
                {
                    "commit index": 42,
                    "commit message": "Applying checkstyle changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631133 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.toStringBuffer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toStringBuffer CharBuffer.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.toStringBuffer CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testCreate",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testCreate CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testCreate CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testCreate CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArrayBuffer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArrayBuffer CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArrayBuffer CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharArray CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testProvideCapacity",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testProvideCapacity CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testProvideCapacity CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendChar CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendChar CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendCharBuffer CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testShrink",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testShrink CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testShrink CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testShrink CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendStringBuffer CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString CharBufferTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendString2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString2 CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendString2 CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CharBufferTest.testAppendSingleChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 16,
                    "commit message": "This patch reduces the amount of intermediate garbage significantly.\nPR: SANDBOX-166\nContributed by: Ortwin Gl\u00fcck\nReviewed by: Henri Yandell\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430324 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendSingleChar CharBufferTest.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CharBufferTest.testAppendSingleChar CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.AllTests.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 17,
                    "commit message": "added test suites\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430326 13f79535-47bb-0310-9956-ffa450edef68 src.test.AllTests.suite AllTests.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.AllTests.suite AllTests.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.AllTests.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 17,
                    "commit message": "added test suites\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430326 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.AllTests.suite AllTests.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.AllTests.suite AllTests.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.AllTests.suite",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 17,
                    "commit message": "added test suites\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@430326 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.AllTests.suite AllTests.java"
                },
                {
                    "commit index": 29,
                    "commit message": "Set EOL-style to native.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@493488 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.AllTests.suite AllTests.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.clone",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 20,
                    "commit message": "make CSVStrategy cloneable and serializable: SANDBOX-181\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@477490 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.clone CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.clone CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.read",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 30,
                    "commit message": "prevent blocking on lookahead after EOL: SANDBOX-173\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@501543 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.escapeAndQuote",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 36,
                    "commit message": "use strategy encapsulator in printer rather than assuming double-quote\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/sandbox/csv/trunk@558885 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.escapeAndQuote CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.readEscape",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.readEscape CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.readEscape CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setEscape",
            "function params": [
                "escape"
            ],
            "commits that changed in": [
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEscape CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setEscape CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEscape CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getEscape CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 38,
                    "commit message": "SANDBOX-206: add escape to strategy, turn off backslash-style escaping by default\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609155 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces",
            "function params": [
                "ignoreTrailingWhitespaces"
            ],
            "commits that changed in": [
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces CSVStrategy.java"
                },
                {
                    "commit index": 41,
                    "commit message": "Breaking lines that are > 120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631131 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setIgnoreTrailingWhitespaces CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getIgnoreTrailingWhitespaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreTrailingWhitespaces CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getIgnoreTrailingWhitespaces CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.charAt",
            "function params": [
                "pos"
            ],
            "commits that changed in": [
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.charAt CharBuffer.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.charAt CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 39,
                    "commit message": "SANDBOX-206: fix whitespace handling w/ escaping, add an option to not remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@609327 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace CharBuffer.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 40,
                    "commit message": "Removing System outs - SANDBOX-217\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631129 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkip0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkip0 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testConstructors",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testConstructors ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testConstructors ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkipUntil",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testSkipUntil ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadUntil",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadUntil ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 45,
                    "commit message": "Removing unnecessary suite() methods, object attributes and constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@631847 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.println",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.printSep",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.flush",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.printAndEscape",
            "function params": [
                "value",
                "offset",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 51,
                    "commit message": "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate",
            "function params": [
                "value",
                "offset",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 51,
                    "commit message": "SANDBOX-322: remember to print separators everywhere\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@966014 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.setPrinterNewline",
            "function params": [
                "newline"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setPrinterNewline CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.setPrinterNewline CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVStrategy.getPrinterNewline",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getPrinterNewline CSVStrategy.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVStrategy.getPrinterNewline CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy CSVParserTest.java"
                },
                {
                    "commit index": 50,
                    "commit message": "SANDBOX-313: Endless loops in CSV parser when last line is comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@964273 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testDefaultStrategy CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.equals",
            "function params": [
                "a",
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
                },
                {
                    "commit index": 50,
                    "commit message": "SANDBOX-313: Endless loops in CSV parser when last line is comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@964273 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testRandom",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.printable",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.randStr",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.doRandom",
            "function params": [
                "iter"
            ],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.doOneRandom",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 49,
                    "commit message": "SANDBOX-322: CSVPrinter overhaul\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@955284 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.getRowDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 52,
                    "commit message": "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1003046 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.getRowDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.writer.CSVConfig.setRowDelimiter",
            "function params": [
                "rowDelimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 52,
                    "commit message": "Apply configurable row delimiter by Dmitry Drozdov (SANDBOX-329).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1003046 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.writer.CSVConfig.setRowDelimiter CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringDelimiter CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterDefaults",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterDefaults CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterCRLF CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.getConfig",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.getConfig CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.setUp CSVWriterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.setUp CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringValueDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterIgnoringValueDelimiter CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitRowDelimiterLF CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithoutHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithoutHeader CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.todoTestWriterWithHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.todoTestWriterWithHeader CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitValueDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitValueDelimiter CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 53,
                    "commit message": "CSVWriter.writeValue does not use value delimiter (SANDBOX-243).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1037647 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.writer.CSVWriterTest.testWriterWithExplicitDelimiter CSVWriterTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.isEndOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 55,
                    "commit message": "Fix for issue reported in SANDBOX-218: CSV reader doesn't handle older Mac line endings (\\r) that are also used by recent versions of Excel for Mac.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065496 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isEndOfLine CSVParser.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isEndOfLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter7",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 56,
                    "commit message": "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 56,
                    "commit message": "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 56,
                    "commit message": "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 56,
                    "commit message": "Test cases for the scenarios described in SANDBOX-161:\n* Double quotes (\") should be escaped using two double quotes (\"\"), rather than a backslash (\\\").\n* Embedded line breaks are allowed and don't need to be escaped... just enclose the field in double quotes.\n* Because backslashes are not used to escape double quotes or line breaks, the backslashes themselves do not need to be escaped.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065519 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testLineFeedEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 57,
                    "commit message": "Test cases for \\r and \\n line endings (SANDBOX-218).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065525 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 57,
                    "commit message": "Test cases for \\r and \\n line endings (SANDBOX-218).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065525 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.markSupported",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 60,
                    "commit message": "Applied patch contributed by Henri Yandell in SANDBOX-219: \"ExtendedBufferedReader does too much\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065948 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.markSupported ExtendedBufferedReader.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.markSupported ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.skip",
            "function params": [
                "n"
            ],
            "commits that changed in": [
                {
                    "commit index": 60,
                    "commit message": "Applied patch contributed by Henri Yandell in SANDBOX-219: \"ExtendedBufferedReader does too much\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065948 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.skip ExtendedBufferedReader.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.skip ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.isEndOfFile",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.isEndOfFile CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.CSVParser.nextValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.CSVParser.nextValue CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader",
            "function params": [
                "r",
                "bufSize"
            ],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.getEBR",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 61,
                    "commit message": "No functional changes are contained in this commit: reformatted Java code to fix several formatting inconsistencies (between classes and within the same class); sorry for the big commit, but I have preferred to isolate into one commit all the formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1065950 13f79535-47bb-0310-9956-ffa450edef68 src.test.org.apache.commons.csv.ExtendedBufferedReaderTest.getEBR ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader",
            "function params": [
                "r",
                "bufSize"
            ],
            "commits that changed in": [
                {
                    "commit index": 65,
                    "commit message": "Removed an unused constructor in ExtendedBufferedReader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199761 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 116,
                    "commit message": "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 446,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461241 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                },
                {
                    "commit index": 446,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461241 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy",
            "function params": [
                "delimiter",
                "encapsulator",
                "commentStart",
                "ignoreLeadingWhitespaces",
                "interpretUnicodeEscapes",
                "ignoreEmptyLines"
            ],
            "commits that changed in": [
                {
                    "commit index": 66,
                    "commit message": "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 66,
                    "commit message": "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 66,
                    "commit message": "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 66,
                    "commit message": "Made the static fields final in CSVStrategy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 68,
                    "commit message": "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 68,
                    "commit message": "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                },
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.CSVStrategy CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getAllValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 67,
                    "commit message": "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java"
                },
                {
                    "commit index": 73,
                    "commit message": "Upgrading to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getAllValues CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.nextToken",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 67,
                    "commit message": "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 67,
                    "commit message": "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 95,
                    "commit message": "Removed the package private method CSVParser.nextToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 114,
                    "commit message": "Minor performance improvement (~2%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299486 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                },
                {
                    "commit index": 124,
                    "commit message": "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextToken CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 67,
                    "commit message": "Changed the visibility of the Token types and the protected methods to package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.unicodeEscapeLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.CSVParser",
            "function params": [
                "input",
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 68,
                    "commit message": "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 68,
                    "commit message": "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 68,
                    "commit message": "Removed the deprecated constructors\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 151,
                    "commit message": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 257,
                    "commit message": "Rename ivar headerMapping -> headerMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383920 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 277,
                    "commit message": "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397549 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 577,
                    "commit message": "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 929,
                    "commit message": "Better method name. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1091,
                    "commit message": "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 84,
                    "commit message": "Updated the Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297043 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                },
                {
                    "commit index": 117,
                    "commit message": "Changed while loops (CSV-55)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.encapsulatedTokenLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 117,
                    "commit message": "Changed while loops (CSV-55)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                },
                {
                    "commit index": 124,
                    "commit message": "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.simpleTokenLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.println",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 73,
                    "commit message": "Upgrading to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 322,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 322,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 478,
                    "commit message": "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 624,
                    "commit message": "[CSV-106] CSVFormat.format always append null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1577011 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 807,
                    "commit message": "Checkstyle: Line has trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742459 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.isTrailingSpacesIgnored",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isTrailingSpacesIgnored CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.isUnicodeEscapesInterpreted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isUnicodeEscapesInterpreted CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.getEncapsulator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getEncapsulator CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.isEmptyLinesIgnored",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isEmptyLinesIgnored CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.getCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getCommentStart CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.getEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getEscape CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.isLeadingSpacesIgnored",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.isLeadingSpacesIgnored CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.clone",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.clone CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.getDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getDelimiter CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVStrategy.getLineSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.getLineSeparator CSVStrategy.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 76,
                    "commit message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 104,
                    "commit message": "Silence Eclipse warning about unthrown Exception\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298217 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 122,
                    "commit message": "Check iterator is done\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300585 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscape CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored",
            "function params": [
                "emptyLinesIgnored"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withEmptyLinesIgnored CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEmptyLinesIgnored CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withEscape",
            "function params": [
                "escape"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withEscape CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 266,
                    "commit message": "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 97,
                    "commit message": "Removed the constructors of CSVFormat from the public API, as well as the DISABLED constant which becomes useless because the special characters are disabled by default in the predefined formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 97,
                    "commit message": "Removed the constructors of CSVFormat from the public API, as well as the DISABLED constant which becomes useless because the special characters are disabled by default in the predefined formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 97,
                    "commit message": "Removed the constructors of CSVFormat from the public API, as well as the DISABLED constant which becomes useless because the special characters are disabled by default in the predefined formats\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 186,
                    "commit message": "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 295,
                    "commit message": "[CSV-88] Not possible to create a CSVFormat from scratch. Should the validate method be public?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397877 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 313,
                    "commit message": "Fix param name and Javadoc to match ivar names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397925 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 313,
                    "commit message": "Fix param name and Javadoc to match ivar names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397925 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 314,
                    "commit message": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 314,
                    "commit message": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 329,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398012 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 329,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398012 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 363,
                    "commit message": "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 363,
                    "commit message": "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 367,
                    "commit message": "Multi-parameter ctor is confusing and unnecessary\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398563 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 389,
                    "commit message": "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 394,
                    "commit message": "Fix formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458139 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 403,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458713 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 404,
                    "commit message": "Replace accidentally checked in tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458721 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 464,
                    "commit message": "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465753 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 464,
                    "commit message": "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465753 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 657,
                    "commit message": "Make CSVFormat constructor package private since it is only used in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592833 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 658,
                    "commit message": "CSV-114 CSVFormat constructor should reject a header array with duplicate entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593076 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 660,
                    "commit message": "tab police\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593097 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 672,
                    "commit message": "Checkstyle: Line is longer than 120 characters (found 141).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 673,
                    "commit message": "Format \"for\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602906 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 674,
                    "commit message": "Checkstyle: '+' should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602907 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 752,
                    "commit message": "[CSV-134] Unified parameter validation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638699 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 795,
                    "commit message": "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742145 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 808,
                    "commit message": "Checkstyle: Line is too long\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742461 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 809,
                    "commit message": "Make parameters final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 809,
                    "commit message": "Make parameters final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted",
            "function params": [
                "unicodeEscapesInterpreted"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withUnicodeEscapesInterpreted CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withUnicodeEscapesInterpreted CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator",
            "function params": [
                "encapsulator"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withEncapsulator CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 266,
                    "commit message": "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withEncapsulator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored",
            "function params": [
                "trailingSpacesIgnored"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withTrailingSpacesIgnored CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingSpacesIgnored CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored",
            "function params": [
                "leadingSpacesIgnored"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withLeadingSpacesIgnored CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLeadingSpacesIgnored CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator",
            "function params": [
                "lineSeparator"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withLineSeparator CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withLineSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart",
            "function params": [
                "commentStart"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withCommentStart CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 266,
                    "commit message": "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentStart CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter",
            "function params": [
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVStrategy.withDelimiter CSVStrategy.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 80,
                    "commit message": "Fixed the immutability of the delimiter in CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200283 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 266,
                    "commit message": "Remove whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397080 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 357,
                    "commit message": "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 357,
                    "commit message": "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 363,
                    "commit message": "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getFormat CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.isWhitespace",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java"
                },
                {
                    "commit index": 120,
                    "commit message": "Perform the cheaper test first\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300531 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isWhitespace CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printSep",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printSep CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter",
            "function params": [
                "out",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 246,
                    "commit message": "Remove extra blank line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383567 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 523,
                    "commit message": "Fix NPE when format is null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508938 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 664,
                    "commit message": "<action issue=\"CSV-120\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat#withHeader doesn't work with CSVPrinter</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1601517 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 768,
                    "commit message": "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1066,
                    "commit message": "Use streams.\nRemove unused imports. src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1091,
                    "commit message": "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1115,
                    "commit message": "Only clone header comments once src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.main.java.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape",
            "function params": [
                "value",
                "offset",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 274,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 320,
                    "commit message": "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 360,
                    "commit message": "Explicit unboxing; associated Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398365 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 490,
                    "commit message": "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEscape CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.print",
            "function params": [
                "value",
                "offset",
                "len",
                "checkForEscape"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 90,
                    "commit message": "Made CSVPrinter.print(char[], int, int, boolean) private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297138 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 274,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 320,
                    "commit message": "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 320,
                    "commit message": "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 322,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 322,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 322,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 322,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398005 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 333,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 334,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398017 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 344,
                    "commit message": "Fix Javadoc and better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398149 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 344,
                    "commit message": "Fix Javadoc and better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398149 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 353,
                    "commit message": "Remove method org.apache.commons.csv.CSVPrinter.print(Object, boolean), it should not have been public in the first place, the format is the API to specify this kind of option.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398276 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 409,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458805 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 487,
                    "commit message": "Document why original object is needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479721 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 490,
                    "commit message": "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 494,
                    "commit message": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 816,
                    "commit message": "[CSV-181] Make CSVPrinter.print(Object) GC-free.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printlnComment",
            "function params": [
                "comment"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printlnComment CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate",
            "function params": [
                "value",
                "offset",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 274,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 320,
                    "commit message": "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                },
                {
                    "commit index": 332,
                    "commit message": "Better lvar names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398015 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndEncapsulate CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVUtils.parse",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.parse CSVUtils.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVUtils.printLine",
            "function params": [
                "values",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                },
                {
                    "commit index": 78,
                    "commit message": "Changed the signature of CSVUtils.printLine() to use varargs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200065 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                },
                {
                    "commit index": 78,
                    "commit message": "Changed the signature of CSVUtils.printLine() to use varargs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200065 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVUtils.printLine CSVUtils.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 71,
                    "commit message": "CSVStrategy is now immutable (SANDBOX-279)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199827 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVStrategyTest.testImmutalibity CSVStrategyTest.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 80,
                    "commit message": "Fixed the immutability of the delimiter in CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200283 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 82,
                    "commit message": "Changed the default line separator to \\r\\n to comply with RFC 4180 (SANDBOX-163)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201115 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 141,
                    "commit message": "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301862 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 235,
                    "commit message": "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307188 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 328,
                    "commit message": "Group quote test fragments together.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398011 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testImmutalibity CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken6 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser",
            "function params": [
                "in",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                },
                {
                    "commit index": 95,
                    "commit message": "Removed the package private method CSVParser.nextToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.TestCSVParser CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 224,
                    "commit message": "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306833 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 233,
                    "commit message": "Reduce dependency on DISABLED package constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307186 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 237,
                    "commit message": "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307205 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 365,
                    "commit message": "PRISTINE can now be private as we have ctor which allows delimiter to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398560 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 557,
                    "commit message": "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 196,
                    "commit message": "Tidy up; rename shared fields to be clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306307 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 198,
                    "commit message": "CSV-84 Clarify comment handling\nFix test case which expected to handle a trailing comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306315 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 204,
                    "commit message": "CSV-84 Clarify comment handling\nTest was wrong; line comment should have been dropped entirely.\nFix record handling accordingly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306342 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 213,
                    "commit message": "Test multiple adjacent comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306650 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 216,
                    "commit message": "Add back trailing comment test (this time with correct expected results)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306660 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 224,
                    "commit message": "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306833 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 233,
                    "commit message": "Reduce dependency on DISABLED package constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307186 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 834,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748096 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testDefaultFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testExcelFormat1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
                },
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDelimiterIsWhitespace CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 88,
                    "commit message": "Added a constructor with a String to CSVParser and removed CSVUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 233,
                    "commit message": "Reduce dependency on DISABLED package constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307186 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 237,
                    "commit message": "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307205 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 365,
                    "commit message": "PRISTINE can now be private as we have ctor which allows delimiter to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398560 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 419,
                    "commit message": "Use Utils class for comparing list of CSVRecords against expectation array\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460194 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 480,
                    "commit message": "Bug in test case result\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478619 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscaping CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter7 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter6 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 98,
                    "commit message": "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandom CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter4 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter5 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinter3 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 89,
                    "commit message": "Varargs for CSVPrinter.println()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 98,
                    "commit message": "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 98,
                    "commit message": "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 224,
                    "commit message": "CSV-69 Eliminate CSVPrinterTest.equals(String[][], String[][]) by using Assert.assertArrayEquals\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306833 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 355,
                    "commit message": "The class implements Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398278 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 431,
                    "commit message": "Avoid Eclipse warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460396 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 563,
                    "commit message": "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.doOneRandom CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVUtilsTest.testParse6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 72,
                    "commit message": "Renamed CSVStrategy to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199842 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVUtilsTest.testParse6 CSVUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.writer.CSVConfig.addField",
            "function params": [
                "field"
            ],
            "commits that changed in": [
                {
                    "commit index": 73,
                    "commit message": "Upgrading to Java 5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.writer.CSVConfig.addField CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                },
                {
                    "commit index": 76,
                    "commit message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                },
                {
                    "commit index": 84,
                    "commit message": "Updated the Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297043 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                },
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.Token",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
                },
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
                },
                {
                    "commit index": 124,
                    "commit message": "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.Token CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken5 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNextToken4 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 74,
                    "commit message": "Turned the token types into an Enum\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199872 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 109,
                    "commit message": "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 170,
                    "commit message": "Don't use == null; use assertNull\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303983 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 196,
                    "commit message": "Tidy up; rename shared fields to be clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306307 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 640,
                    "commit message": "Clean up constant name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLine CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getRecords",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 109,
                    "commit message": "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 172,
                    "commit message": "Rename to avoid hiding class field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304097 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 183,
                    "commit message": "CSV-87 CSVParser.getRecords() returns null rather than empty List at EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305692 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 258,
                    "commit message": "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 642,
                    "commit message": "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 642,
                    "commit message": "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 701,
                    "commit message": "Remove needless method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 701,
                    "commit message": "Remove needless method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610769 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 702,
                    "commit message": "Revert Java 7 diamond notation since JavaNCSS can't handle it\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 709,
                    "commit message": "Make checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617066 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                },
                {
                    "commit index": 1127,
                    "commit message": "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.main.java.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 557,
                    "commit message": "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 557,
                    "commit message": "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 557,
                    "commit message": "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testLineFeedEndings CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.OLDtestBackslashEscaping CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetAllValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 75,
                    "commit message": "Renamed CSVParser.getAllValues() to getRecords()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1199997 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetAllValues CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.iterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 76,
                    "commit message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 109,
                    "commit message": "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 125,
                    "commit message": "CSV-60 CSVParser.iterator().remove() should throw throw new UnsupportedOperationException()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300661 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 126,
                    "commit message": "Not needed outside the iterator\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300664 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 127,
                    "commit message": "It's not a line, it's a record\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300665 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 258,
                    "commit message": "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 302,
                    "commit message": "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 369,
                    "commit message": "Add // TODO comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398749 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 537,
                    "commit message": "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 743,
                    "commit message": "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 862,
                    "commit message": "[CSV-201] Do not use RuntimeException in CSVParser.iterator().new\nIterator() {...}.getNextRecord(). Use an IllegalStateException instead\n(KISS for now, no need for a custom exception) src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                },
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testForEach",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 76,
                    "commit message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 83,
                    "commit message": "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testForEach CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testIterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 76,
                    "commit message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 83,
                    "commit message": "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 128,
                    "commit message": "FIx test due to change in remove() behaviour\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300675 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 520,
                    "commit message": "Document empty block.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508935 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testIterator CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 76,
                    "commit message": "Made CSVParser iterable to simplify the iteration over the records\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200024 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 196,
                    "commit message": "Tidy up; rename shared fields to be clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306307 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 640,
                    "commit message": "Clean up constant name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecords CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java"
                },
                {
                    "commit index": 186,
                    "commit message": "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java"
                },
                {
                    "commit index": 239,
                    "commit message": "CSV-90 CSVFormat isEscaping/isEncapsulating are not public\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1327754 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscaping CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isCommentingDisabled",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingDisabled CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 77,
                    "commit message": "Reduced the constants in CSVFormat for disabling the features to only one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java"
                },
                {
                    "commit index": 186,
                    "commit message": "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java"
                },
                {
                    "commit index": 239,
                    "commit message": "CSV-90 CSVFormat isEscaping/isEncapsulating are not public\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1327754 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEncapsulating CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.writer.CSVConfig.equals",
            "function params": [
                "obj"
            ],
            "commits that changed in": [
                {
                    "commit index": 79,
                    "commit message": "bad logic, should use || rather than &&, but instanceof covers the null case anyway\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200112 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.writer.CSVConfig.equals CSVConfig.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 80,
                    "commit message": "Fixed the immutability of the delimiter in CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1200283 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 100,
                    "commit message": "Added a mutator to CSVFormat to change the trimming behavior at both ends\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298013 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 141,
                    "commit message": "Simplify and avoid boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301862 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 235,
                    "commit message": "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307188 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 328,
                    "commit message": "Group quote test fragments together.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398011 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testMutators CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.clone",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 81,
                    "commit message": "Changed the return type of CSVFormat.clone()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1201060 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.clone CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.parse",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 83,
                    "commit message": "Added a convenient parse() method to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297022 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 1081,
                    "commit message": "Better name. src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 1081,
                    "commit message": "Better name. src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                },
                {
                    "commit index": 1337,
                    "commit message": "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printComment",
            "function params": [
                "comment"
            ],
            "commits that changed in": [
                {
                    "commit index": 85,
                    "commit message": "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 106,
                    "commit message": "Stop Eclipse complaining about fall-through\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298223 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 152,
                    "commit message": "CSV-79 - CSVFormat.isCommentingDisabled() is confusing/confused\nrenamed method to isCommentingEnabled and fixed code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303483 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 274,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397534 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 360,
                    "commit message": "Explicit unboxing; associated Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398365 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 478,
                    "commit message": "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 1066,
                    "commit message": "Use streams.\nRemove unused imports. src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 85,
                    "commit message": "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMultiLineComment CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.printable",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 85,
                    "commit message": "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                },
                {
                    "commit index": 563,
                    "commit message": "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.printable CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 85,
                    "commit message": "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDisabledComment CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 85,
                    "commit message": "Test cases for CSVPrinter.printComment()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297075 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleLineComment CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.append",
            "function params": [
                "sb"
            ],
            "commits that changed in": [
                {
                    "commit index": 86,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297078 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.append CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CharBufferTest.testAppendNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 86,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297078 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testAppendNull CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.format",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 87,
                    "commit message": "Added a convenient format() method in CSVFormat replacing CSVUtils.printLine()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297091 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 247,
                    "commit message": "Replace empty throws that \"should not happen\" with an IllegalStateException.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383569 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 323,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 323,
                    "commit message": "Change the type of printer API to accept Object instead of String.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 324,
                    "commit message": "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398007 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 960,
                    "commit message": "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 1008,
                    "commit message": "[CSV-211] CSVFormat.format trims last delimiter if the delimiter is a white space (#71)\n\n* [CSV-211] fix CSVFormat.format trims last delimiter if the delimiter is a white space\r\n\r\n* [CSV-211] Add JiraCsv211Test src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 1236,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 87,
                    "commit message": "Added a convenient format() method in CSVFormat replacing CSVUtils.printLine()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297091 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testFormat CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 91,
                    "commit message": "Fixed the NullPointerException on null values in CSVPrinter and print an empty value instead (SANDBOX-209)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297306 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintNullValues CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.flush",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 92,
                    "commit message": "Changed CSVPrinter to print to any Appendable and optimized the internals to avoid string copies\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297309 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.isEndOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 95,
                    "commit message": "Removed the package private method CSVParser.nextToken()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isEndOfLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.charAt",
            "function params": [
                "pos"
            ],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.charAt CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.shrink",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.shrink CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.provideCapacity",
            "function params": [
                "capacity"
            ],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.provideCapacity CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                },
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.CharBuffer CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.trimTrailingWhitespace CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.getCharacters",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.getCharacters CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.capacity",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.capacity CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.clear",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.clear CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.length",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.length CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readAgain ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 116,
                    "commit message": "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1093,
                    "commit message": "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1093,
                    "commit message": "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1261,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1261,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1262,
                    "commit message": "Allocate a string look ahead buffer in\nCSVFormat.printWithEscapes(CharSequence, Appendable)\n\nAs opposed to one for each character read. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 96,
                    "commit message": "Made all public methods in CharBuffer and ExtendedBufferedReader package private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297719 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
                },
                {
                    "commit index": 116,
                    "commit message": "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLineNumber ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 98,
                    "commit message": "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 563,
                    "commit message": "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.randStr CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom",
            "function params": [
                "format",
                "iter"
            ],
            "commits that changed in": [
                {
                    "commit index": 98,
                    "commit message": "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 98,
                    "commit message": "Added a predefined format for MySQL (SANDBOX-410)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1297944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 563,
                    "commit message": "Make members private, they are only needed in this test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512614 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.doRandom CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.readEscape",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.readEscape CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isHexadecimal",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isHexadecimal UnicodeUnescapeReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read",
            "function params": [
                "cbuf",
                "off",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java"
                },
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java"
                },
                {
                    "commit index": 121,
                    "commit message": "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java"
                },
                {
                    "commit index": 121,
                    "commit message": "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.read UnicodeUnescapeReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.UnicodeUnescapeReader",
            "function params": [
                "reader"
            ],
            "commits that changed in": [
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.UnicodeUnescapeReader UnicodeUnescapeReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 99,
                    "commit message": "Replaced the unicode escaping code from the parser with a class implementing java.io.Reader\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.close UnicodeUnescapeReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored",
            "function params": [
                "surroundingSpacesIgnored"
            ],
            "commits that changed in": [
                {
                    "commit index": 100,
                    "commit message": "Added a mutator to CSVFormat to change the trimming behavior at both ends\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298013 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSurroundingSpacesIgnored CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
                },
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
                },
                {
                    "commit index": 258,
                    "commit message": "Sort methods in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383924 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getLineNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.CSVLexer",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.CSVLexer CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken1 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer",
            "function params": [
                "input",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.getLexer CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken4 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                },
                {
                    "commit index": 226,
                    "commit message": "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken5 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testDelimiterIsWhitespace CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals",
            "function params": [
                "expectedType",
                "expectedContent",
                "token"
            ],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.assertTokenEquals CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 193,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nIntroduce COMMENT type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306064 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 206,
                    "commit message": "Make lines clearer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306414 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 207,
                    "commit message": "Don't detect comments except at start of a line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306422 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 208,
                    "commit message": "Add a trailing comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306432 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 212,
                    "commit message": "Fix readLine() so can still detect start of line next time round\nAlso fix broken test: format was set to ignore empty lines, yet it checked for one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306649 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 219,
                    "commit message": "Have to check for comment after dealing with empty lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306667 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 101,
                    "commit message": "Extracted the lexer from CSVParser in a distinct class (suggested by Bob Smith)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298033 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 113,
                    "commit message": "Removed the volatile modifier on the fields in CSVFormat to improve the performances\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299479 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 189,
                    "commit message": "Use super-class rather than specific implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken6 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.validate",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 256,
                    "commit message": "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 293,
                    "commit message": "Use the single quote char to delineate a char in error messages. Remove a trailing space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397872 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 294,
                    "commit message": "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 296,
                    "commit message": "Add missing single-quote\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397878 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 306,
                    "commit message": "Validation checks the delimiter character cannot be null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397909 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 314,
                    "commit message": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397927 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 315,
                    "commit message": "Delimiter is not optional so change back type from Character to char. The side effect is that the \"pristine\" format must be built with somekind of default (',') seems reasonable. The comment used to say \"no settings defined\" but that was not true, since false was passed in for two values instead of null. IMO, this is all due to the fluent API making this part of the code a little more tricky.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397930 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 343,
                    "commit message": "Validation fails if no quotes mode set but no escape character is set.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398148 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 358,
                    "commit message": "Explicit unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398354 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 359,
                    "commit message": "Invalid use of == to compare Character equality; add tests to detect this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398357 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 517,
                    "commit message": "Validate that headers do not contain duplicates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 658,
                    "commit message": "CSV-114 CSVFormat constructor should reject a header array with duplicate entries\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593076 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 688,
                    "commit message": "Make Checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609552 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 694,
                    "commit message": "Clearify handling of record separators and remove senseless validation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610492 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 752,
                    "commit message": "[CSV-134] Unified parameter validation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638699 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 951,
                    "commit message": "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1168,
                    "commit message": "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1172,
                    "commit message": "Use final and lambda shorthand src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1230,
                    "commit message": "changing the exception message to be more meaningful src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1255,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1260,
                    "commit message": "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 357,
                    "commit message": "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 357,
                    "commit message": "Now that delimiter is a char, simplify API by removing withDelimiter(Character)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 389,
                    "commit message": "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 389,
                    "commit message": "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 561,
                    "commit message": "Sort members alphabetically\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512606 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 562,
                    "commit message": "Methods are no longer used in test code. Make them private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512610 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 562,
                    "commit message": "Methods are no longer used in test code. Make them private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512610 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 108,
                    "commit message": "Validation of the format parameters (suggested by Bob Smith in SANDBOX-291)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298234 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 115,
                    "commit message": "Serialization test for CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299580 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 294,
                    "commit message": "CSVFormat.validate() throws IllegalStateException instead of IllegalArgumentException because the method validates the state of the object.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397876 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 343,
                    "commit message": "Validation fails if no quotes mode set but no escape character is set.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398148 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 359,
                    "commit message": "Invalid use of == to compare Character equality; add tests to detect this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398357 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                },
                {
                    "commit index": 363,
                    "commit message": "Add ctor to create simplest possible CSV parser\nDoes not make sense to allow delim = EOL in ctor but disable it in withDelimiter()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testValidation CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 109,
                    "commit message": "Renamed CSVParser.getLine() into getRecord() to avoid confusions since a record can span several lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/sandbox/csv/trunk@1298333 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 117,
                    "commit message": "Changed while loops (CSV-55)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 193,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nIntroduce COMMENT type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306064 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 204,
                    "commit message": "CSV-84 Clarify comment handling\nTest was wrong; line comment should have been dropped entirely.\nFix record handling accordingly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306342 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 256,
                    "commit message": "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 257,
                    "commit message": "Rename ivar headerMapping -> headerMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383920 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                },
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecord CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 115,
                    "commit message": "Serialization test for CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299580 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 680,
                    "commit message": "Better error message in test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testSerialization CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read",
            "function params": [
                "buf",
                "off",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 116,
                    "commit message": "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 116,
                    "commit message": "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 121,
                    "commit message": "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 121,
                    "commit message": "Rename local variables to make them easier to read\nl (ell) looks rather like 1 (one)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300540 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 184,
                    "commit message": "CSV-75 ExtendedBufferReader does not handle EOL consistently\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 184,
                    "commit message": "CSV-75 ExtendedBufferReader does not handle EOL consistently\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 245,
                    "commit message": "Refactor '\\r' and '\\n' into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383564 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 245,
                    "commit message": "Refactor '\\r' and '\\n' into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383564 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 725,
                    "commit message": "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 725,
                    "commit message": "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 813,
                    "commit message": "PMD: Remove useless parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742468 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1018,
                    "commit message": "[CSV-149]/[CSV-195] fix line number is not proper at EOF (#60) src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1021,
                    "commit message": "Fix checkstyle src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1064,
                    "commit message": "Add PMD check to default goal and fix only 2 remaining PMD warnings. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1068,
                    "commit message": "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader (#5)\n\n* Fix eol checking for read array in ExtendedBufferedReader\r\n\r\n* Add test for eol checking when reading to different buffers\r\n\r\nCo-authored-by: mirasrael <d_signer@mail.ru>\r\nCo-authored-by: Alexander Bondarev <alexander.bondarev@thomsonreuters.com> src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1261,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1322,
                    "commit message": "Use the same internal name as LineNumberReader src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1322,
                    "commit message": "Use the same internal name as LineNumberReader src.main.java.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 116,
                    "commit message": "Optimized ExtendedBufferedReader as suggested by Bob Smith in CSV-42 (improves the performance by 30%)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1299618 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 212,
                    "commit message": "Fix readLine() so can still detect start of line next time round\nAlso fix broken test: format was set to ignore empty lines, yet it checked for one\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306649 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 245,
                    "commit message": "Refactor '\\r' and '\\n' into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383564 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1095,
                    "commit message": "[CSV-265] Update buffer position when reading line comment (#120)\n\n* [CSV-265] Add JiraCsv265Test\r\n\r\n* [CSV-265] Update buffer position when reading line comment\r\n\r\n* Update JiraCsv265Test.java\r\n\r\nFile should end in a new line.\r\n\r\nCo-authored-by: Tyler King <tylerking001@hotmail.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com> src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CharBuffer.ensureCapacity",
            "function params": [
                "capacity"
            ],
            "commits that changed in": [
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CharBuffer.ensureCapacity CharBuffer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CharBufferTest.testSimpleAppend",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testSimpleAppend CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CharBufferTest.testProvideCapacity",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 118,
                    "commit message": "Removed unused methods from CharBuffer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300491 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testProvideCapacity CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isUnicodeSequence",
            "function params": [
                "sequence"
            ],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.UnicodeUnescapeReader.isUnicodeSequence UnicodeUnescapeReader.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CharBufferTest.testTrim",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CharBufferTest.testTrim CharBufferTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 146,
                    "commit message": "Add test for CSV-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301971 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 185,
                    "commit message": "CSV-75 ExtendedBufferReader does not handle EOL consistently\nFix tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305695 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2 ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 119,
                    "commit message": "Improved test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 145,
                    "commit message": "Simplify assertions, and provide details if the strings are not equal\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 147,
                    "commit message": "Simplify\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301973 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1069,
                    "commit message": "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 123,
                    "commit message": "Check that Unicode works with the MYSQL format which uses backslash as its escape character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300591 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java"
                },
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testUnicodeEscapeMySQL CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.trimTrailingSpaces",
            "function params": [
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 124,
                    "commit message": "Replaced CharBuffer with StringBuilder (CSV-59)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300659 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.trimTrailingSpaces CSVParser.java"
                },
                {
                    "commit index": 133,
                    "commit message": "Optimized trimTrailingSpaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300780 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.trimTrailingSpaces CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.Token",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.Token CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.getLineNumber CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.nextToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 164,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience methods from Lexer parent class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 166,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience fields from Lexer parent class; missed one method replacement earlier\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 167,
                    "commit message": "Oops - fix bug introduced in r1303933 \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303948 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 168,
                    "commit message": "CSV-80 - CSVLexer.nextToken does not need wsBuf\nremove useless wsBuf\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303955 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 171,
                    "commit message": "CSV-81 Token.Type.isReady could perhaps be removed\nNot removed, but only set on EOF if there is data to return\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303988 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 193,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nIntroduce COMMENT type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306064 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 194,
                    "commit message": "lastChar cannot possibly be EOF if it is CR, LF or UNDEFINED\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306073 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 200,
                    "commit message": "Add method for detecting start of line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306321 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 202,
                    "commit message": "Revert r1306321 - committed wrong file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306324 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 203,
                    "commit message": "CSV-84 Clarify comment handling\nFix code so comment only detected at start of a line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306325 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 211,
                    "commit message": "Misplaced comment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306643 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 219,
                    "commit message": "Have to check for comment after dealing with empty lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306667 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 222,
                    "commit message": "We don't care if trailing LF has been consumed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306797 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 253,
                    "commit message": "Rename pname from 'tkn' to 'token'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383583 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 253,
                    "commit message": "Rename pname from 'tkn' to 'token'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383583 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 288,
                    "commit message": "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 311,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397923 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 417,
                    "commit message": "Method names should start with a verb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 497,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 498,
                    "commit message": "Fix possible NPE reported by FindBugs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495269 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.nextToken CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isWhitespace",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isWhitespace CSVLexer.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isWhitespace CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isEndOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEndOfLine CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.readEscape",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.readEscape CSVLexer.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.readEscape CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isEndOfFile",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEndOfFile CSVLexer.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEndOfFile CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 161,
                    "commit message": "Allow class to be instantiated dynamically\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303879 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 443,
                    "commit message": "Make internal API package private.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461237 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                },
                {
                    "commit index": 553,
                    "commit message": "Make fields private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511015 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.CSVLexer CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 164,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience methods from Lexer parent class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 166,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience fields from Lexer parent class; missed one method replacement earlier\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 171,
                    "commit message": "CSV-81 Token.Type.isReady could perhaps be removed\nNot removed, but only set on EOF if there is data to return\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303988 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 195,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nSimplify; remove while(true) loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 217,
                    "commit message": "Checking the token type seems to be quite slow\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306663 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 311,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397923 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.simpleTokenLexer CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.trimTrailingSpaces",
            "function params": [
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.trimTrailingSpaces CSVLexer.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.trimTrailingSpaces CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 134,
                    "commit message": "Moved the lexer in a separate file\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300850 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 164,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nUse convenience methods from Lexer parent class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303904 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 171,
                    "commit message": "CSV-81 Token.Type.isReady could perhaps be removed\nNot removed, but only set on EOF if there is data to return\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303988 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 236,
                    "commit message": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307201 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 256,
                    "commit message": "Last of the Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383758 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 311,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397923 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.encapsulatedTokenLexer CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 135,
                    "commit message": "Update to JUnit 4.10 from 3.8.1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1300977 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 136,
                    "commit message": "Static imports in the unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301084 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 181,
                    "commit message": "Use JUnit 4 assertions for arrays\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305674 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 557,
                    "commit message": "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 984,
                    "commit message": "Fix typos in site and test #53 src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withHeader",
            "function params": [
                "header"
            ],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 143,
                    "commit message": "CSV-67 UnicodeUnescapeReader should not be applied before parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301928 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 252,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383582 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 798,
                    "commit message": "CSV-180: Add withHeader(Class<? extends Enum>) to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742169 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 799,
                    "commit message": "Delegate to withHeader(String[]) instead of calling the long constructor directly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742170 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 817,
                    "commit message": "Sort 1 method into place.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742957 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 826,
                    "commit message": "Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743530 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                },
                {
                    "commit index": 514,
                    "commit message": "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.initializeHeader",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 139,
                    "commit message": "Explict boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301860 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 151,
                    "commit message": "headerMapping is only created once, so make it final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 172,
                    "commit message": "Rename to avoid hiding class field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304097 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 259,
                    "commit message": "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 448,
                    "commit message": "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461307 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 514,
                    "commit message": "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 610,
                    "commit message": "The local variable record is hiding a field from type CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1558888 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 650,
                    "commit message": "CSV-112: HeaderMap is inconsistent when it is parsed from an input with duplicate columns names. Reported by Romain Goss\u00e9\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592371 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 651,
                    "commit message": "Make checkstyle happy (line is longer than 120 characters)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 652,
                    "commit message": "Fix checkstyle error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592600 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 661,
                    "commit message": "CSV-113 Check whether ISE/IAE are being used appropriately\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1593148 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 675,
                    "commit message": "Checkstyle: '+' should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 689,
                    "commit message": "CSV-122: NullPointerException when empty header string and and null string of \"\". Thanks to Mike Lewis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 709,
                    "commit message": "Make checkstyle happy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617066 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 810,
                    "commit message": "Checkstyle: Operator should be on the previous line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 811,
                    "commit message": "Simplify boolean expression: emptyHeader will always be true when reached.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742466 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                },
                {
                    "commit index": 923,
                    "commit message": "Redundant specification of type arguments. src.main.java.org.apache.commons.csv.CSVParser.initializeHeader CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord",
            "function params": [
                "values",
                "mapping"
            ],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 408,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458803 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 723,
                    "commit message": "CSV-124 replace string concatenation with StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 741,
                    "commit message": "Checkstyle: line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635147 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                },
                {
                    "commit index": 1037,
                    "commit message": "Refactor and reuse constant. src.main.java.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.get",
            "function params": [
                "i"
            ],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 140,
                    "commit message": "@Override; explicit unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301861 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 268,
                    "commit message": "Add CVSRecord.isMapped(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397094 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 271,
                    "commit message": "Add CVSRecord.isSet(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 408,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458803 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 524,
                    "commit message": "Fix boxing and unboxing warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508940 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 723,
                    "commit message": "CSV-124 replace string concatenation with StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 989,
                    "commit message": "Let a null input to CSVRecord#get(Enum) fail in CSVRecord#get(String). src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.values",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
                },
                {
                    "commit index": 530,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509231 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
                },
                {
                    "commit index": 1099,
                    "commit message": "[CSV-291] Make CSVRecord#values() public. src.main.java.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.iterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java"
                },
                {
                    "commit index": 616,
                    "commit message": "Internal refactoring. If we have a toMap, a toList makes sense (which is already needed internally).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560003 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.size",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.size CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.size CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 150,
                    "commit message": "eol native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302383 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 722,
                    "commit message": "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 723,
                    "commit message": "CSV-124 replace string concatenation with StringBuilder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624061 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 724,
                    "commit message": "revert tostring implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624273 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 950,
                    "commit message": "Prepare for release 1.7.\n\n- There is no longer site archives. We forgot to do it for 1.6 but the\nsites are still in svn.\n- The Javadoc archives now point to the same place GitHub uses:\njavadoc.io\n- Checkstyle fixes. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                },
                {
                    "commit index": 951,
                    "commit message": "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.main.java.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 437,
                    "commit message": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 268,
                    "commit message": "Add CVSRecord.isMapped(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 437,
                    "commit message": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.equals",
            "function params": [
                "a",
                "b"
            ],
            "commits that changed in": [
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
                },
                {
                    "commit index": 138,
                    "commit message": "Header support (CSV-65)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301852 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
                },
                {
                    "commit index": 197,
                    "commit message": "Give a bit more detail when reporting an error\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306313 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.equals CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.main",
            "function params": [
                "args"
            ],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 148,
                    "commit message": "Add tests of ExtendedBufferedReader for comparison\nAllow tests to be configured dynamically\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302037 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 159,
                    "commit message": "Add direct lexer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303719 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 160,
                    "commit message": "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 289,
                    "commit message": "Use locally stored big file as per perf/PerformanceTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397851 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 494,
                    "commit message": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 638,
                    "commit message": "Ensure resources are released\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582817 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 1051,
                    "commit message": "Minor Improvement: (#130)\n\n* System.arraycopy\r\n* Remove redundant initializer\r\n* Use empty array src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 1094,
                    "commit message": "CSV-286: Cleanup and Document Performance Test Harness (#170) src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 1304,
                    "commit message": "Convert cascading if-else to switch src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.PerformanceTest.main PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 969,
                    "commit message": "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.PerformanceTest.testParseCommonsCSV PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.Stats",
            "function params": [
                "c",
                "f"
            ],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.Stats PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.readAll",
            "function params": [
                "in",
                "split"
            ],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.readAll PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.show",
            "function params": [
                "msg",
                "s",
                "start"
            ],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 262,
                    "commit message": "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397071 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 1033,
                    "commit message": "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 1033,
                    "commit message": "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.PerformanceTest.show PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile",
            "function params": [
                "split"
            ],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testReadBigFile PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.iterate",
            "function params": [
                "it"
            ],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.iterate PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.getReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 142,
                    "commit message": "Initial checkin of test harness\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301864 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getReader PerformanceTest.java"
                },
                {
                    "commit index": 289,
                    "commit message": "Use locally stored big file as per perf/PerformanceTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397851 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getReader PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 146,
                    "commit message": "Add test for CSV-75\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1301971 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 185,
                    "commit message": "CSV-75 ExtendedBufferReader does not handle EOL consistently\nFix tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305695 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 521,
                    "commit message": "Document empty block. Formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1069,
                    "commit message": "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1284,
                    "commit message": "Use Checkstyle WhitespaceAfter src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1321,
                    "commit message": "Add test assertions src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer",
            "function params": [
                "makeString"
            ],
            "commits that changed in": [
                {
                    "commit index": 148,
                    "commit message": "Add tests of ExtendedBufferedReader for comparison\nAllow tests to be configured dynamically\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302037 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 149,
                    "commit message": "create strings for each field\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1302039 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 159,
                    "commit message": "Add direct lexer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303719 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.test.java.org.apache.commons.csv.PerformanceTest.testExtendedBuffer PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 152,
                    "commit message": "CSV-79 - CSVFormat.isCommentingDisabled() is confusing/confused\nrenamed method to isCommentingEnabled and fixed code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303483 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java"
                },
                {
                    "commit index": 186,
                    "commit message": "Calculate the booleans once; prepares for CSV-78\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305700 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentingEnabled CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Token.reset",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 156,
                    "commit message": "Move Token into separate file for more flexibility\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303506 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.reset Token.java"
                },
                {
                    "commit index": 304,
                    "commit message": "org.apache.commons.csv.Token.reset() does not need to return itself. Save a return.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397906 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.reset Token.java"
                },
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.Token.reset Token.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.getLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getLineNumber Lexer.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getLineNumber Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isEndOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfLine Lexer.java"
                },
                {
                    "commit index": 262,
                    "commit message": "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397071 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfLine Lexer.java"
                },
                {
                    "commit index": 275,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfLine Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.Lexer",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 162,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 165,
                    "commit message": "Additional convenience fields\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303929 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 288,
                    "commit message": "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 291,
                    "commit message": "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 292,
                    "commit message": "Rename method nullMeansDisabled() to mapNullToDisabled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397864 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 575,
                    "commit message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512650 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1093,
                    "commit message": "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1259,
                    "commit message": "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                },
                {
                    "commit index": 1318,
                    "commit message": "[CSV-150] Escaping is not disableable src.main.java.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isWhitespace",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 262,
                    "commit message": "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397071 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 423,
                    "commit message": "Sort methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460348 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 482,
                    "commit message": "Use isDelimiter method instead of != check. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478655 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.readEscape",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 226,
                    "commit message": "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 275,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 285,
                    "commit message": "Rename constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397772 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 481,
                    "commit message": "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 484,
                    "commit message": "Extract check for metaChar\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                },
                {
                    "commit index": 1313,
                    "commit message": "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.main.java.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces",
            "function params": [
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
                },
                {
                    "commit index": 1249,
                    "commit message": "Yse -- src.main.java.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isEndOfFile",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 157,
                    "commit message": "Make it easy to provide an alternative lexer if required\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303620 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer",
            "function params": [
                "newToken",
                "test"
            ],
            "commits that changed in": [
                {
                    "commit index": 159,
                    "commit message": "Add direct lexer tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303719 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 160,
                    "commit message": "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 190,
                    "commit message": "More info\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306046 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 209,
                    "commit message": "Allow for new COMMENT token type\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306516 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testCSVLexer PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor",
            "function params": [
                "clazz"
            ],
            "commits that changed in": [
                {
                    "commit index": 160,
                    "commit message": "Allow testing of dynamically loaded CSVLexers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303878 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 370,
                    "commit message": "Alignment\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398847 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 447,
                    "commit message": "Minor clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461302 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.getLexerCtor PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isCommentStart",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 162,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 291,
                    "commit message": "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 575,
                    "commit message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512650 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isEncapsulator",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 162,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java"
                },
                {
                    "commit index": 291,
                    "commit message": "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEncapsulator Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isDelimiter",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 162,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1090,
                    "commit message": "CSV-279: Optimize Lexer Delimiter Check for One Character Delimiter (#163) src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1093,
                    "commit message": "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1285,
                    "commit message": "Add Checkstyle rules src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isEscape",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 162,
                    "commit message": "CSV-71 - Add convenience Methods to CSVLexer\nAdded methods to Lexer parent class (updated CSVLexer to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303882 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 291,
                    "commit message": "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1.nextToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 163,
                    "commit message": "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 304,
                    "commit message": "org.apache.commons.csv.Token.reset() does not need to return itself. Save a return.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397906 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.nextToken CSVLexer1.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 163,
                    "commit message": "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.encapsulatedTokenLexer CSVLexer1.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 163,
                    "commit message": "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1 CSVLexer1.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1 CSVLexer1.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.CSVLexer1 CSVLexer1.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 163,
                    "commit message": "Temporary copy of original CSVLexer for performance comparison.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1303901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 192,
                    "commit message": "CSV-70 Improve readability of CSVLexer\nRemove unnecessary parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306062 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1.simpleTokenLexer CSVLexer1.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 173,
                    "commit message": "Add basic toString method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1304462 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 180,
                    "commit message": "Add more info to toString() method; use space separator for clarity\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305669 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 333,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 351,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398186 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 602,
                    "commit message": "Add output of the nullString to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522879 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 603,
                    "commit message": "Add output of header record skipping to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522880 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 605,
                    "commit message": "Add output of recordSeparator to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522887 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 606,
                    "commit message": "Add output of the header array to toString implementation\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522890 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 963,
                    "commit message": "Show quote mode if not null src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 980,
                    "commit message": "Remove trailing white spaces on all lines. src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isSurroundingSpacesIgnored",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 176,
                    "commit message": "CSV-54 Confusing semantic of the ignore leading/trailing spaces parameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isSurroundingSpacesIgnored CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 179,
                    "commit message": "Test empty files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305668 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 1049,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFile CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 182,
                    "commit message": "Added tests for line counting by the parser (CSV-75)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305689 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 237,
                    "commit message": "Use public CRLF constant\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307205 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 182,
                    "commit message": "Added tests for line counting by the parser (CSV-75)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305689 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 182,
                    "commit message": "Added tests for line counting by the parser (CSV-75)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305689 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 278,
                    "commit message": "More constants clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397556 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 188,
                    "commit message": "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.readTestData CSVFileParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 188,
                    "commit message": "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 243,
                    "commit message": "Remove unneeded @SuppressWarnings(\"unused\") \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383557 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 722,
                    "commit message": "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 775,
                    "commit message": "FindBugs: Avoid possible NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725345 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 948,
                    "commit message": "Camel-case name. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 969,
                    "commit message": "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 1047,
                    "commit message": "Use Stream.of() and rename new method to be like Collection#stream()\ninstead of toStream(). src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFileParserTest.generateData CSVFileParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 188,
                    "commit message": "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 205,
                    "commit message": "Handle CommentStart option\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306345 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 365,
                    "commit message": "PRISTINE can now be private as we have ctor which allows delimiter to be specified\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398560 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 437,
                    "commit message": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 494,
                    "commit message": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 511,
                    "commit message": "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508510 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 669,
                    "commit message": "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 722,
                    "commit message": "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 1002,
                    "commit message": "Fix the old test case record.getComment() will never be null (#62)\n\n* The old test case record.getComment() will never be null and if record.getComment() be null the test code misplace the null test.\r\nAdd a new test file that record.getComment() will be null and test record.getComment() no null before using\r\n\r\n* keep the caching of \"record.getComment()\" src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVFile CSVFileParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest",
            "function params": [
                "file"
            ],
            "commits that changed in": [
                {
                    "commit index": 188,
                    "commit message": "Add CSV file parser test case runner\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1305919 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java"
                },
                {
                    "commit index": 722,
                    "commit message": "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest CSVFileParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Token.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 191,
                    "commit message": "Provide toString method for IDE debugging\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306047 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.toString Token.java"
                },
                {
                    "commit index": 225,
                    "commit message": "More debug\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306889 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.toString Token.java"
                },
                {
                    "commit index": 254,
                    "commit message": "Fix Checkstyle: Format for 120 line length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383598 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Token.toString Token.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isStartOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 201,
                    "commit message": "Add method for detecting start of line\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306322 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 275,
                    "commit message": "Refactor magic strings into constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397536 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 210,
                    "commit message": "Add experimental state-driven lexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306519 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3 CSVLexer3.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3 CSVLexer3.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.CSVLexer3 CSVLexer3.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer3.nextToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 210,
                    "commit message": "Add experimental state-driven lexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306519 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.nextToken CSVLexer3.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer3.classify",
            "function params": [
                "intch"
            ],
            "commits that changed in": [
                {
                    "commit index": 210,
                    "commit message": "Add experimental state-driven lexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306519 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java"
                },
                {
                    "commit index": 276,
                    "commit message": "Refactor constants from various classes into a package private Constants class and use static imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397541 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer3.classify CSVLexer3.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 214,
                    "commit message": "Test with empty lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306651 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 215,
                    "commit message": "Add a few more blank lines to the test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306659 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken2EmptyLines CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer130663.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 218,
                    "commit message": "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.simpleTokenLexer CSVLexer130663.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer130663.nextToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 218,
                    "commit message": "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.nextToken CSVLexer130663.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer130663.encapsulatedTokenLexer",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 218,
                    "commit message": "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.encapsulatedTokenLexer CSVLexer130663.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer130663.CSVLexer130663",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 218,
                    "commit message": "Save current lexer for comparisons\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306664 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer130663.CSVLexer130663 CSVLexer130663.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 221,
                    "commit message": "Fix revision\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306789 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663 CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663 CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.CSVLexer1306663 CSVLexer1306663.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.Utils.compare",
            "function params": [
                "message",
                "expected",
                "actual"
            ],
            "commits that changed in": [
                {
                    "commit index": 223,
                    "commit message": "CSV-69 Utility methods for comparing results\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306828 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 223,
                    "commit message": "CSV-69 Utility methods for comparing results\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306828 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 565,
                    "commit message": "Remove unused method. It made no sense anyway, since Assert.assertArrayEquals is capable of comparing multi dimensional arrays.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512617 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 776,
                    "commit message": "Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725356 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.Utils.compare Utils.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.Utils.Utils",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 223,
                    "commit message": "CSV-69 Utility methods for comparing results\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306828 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.Utils.Utils Utils.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.Utils.Utils Utils.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 226,
                    "commit message": "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3BadEscaping CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 226,
                    "commit message": "Improve escape tests\nFix bug in readEscape() - was not handling EOF\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306890 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 227,
                    "commit message": "CSV-35 add test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306896 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                },
                {
                    "commit index": 456,
                    "commit message": "Replace assertTokenEquals with Token matcher\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465692 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testNextToken3Escaping CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 228,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1306947 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getComment CSVRecord.java"
                },
                {
                    "commit index": 530,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509231 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getComment CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 230,
                    "commit message": "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.encapsulatedTokenLexer CSVLexer1306667.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667",
            "function params": [
                "format",
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 230,
                    "commit message": "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667 CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667 CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.CSVLexer1306667 CSVLexer1306667.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 230,
                    "commit message": "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 288,
                    "commit message": "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.nextToken CSVLexer1306667.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 230,
                    "commit message": "Another baseline\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307043 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306667.simpleTokenLexer CSVLexer1306667.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 231,
                    "commit message": "Add test for CSV-57\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307068 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 316,
                    "commit message": "Better lvar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397998 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCSV57 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 232,
                    "commit message": "CSV-85 Allow comments to be returned in CSVRecord\nAdded test for comment before header\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1307078 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 437,
                    "commit message": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderComment CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.println",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java"
                },
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java"
                },
                {
                    "commit index": 356,
                    "commit message": "Unused\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398343 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.println PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 279,
                    "commit message": "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 279,
                    "commit message": "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1085,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFile PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java"
                },
                {
                    "commit index": 279,
                    "commit message": "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.readAll PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 986,
                    "commit message": "Fixtypo in the PerformanceTest (#55) src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
                },
                {
                    "commit index": 1311,
                    "commit message": "Rename internal method src.test.java.org.apache.commons.csv.perf.PerformanceTest.testReadBigFile PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 279,
                    "commit message": "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 279,
                    "commit message": "Allow performance test to traverse column values (optional).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397559 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 654,
                    "commit message": "Avoid IDE warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 1085,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 1085,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.perf.PerformanceTest.parse PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.getBufferedReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 240,
                    "commit message": "Fix compilation issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.getBufferedReader PerformanceTest.java"
                },
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.getBufferedReader PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 288,
                    "commit message": "Rename ivar to ignoreEmptyLines to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397785 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.nextToken CSVLexer1306663.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 250,
                    "commit message": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383577 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 299,
                    "commit message": "Let the line number count be a long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.encapsulatedTokenLexer CSVLexer1306663.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 259,
                    "commit message": "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 512,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 609,
                    "commit message": "[CSV-100] CSVParser: getHeaderMap throws NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1524435 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 1091,
                    "commit message": "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 259,
                    "commit message": "[CVS-92] Need a way to extract parsed headers, e.g. for use in formatting output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1383934 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 413,
                    "commit message": "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460125 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderMap CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines",
            "function params": [
                "ignoreEmptyLines"
            ],
            "commits that changed in": [
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces",
            "function params": [
                "ignoreSurroundingSpaces"
            ],
            "commits that changed in": [
                {
                    "commit index": 267,
                    "commit message": "Rename ivars that were in the past tense to use the imperative style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397087 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.isMapped",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 268,
                    "commit message": "Add CVSRecord.isMapped(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397094 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                },
                {
                    "commit index": 655,
                    "commit message": "CSV-115: Simplify boolean expressions in CSVRecord. This also closes #1 from github. Thanks to Furkan Kamaci.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592822 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 269,
                    "commit message": "Better performance tests. Provide a test CSV file to work with. Tests depends on Commons IO to help decompress the large-ish CSV test file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397119 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java"
                },
                {
                    "commit index": 638,
                    "commit message": "Ensure resources are released\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582817 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java"
                },
                {
                    "commit index": 1085,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java"
                },
                {
                    "commit index": 1092,
                    "commit message": "CSV-284: Formalize PerformanceTest (#168)\n\n* CSV-284: Formalize PerformanceTest\r\n\r\n* Revert some changes src.test.java.org.apache.commons.csv.perf.PerformanceTest.setUpClass PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 270,
                    "commit message": "Use final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397122 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 287,
                    "commit message": "Rename ivar to ignoreSurroundingSpaces to match CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397784 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java"
                },
                {
                    "commit index": 312,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397924 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexer1306663.simpleTokenLexer CSVLexer1306663.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.isSet",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 271,
                    "commit message": "Add CVSRecord.isSet(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 982,
                    "commit message": "Add CSVRecord.isSet(int) method (#52)\n\n* Add CSVRecord.isSet(int) method\r\n\r\n* Remove unnecessary unboxing\r\n\r\n* Revert: Remove unnecessary unboxing src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 983,
                    "commit message": "[CSV-255] Add CSVRecord.isSet(int) method #52.\n\nLess cryptic parameter name. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 983,
                    "commit message": "[CSV-255] Add CSVRecord.isSet(int) method #52.\n\nLess cryptic parameter name. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 271,
                    "commit message": "Add CVSRecord.isSet(String) API.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397136 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 413,
                    "commit message": "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460125 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 437,
                    "commit message": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 450,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1462110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentStart CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentStart CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEscape CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEscape CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getEncapsulator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 286,
                    "commit message": "Remove DISABLED character hack.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397783 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEncapsulator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.nullMeansDisabled",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 291,
                    "commit message": "[CSV-94] Lexer should only use char fields.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397863 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.nullMeansDisabled Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 292,
                    "commit message": "Rename method nullMeansDisabled() to mapNullToDisabled()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397864 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 559,
                    "commit message": "No need to declare private method final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512398 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 1316,
                    "commit message": "CSVFormat does not support explicit \" as escape char src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                },
                {
                    "commit index": 1317,
                    "commit message": "Revert \"CSVFormat does not support explicit \" as escape char\"\n\nThis reverts commit 28acf1138b64c889a520c190464ad1d16862dd41. src.main.java.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getRecordNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getRecordNumber CSVRecord.java"
                },
                {
                    "commit index": 530,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509231 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getRecordNumber CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers",
            "function params": [
                "lineSeparator"
            ],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 413,
                    "commit message": "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460125 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordNumbers CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiiLineValues CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers",
            "function params": [
                "lineSeparator"
            ],
            "commits that changed in": [
                {
                    "commit index": 298,
                    "commit message": "[CSV-52] Keep track of record numbers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397895 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1018,
                    "commit message": "[CSV-149]/[CSV-195] fix line number is not proper at EOF (#60) src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.validateLineNumbers CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.nextRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 300,
                    "commit message": "Rename getRecord() to nextRecord()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397900 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 301,
                    "commit message": "It looks like TWO record objects were created for each record read!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397902 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 361,
                    "commit message": "Remove redundant code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398367 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 500,
                    "commit message": "Replace magic String with constant from Constants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495912 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 512,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 637,
                    "commit message": "Don't omit default cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582814 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 646,
                    "commit message": "[CSV-110] Add ability to parse single lines.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585496 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 647,
                    "commit message": "Revert.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585716 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 883,
                    "commit message": "Better ivar name. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1037,
                    "commit message": "Refactor and reuse constant. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1122,
                    "commit message": "Guard against NPE in createHeaders\n\nAlso, formatting and whitespace changes\nas requested in code review. src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1124,
                    "commit message": "Fix formatting src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1203,
                    "commit message": "adding more details into the error message during the CSV parser issues src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1205,
                    "commit message": "formatting changes src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1220,
                    "commit message": "changing the message src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1222,
                    "commit message": "removing last parsed content from exception message, instead making respective method public src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1223,
                    "commit message": "adding code review typo fixes src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1224,
                    "commit message": "fixing code review changes src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1229,
                    "commit message": "moving exception handling to the Lexer src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                },
                {
                    "commit index": 1287,
                    "commit message": "Use Objects.toString() src.main.java.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLastChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 307,
                    "commit message": "Rename readAgain() to getLastChar()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLastChar ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1332,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getLastChar ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.readEndOfLine",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 309,
                    "commit message": "Rename method from \"is\" prefix to \"read\" prefix because it is not just a test method, it may actually consume input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397914 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 310,
                    "commit message": "In-line comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1397915 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 525,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508943 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 880,
                    "commit message": "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 320,
                    "commit message": "Rename printSep() to printDelimiter().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398002 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printDelimiter CSVPrinter.java"
                },
                {
                    "commit index": 478,
                    "commit message": "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printDelimiter CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getQuotePolicy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuotePolicy CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy",
            "function params": [
                "quotePolicy"
            ],
            "commits that changed in": [
                {
                    "commit index": 325,
                    "commit message": "Add quote policy to format. (Considering renaming \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me. )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398008 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuotePolicy CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getQuoteChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 326,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398009 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteChar CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar",
            "function params": [
                "quoteChar"
            ],
            "commits that changed in": [
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 327,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398010 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteChar CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isQuoting",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 333,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398016 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isQuoting CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isQuoting CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote",
            "function params": [
                "value",
                "offset",
                "len"
            ],
            "commits that changed in": [
                {
                    "commit index": 334,
                    "commit message": "Rename \"encapsulator\" to \"quoteChar\" so we have quoteChar and quotePolicy. Encapsulator makes me want to ask \"encapsulate what\"? fieldEncapsulator would be better but so verbose, quoteChar feels more to the point to me and provides symmetry with quotePolicy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398017 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 339,
                    "commit message": "Implement Quote.ALL. Bullet-proof a unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398133 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 360,
                    "commit message": "Explicit unboxing; associated Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398365 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 402,
                    "commit message": "Remove trailing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458683 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 409,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458805 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 478,
                    "commit message": "Standardise on record rather than line; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468827 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 490,
                    "commit message": "Simplify code so delimiter only printed in one place\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479823 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 493,
                    "commit message": "Add code and test for Quote.NONE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1480499 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 637,
                    "commit message": "Don't omit default cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582814 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 711,
                    "commit message": "Remove commented out code and add TODO for obscure code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1617070 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                },
                {
                    "commit index": 812,
                    "commit message": "PMD: Remove useless parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742467 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printAndQuote CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printRecord",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1060,
                    "commit message": "Fixed CSV-271 & Add testcase for new change (#157) src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1129,
                    "commit message": "Use API instead of system property\n\nUse final src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1134,
                    "commit message": "Move package-private method. src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1235,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1236,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1251,
                    "commit message": "Use forEachOrdered() src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printRecords",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 338,
                    "commit message": "Printer can now use a JDBC result set as input. Use H2 as lightweight in-memory JDBC database for easy test set up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398108 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 696,
                    "commit message": "Document how the pintRecord(s) methods work\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610502 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 696,
                    "commit message": "Document how the pintRecord(s) methods work\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610502 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 747,
                    "commit message": "[CSV-140] QuoteMode.NON_NUMERIC doesn't work with CSVPrinter.printRecords(ResultSet)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1637781 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 748,
                    "commit message": "Add TODO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1637788 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 909,
                    "commit message": "Remove duplicated code by calling printRecords(Iterable) src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1012,
                    "commit message": "Add in-line comment. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1129,
                    "commit message": "Use API instead of system property\n\nUse final src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1134,
                    "commit message": "Move package-private method. src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1235,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1236,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1251,
                    "commit message": "Use forEachOrdered() src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1267,
                    "commit message": "Use try-with-resources to manage JDBC Clob in\nCSVPrinter.printRecords(ResultSet) src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 713,
                    "commit message": "Fix compiler warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 569,
                    "commit message": "No need for explicitly creating an array. Arrays.asList is a varargs method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512621 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 713,
                    "commit message": "Fix compiler warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620893 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 714,
                    "commit message": "Oops, back out one of the previous changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620896 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 715,
                    "commit message": "Fix compiler warning.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620897 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 569,
                    "commit message": "No need for explicitly creating an array. Arrays.asList is a varargs method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512621 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1042,
                    "commit message": "Use varargs. src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 335,
                    "commit message": "Add APIs to print arrays of records and iterables of records.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398019 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 336,
                    "commit message": "Add roundtrip test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398020 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testRoundtrip CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 338,
                    "commit message": "Printer can now use a JDBC result set as input. Use H2 as lightweight in-memory JDBC database for easy test set up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398108 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 339,
                    "commit message": "Implement Quote.ALL. Bullet-proof a unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398133 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 750,
                    "commit message": "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 751,
                    "commit message": "Better exception handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638111 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinterQuoteAll",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 339,
                    "commit message": "Implement Quote.ALL. Bullet-proof a unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398133 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrinterQuoteAll CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 340,
                    "commit message": "Rename test method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 341,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398135 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteAll CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 342,
                    "commit message": "Implement Quote.NON_NUMERIC and Quote.MINIMAL. NONE throws a 'not implemented yet' exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398137 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 432,
                    "commit message": "Close printer (at least for non-Exception cases - these are unit tests)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460400 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isQuoteChar",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 352,
                    "commit message": "Rename encapsulator to quote char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398187 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 355,
                    "commit message": "The class implements Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398278 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 619,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560382 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 908,
                    "commit message": "Call flush instead of duplicating the logic src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator",
            "function params": [
                "recordSeparator"
            ],
            "commits that changed in": [
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 371,
                    "commit message": "Rename \"line separator\" to \"record separator\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1398911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder",
            "function params": [
                "escape"
            ],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 381,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 389,
                    "commit message": "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 389,
                    "commit message": "Make some methods package-protected to avoid the need for synthetic accessors.\nTODO consider whether to do so for the fields as well\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 403,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458713 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 404,
                    "commit message": "Replace accidentally checked in tab characters with spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458721 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 406,
                    "commit message": "Format lines that are longer than 120 characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458794 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 437,
                    "commit message": "Add org.apache.commons.csv.CSVFormat.CSVFormatBuilder.parse(Reader).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461202 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 477,
                    "commit message": "Standardise on recordSeparator; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468825 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 477,
                    "commit message": "Standardise on recordSeparator; fix incorrect Javadoc comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1468825 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                },
                {
                    "commit index": 505,
                    "commit message": "Fix formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1496236 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.CSVFormatBuilder CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.defaults",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.defaults CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.newFormat",
            "function params": [
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCommentStart CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCommentStart CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscape CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscape CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteChar CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteChar CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithEscapeCRThrowsExceptions",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithEscapeCRThrowsExceptions CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithEscapeCRThrowsExceptions CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsDelimiterThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiter CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiter CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithDelimiterLFThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithDelimiterLFThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithDelimiterLFThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicy CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicy CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 391,
                    "commit message": "Explicit boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411923 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.setUp CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreEmptyLines CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreEmptyLines CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithQuoteLFThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithQuoteLFThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithQuoteLFThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRecoardSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRecoardSeparator CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRecoardSeparator CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithCommentStartCRThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithCommentStartCRThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testWithCommentStartCRThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreSurroundingSpaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreSurroundingSpaces CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testIgnoreSurroundingSpaces CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsEscapeThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsEscapeThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsEscapeThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatCRThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testEscapeSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsCommentStartThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDelimiterSameAsCommentStartThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 377,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testNewFormatLFThrowsException CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.newBuilder",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 378,
                    "commit message": "Rename methods that create a builder newBuilder().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 380,
                    "commit message": "Use the final keyword where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1409464 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 381,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 390,
                    "commit message": "More useful to have double-quote as a Character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1411920 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 467,
                    "commit message": "Fix checksyle trailing space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465774 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.newBuilder CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 381,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 422,
                    "commit message": "Add a toBuilder method to do:\nCSVFormat format = CSVFormat.EXCEL.toBuilder().withHeader(\"Col1\", \"Col2\", \"Col3\").build();\nInstead of:\nCSVFormat format = CSVFormat.newBuilder(CSVFormat.EXCEL).withHeader(\"Col1\", \"Col2\", \"Col3\").build();\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460255 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatIsEqualToOriginal CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 381,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 421,
                    "commit message": "Add a toBuilder method to do:\nCSVFormat format = CSVFormat.EXCEL.toBuilder().withHeader(\"Col1\", \"Col2\", \"Col3\").build();\nInstead of:\nCSVFormat format = CSVFormat.newBuilder(CSVFormat.EXCEL).withHeader(\"Col1\", \"Col2\", \"Col3\").build();\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460254 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testCopiedFormatWithChanges CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.assertEqualFormats",
            "function params": [
                "expected",
                "acutal"
            ],
            "commits that changed in": [
                {
                    "commit index": 381,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410045 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.assertEqualFormats CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.equals",
            "function params": [
                "obj"
            ],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 420,
                    "commit message": "Fix { } formatting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460251 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 656,
                    "commit message": "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 952,
                    "commit message": "CSV-242 CSVFormat equals() and hash() don't use all fields\n\nFix equals()\nTODO fix hash() src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1025,
                    "commit message": "Use Objects.equals(). src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.hashCode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 656,
                    "commit message": "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 954,
                    "commit message": "CSV-242 CSVFormat equals() and hashCode() don't use all fields\n\nFix hashCode() src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1026,
                    "commit message": "Use Objects.hash(). src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 401,
                    "commit message": "Sort members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458639 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 494,
                    "commit message": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testHeaderReferenceCannotEscape CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 494,
                    "commit message": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals",
            "function params": [
                "right",
                "left"
            ],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 952,
                    "commit message": "CSV-242 CSVFormat equals() and hash() don't use all fields\n\nFix equals()\nTODO fix hash() src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 954,
                    "commit message": "CSV-242 CSVFormat equals() and hashCode() don't use all fields\n\nFix hashCode() src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 955,
                    "commit message": "Typo src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 966,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 980,
                    "commit message": "Remove trailing white spaces on all lines. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.assertNotEquals CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 434,
                    "commit message": "After discussion on ML (http://apache-commons.680414.n4.nabble.com/CSV-org-apache-commons-csv-CSVFormat-DEFAULT-td4647843.html) from 6 days ago, handle this TODO, and renamed DEFAULT to RFC4180_EMPTY_LINES.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461134 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 436,
                    "commit message": "Change back to DEFAULT format name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1461192 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 494,
                    "commit message": "Checkstyle: trailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485799 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEquals CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 387,
                    "commit message": "[CSV-68] Use the Builder pattern for CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1410759 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 392,
                    "commit message": "Where possible:\n- Add final modifier to private fields\n- Add final modifier to method parameters\n- Add final modifier to local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1429926 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRFC4180",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 400,
                    "commit message": "Add testRFC4180().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1458637 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRFC4180 CSVFormatBuilderTest.java"
                },
                {
                    "commit index": 430,
                    "commit message": "Avoid double boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460392 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testRFC4180 CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken",
            "function params": [
                "tkn",
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 417,
                    "commit message": "Method names should start with a verb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
                },
                {
                    "commit index": 481,
                    "commit message": "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
                },
                {
                    "commit index": 497,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
                },
                {
                    "commit index": 497,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseSimpleToken CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken",
            "function params": [
                "tkn"
            ],
            "commits that changed in": [
                {
                    "commit index": 417,
                    "commit message": "Method names should start with a verb\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460136 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java"
                },
                {
                    "commit index": 481,
                    "commit message": "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java"
                },
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java"
                },
                {
                    "commit index": 497,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java"
                },
                {
                    "commit index": 497,
                    "commit message": "Better param name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495268 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.parseEncapsulatedToken CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 418,
                    "commit message": "Add some unit tests for escape handling in preparation for CSV-58\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460138 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscaping CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 418,
                    "commit message": "Add some unit tests for escape handling in preparation for CSV-58\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460138 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapingAtEOF CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.toBuilder",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 421,
                    "commit message": "Add a toBuilder method to do:\nCSVFormat format = CSVFormat.EXCEL.toBuilder().withHeader(\"Col1\", \"Col2\", \"Col3\").build();\nInstead of:\nCSVFormat format = CSVFormat.newBuilder(CSVFormat.EXCEL).withHeader(\"Col1\", \"Col2\", \"Col3\").build();\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460254 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toBuilder CSVFormat.java"
                },
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toBuilder CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedLF CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCharacter CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedCR CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 427,
                    "commit message": "Add comment why test uses a different CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460369 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 481,
                    "commit message": "CSV-58 Unescape handling needs rethinking\nFixed up most issues.\nTODO should TAB, FF and BACKSPACE be un/escaped?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1478621 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeFF CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedTab CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
                },
                {
                    "commit index": 472,
                    "commit message": "Change wrong input data of test. Test now fails because of CSV-58 and is therefore changed to be @Ignore.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466604 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedMySqlNullValue CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 424,
                    "commit message": "Split up escape testing into separate methods, add escaping tests that should work after CSV-58 is resolved (currently ignored)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460364 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapeBackspace CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 426,
                    "commit message": "Initialize format used by several test methods in setUp\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1460367 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.setUp CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.setUp CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.isConsistent",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 450,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1462110 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
                },
                {
                    "commit index": 655,
                    "commit message": "CSV-115: Simplify boolean expressions in CSVRecord. This also closes #1 from github. Thanks to Furkan Kamaci.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592822 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchers.matches",
            "function params": [
                "expectedType",
                "expectedContent"
            ],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.matches TokenMatchers.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchers.hasContent",
            "function params": [
                "expectedContent"
            ],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java"
                },
                {
                    "commit index": 560,
                    "commit message": "Simplify if statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java"
                },
                {
                    "commit index": 743,
                    "commit message": "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.TokenMatchers.hasContent TokenMatchers.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchers.hasType",
            "function params": [
                "expectedType"
            ],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java"
                },
                {
                    "commit index": 560,
                    "commit message": "Simplify if statements\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java"
                },
                {
                    "commit index": 743,
                    "commit message": "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.TokenMatchers.hasType TokenMatchers.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchers.isReady",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.isReady TokenMatchers.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.isReady TokenMatchers.java"
                },
                {
                    "commit index": 743,
                    "commit message": "Add missing '@Override' annotations\nAdd missing '@Override' annotations to implementations of interface methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchers.isReady TokenMatchers.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchersTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.setUp TokenMatchersTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasType",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasType TokenMatchersTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchersTest.testMatches",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testMatches TokenMatchersTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchersTest.testIsReady",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testIsReady TokenMatchersTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasContent",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 451,
                    "commit message": "Add some matcher implementations as discussed on the ML http://markmail.org/message/k7gzqhbgfyiszyph\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463207 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasContent TokenMatchersTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.TokenMatchersTest.testHasContent TokenMatchersTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 452,
                    "commit message": "Use hasContent matcher token type is not relevant (correct token type recognition is tested by other tests methods)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463210 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java"
                },
                {
                    "commit index": 453,
                    "commit message": "Add missing white spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1463212 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedControlCharacter2 CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreSurroundingSpacesAreDeleted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 457,
                    "commit message": "Give test a name that's a bit more expressive\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465693 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreSurroundingSpacesAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 458,
                    "commit message": "Express intention of tokens in token content and give test more structure\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465705 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreSurroundingSpacesAreDeleted CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 460,
                    "commit message": "Give test a name that's a bit more expressive and remove comment that is no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465715 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 461,
                    "commit message": "Make sure empty lines are ignored by constructing CSVFormat this way. Remove corresponding assert that would have failed if CSVFormat.newBuilder() was changed to withIgnoreEmptyLines(false)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465718 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 462,
                    "commit message": "Separate testing empty line handling from comment recognition\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465722 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testIgnoreEmptyLines CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 462,
                    "commit message": "Separate testing empty line handling from comment recognition\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465722 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testComments CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetString CSVRecordTest.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testGetString CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsMapped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIsMapped CSVRecordTest.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testIsMapped CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 613,
                    "commit message": "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 1113,
                    "commit message": "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVRecordTest.setUp CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java"
                },
                {
                    "commit index": 496,
                    "commit message": "- Add final modifier to method parameters.\n- Add final modifier to local variables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495203 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIterator CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord CSVRecordTest.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java"
                },
                {
                    "commit index": 937,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nRename CSVRecord.getCSVParser() -> getParser(). src.test.java.org.apache.commons.csv.CSVRecordTest.testIsConsistent CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetInt",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetInt CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader CSVRecordTest.java"
                },
                {
                    "commit index": 612,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 463,
                    "commit message": "[CSV-96] CSVRecord does not verify that the length of the header mapping matches the number of values - convert ArrayIndexOutOfBoundsException to IllegalArgumentException to give users a better feedback about what went wrong\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465738 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSet CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 465,
                    "commit message": "Sort members, classes and methods (but not fields).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465763 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getNullToString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getNullToString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 466,
                    "commit message": "[CSV-97] Allow the String value for null to be customized for the CSV printer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1465768 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 469,
                    "commit message": "Add a test that makes sure ignoreSurroundingWhitespaces works for the tab character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466590 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingTabsAreDeleted CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 470,
                    "commit message": "Give test a better name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466591 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testSurroundingSpacesAreDeleted CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 471,
                    "commit message": "Give test a better name and remove comment that is now no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1466601 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCommentsAndEmptyLines CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 476,
                    "commit message": "Give tests a better name that expresses, what actually happens\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1467766 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithEscaping CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 476,
                    "commit message": "Give tests a better name that expresses, what actually happens\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1467766 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackslashWithoutEscaping CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isMetaChar",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 484,
                    "commit message": "Extract check for metaChar\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479706 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 495,
                    "commit message": "Checkstyle: put trailing || on previous line (indicates more to come)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1485805 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 509,
                    "commit message": "Allow a caller to close the parser before reading all records and free resources. The parser and lexer now implement java.io.Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508475 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 522,
                    "commit message": "Use ch instead of c as a character var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508937 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 575,
                    "commit message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512650 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainEscaped CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainPlain CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 488,
                    "commit message": "Add some more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479730 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPlainQuoted CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 489,
                    "commit message": "MOre tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479753 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLEscaped CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 489,
                    "commit message": "MOre tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479753 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLQuoted CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 489,
                    "commit message": "MOre tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479753 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEOLPlain CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1322,
                    "commit message": "Use the same internal name as LineNumberReader src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 491,
                    "commit message": "CSV-98  Line number counting is confusing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1479936 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDefaultQuotePolicy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 492,
                    "commit message": "Test default Quote policy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1480498 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatBuilderTest.testDefaultQuotePolicy CSVFormatBuilderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 493,
                    "commit message": "Add code and test for Quote.NONE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1480499 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.addRecordValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 512,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 777,
                    "commit message": "[CSV-169] The null string should be case-sensitive when reading records. Also simplify branch test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725358 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 825,
                    "commit message": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743529 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 825,
                    "commit message": "Add final modifier to method parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743529 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 883,
                    "commit message": "Better ivar name. src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 499,
                    "commit message": "[CSV-93] Allow the handling of NULL values. Use a single property 'nullString' for both input and output processing. No substitutions occur if null. For reading, nullString is used to convert field values to null. For writing, nullString is used to output the given string instead of the empty string.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1495911 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmapped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 506,
                    "commit message": "Make sure an unmapped header returns null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1498003 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmapped CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withNullString",
            "function params": [
                "nullString"
            ],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.copy",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
                },
                {
                    "commit index": 1091,
                    "commit message": "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.copy CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 514,
                    "commit message": "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 804,
                    "commit message": "Drop senseless assertion\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeader CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1034,
                    "commit message": "Use Character cache. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 682,
                    "commit message": "Revert previous commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603206 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithNullString CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparator CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteChar CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1034,
                    "commit message": "Use Character cache. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscape CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithDelimiter CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testRFC4180 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 516,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508613 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithCommentStart CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 535,
                    "commit message": "Ensure Closeable is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509264 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 570,
                    "commit message": "Remove redundant cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512622 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testInvalidFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 507,
                    "commit message": "[CSV-99] Revert Builder implementation in CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508470 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 535,
                    "commit message": "Ensure Closeable is closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509264 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testInvalidFormat CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 509,
                    "commit message": "Allow a caller to close the parser before reading all records and free resources. The parser and lexer now implement java.io.Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508475 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
                },
                {
                    "commit index": 512,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
                },
                {
                    "commit index": 1281,
                    "commit message": "Lexer is never null src.main.java.org.apache.commons.csv.CSVParser.close CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 509,
                    "commit message": "Allow a caller to close the parser before reading all records and free resources. The parser and lexer now implement java.io.Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508475 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java"
                },
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java"
                },
                {
                    "commit index": 677,
                    "commit message": "class Lexer implements Closeable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602919 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.close Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.close Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
                },
                {
                    "commit index": 512,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508511 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
                },
                {
                    "commit index": 573,
                    "commit message": "Make checkstyle happy: Line was longer than 120 chars, file contained tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512625 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java"
                },
                {
                    "commit index": 573,
                    "commit message": "Make checkstyle happy: Line was longer than 120 chars, file contained tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512625 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isClosed Lexer.java"
                },
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.isClosed Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.isClosed Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testClose",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 510,
                    "commit message": "Change CSVFormat#Iterable<CSVRecord> parse(final Reader in) to return a CSVParser, which is compatible since CSVParser implements Iterable<CSVRecord>. This allows a caller to end the parsing by calling CSVParser#close() or to use CSVParser in a Java 7 try-with-resources, without tracking a reader or input stream.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508509 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                },
                {
                    "commit index": 537,
                    "commit message": "Better throw a NoSuchElementException if no more elements are available because parser has been closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509395 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testClose CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.parseResource",
            "function params": [
                "resource",
                "charset",
                "classLoader",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java"
                },
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseResource CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.parseString",
            "function params": [
                "string"
            ],
            "commits that changed in": [
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseString CSVParser.java"
                },
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseString CSVParser.java"
                },
                {
                    "commit index": 557,
                    "commit message": "Remove org.apache.commons.csv.CSVParser.parseString(String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511868 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseString CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.parseURL",
            "function params": [
                "url",
                "charset",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseURL CSVParser.java"
                },
                {
                    "commit index": 534,
                    "commit message": "Don't split ternary expression over two lines\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509261 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseURL CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.parseFile",
            "function params": [
                "file",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseFile CSVParser.java"
                },
                {
                    "commit index": 518,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508635 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parseFile CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 513,
                    "commit message": "Refactor to only have minimal CSVParser constructors in favor of CSVParser factory methods for String, resource path, URL, and File. Update some tests to use the APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508544 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource CSVFileParserTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource CSVFileParserTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVResource CSVFileParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 514,
                    "commit message": "Make org.apache.commons.csv.CSVFormat.getHeader() public and make it return a clone.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508585 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                },
                {
                    "commit index": 528,
                    "commit message": "- Remove trailing spaces.\n- Add missing final keywords.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509069 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testGetHeader CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetHeader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipAutoHeader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 515,
                    "commit message": "When withHeader is set to any non-null value, the first record is the first <em>data</em> record, not the header record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508612 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 517,
                    "commit message": "Validate that headers do not contain duplicates.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508618 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                },
                {
                    "commit index": 684,
                    "commit message": "CSV-117 Validate format parameters in constructor\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603967 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                },
                {
                    "commit index": 951,
                    "commit message": "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                },
                {
                    "commit index": 966,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord",
            "function params": [
                "skipHeaderRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 519,
                    "commit message": "Revert back to NOT skipping a record when withHeader is called with a non-empty array. Add skipHeaderRecord setting to CSVFormat and use when headers are initialized.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508933 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.copy",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 526,
                    "commit message": "Remove copy method. It is not needed since every withXxx() method returns a copy\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1508966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java"
                },
                {
                    "commit index": 623,
                    "commit message": "Sort in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1576750 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.copy CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.FercGovTest.testContractFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java"
                },
                {
                    "commit index": 577,
                    "commit message": "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java"
                },
                {
                    "commit index": 626,
                    "commit message": "Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578189 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testContractFile FercGovTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 527,
                    "commit message": "- Add some real world CSV files. \n- Add a record API to get column values using an Enum.\n- Throw a better exception when a resource is not found in a class loader for the parser.\n- Replace some tabs with spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509068 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java"
                },
                {
                    "commit index": 577,
                    "commit message": "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.FercGovTest.testTransactionFile FercGovTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getBoolean",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getBoolean CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByNullString CSVRecordBooleanTest.java"
                },
                {
                    "commit index": 540,
                    "commit message": "Simplify tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509446 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByNullString CSVRecordBooleanTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByMissingString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByMissingString CSVRecordBooleanTest.java"
                },
                {
                    "commit index": 540,
                    "commit message": "Simplify tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509446 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByMissingString CSVRecordBooleanTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByString CSVRecordBooleanTest.java"
                },
                {
                    "commit index": 539,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509442 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.testGetBooleanByString CSVRecordBooleanTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.createTestRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.createTestRecord CSVRecordBooleanTest.java"
                },
                {
                    "commit index": 539,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509442 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.createTestRecord CSVRecordBooleanTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordBooleanTest.setUp CSVRecordBooleanTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName CSVRecordTest.java"
                },
                {
                    "commit index": 612,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559898 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedName CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 538,
                    "commit message": "CSVRecord.get(String) throws IAE if the column is not mapped (does not exist). This is similar to what JDBC does in ResultSet. Add getBoolean(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509431 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getLong",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 541,
                    "commit message": "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getLong CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByMissingString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 541,
                    "commit message": "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByMissingString CSVRecordLongTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 541,
                    "commit message": "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByString CSVRecordLongTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordLongTest.createTestRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 541,
                    "commit message": "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.createTestRecord CSVRecordLongTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordLongTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 541,
                    "commit message": "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.setUp CSVRecordLongTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 541,
                    "commit message": "Add CSVRecord#getLong(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509449 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordLongTest.testGetLongByNullString CSVRecordLongTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getInt",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 542,
                    "commit message": "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getInt CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordIntTest.createTestRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 542,
                    "commit message": "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.createTestRecord CSVRecordIntTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 542,
                    "commit message": "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByString CSVRecordIntTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordIntTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 542,
                    "commit message": "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.setUp CSVRecordIntTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 542,
                    "commit message": "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByNullString CSVRecordIntTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByMissingString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 542,
                    "commit message": "Add CSVRecord#getInt(String) API and tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509450 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordIntTest.testGetIntegerByMissingString CSVRecordIntTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 543,
                    "commit message": "Align test names to other tests of the same kind\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509956 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedFF CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 543,
                    "commit message": "Align test names to other tests of the same kind\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509956 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testEscapedBackspace CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 544,
                    "commit message": "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 545,
                    "commit message": "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testBackspace CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testFF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 544,
                    "commit message": "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java"
                },
                {
                    "commit index": 545,
                    "commit message": "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testFF CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 544,
                    "commit message": "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java"
                },
                {
                    "commit index": 545,
                    "commit message": "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testLF CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testTab",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 544,
                    "commit message": "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java"
                },
                {
                    "commit index": 545,
                    "commit message": "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testTab CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVLexerTest.testCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 544,
                    "commit message": "Add some more tests that document escaping behavior\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509957 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java"
                },
                {
                    "commit index": 545,
                    "commit message": "Use NotEscaped where character has not been escaped\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1509966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java"
                },
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java"
                },
                {
                    "commit index": 556,
                    "commit message": "Package private classes are not prefixed with \"CSV\": CSVLexer -> Lexer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511462 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVLexerTest.testCR CSVLexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isDelimiter",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isDelimiter CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isClosed CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isCommentStart",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isCommentStart CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.mapNullToDisabled",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.mapNullToDisabled CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.close CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isQuoteChar",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isQuoteChar CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isEscape",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isEscape CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isMetaChar",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isMetaChar CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.getCurrentLineNumber CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.isStartOfLine",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.isStartOfLine CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVLexer.readEndOfLine",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 552,
                    "commit message": "Merge Lexer with CSVLexer\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511006 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVLexer.readEndOfLine CSVLexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.parse",
            "function params": [
                "string",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 558,
                    "commit message": "Remove type names from static factory APIs in org.apache.commons.csv.CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1511883 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 572,
                    "commit message": "Make checkstyle happy: remove trailing whitespace\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1512624 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 577,
                    "commit message": "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 577,
                    "commit message": "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 581,
                    "commit message": "Remove fallback logic for charset parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1519269 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 627,
                    "commit message": "The charset can be null and will default to UTF-8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578191 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 632,
                    "commit message": "Simplest behavior: null -> exception, like the other params.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578502 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 669,
                    "commit message": "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 669,
                    "commit message": "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 745,
                    "commit message": "Remove in-line comment that no longer applies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635507 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 839,
                    "commit message": "[CSV-189] CSVParser: Add factory method accepting InputStream. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 839,
                    "commit message": "[CSV-189] CSVParser: Add factory method accepting InputStream. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 842,
                    "commit message": "Sort static methods. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 843,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat) src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 847,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 847,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 858,
                    "commit message": "CSVParser.parse(Path, Charset, CSVFormat) should use NIO and not convert\nthe Path to a File. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 885,
                    "commit message": "Fix last checkstyle error src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1053,
                    "commit message": "Update CSVParser.parse(File, Charset, CSVFormat) from IO to NIO. src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1337,
                    "commit message": "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1337,
                    "commit message": "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1337,
                    "commit message": "Migrate from deprecated code\n\nCSVParser.Builder.recordNumber should default to 1 src.main.java.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 576,
                    "commit message": "Add test that documents behavior of multiple iterators over the same CSVParser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513228 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testMultipleIterators CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 577,
                    "commit message": "Remove factory methods for creating CSVParsers for classpath resources\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1513994 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 722,
                    "commit message": "CSV-124 apply provided patch and update unit tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1624048 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 1002,
                    "commit message": "Fix the old test case record.getComment() will never be null (#62)\n\n* The old test case record.getComment() will never be null and if record.getComment() be null the test code misplace the null test.\r\nAdd a new test file that record.getComment() will be null and test record.getComment() no null before using\r\n\r\n* keep the caching of \"record.getComment()\" src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                },
                {
                    "commit index": 1033,
                    "commit message": "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.CSVFileParserTest.testCSVUrl CSVFileParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Assertions.Assertions",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.Assertions Assertions.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Assertions.notNull",
            "function params": [
                "parameter",
                "parameterName"
            ],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
                },
                {
                    "commit index": 580,
                    "commit message": "Remove unnecessary generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518974 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
                },
                {
                    "commit index": 580,
                    "commit message": "Remove unnecessary generics\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518974 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
                },
                {
                    "commit index": 907,
                    "commit message": "Method in package private class does not need to be public src.main.java.org.apache.commons.csv.Assertions.notNull Assertions.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.AssertionsTest.testNotNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.AssertionsTest.testNotNull AssertionsTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.AssertionsTest.testNotNull AssertionsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.AssertionsTest.testNotNullNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.AssertionsTest.testNotNullNull AssertionsTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.AssertionsTest.testNotNullNull AssertionsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullStringFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseStringNullFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                },
                {
                    "commit index": 669,
                    "commit message": "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullFileFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 669,
                    "commit message": "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseFileNullFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 630,
                    "commit message": "Clean up tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578199 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 639,
                    "commit message": "TRailing spaces\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582822 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 965,
                    "commit message": "Use HTTPS links to Apache. src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 669,
                    "commit message": "org.apache.commons.csv.CSVParser.parse(File, Charset, CSVFormat) is now like org.apache.commons.csv.CSVParser.parse(URL, Charset, CSVFormat): You must pass in a Charset.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602901 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 578,
                    "commit message": "Make methods that create parsers or printers fail early and provide an expressive error messages. Document new behavior in JavaDoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1518802 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 581,
                    "commit message": "Remove fallback logic for charset parameter\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1519269 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 629,
                    "commit message": "The charset can be null and will default to UTF-8.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578198 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 633,
                    "commit message": "Simplest behavior: null -> exception, like the other params.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578504 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 965,
                    "commit message": "Use HTTPS links to Apache. src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isNullHandling",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 601,
                    "commit message": "Add method to check if null handling has been defined\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522878 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isNullHandling CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 604,
                    "commit message": "Fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1522882 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 1018,
                    "commit message": "[CSV-149]/[CSV-195] fix line number is not proper at EOF (#60) src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 609,
                    "commit message": "[CSV-100] CSVParser: getHeaderMap throws NPE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1524435 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 625,
                    "commit message": "Sort methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578187 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNoHeaderMap CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.putIn",
            "function params": [
                "map"
            ],
            "commits that changed in": [
                {
                    "commit index": 613,
                    "commit message": "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 615,
                    "commit message": "Hide a method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560001 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 622,
                    "commit message": "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 622,
                    "commit message": "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 648,
                    "commit message": "[CSV-111] CSVRecord.toMap() fails if row length shorter than header length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1589281 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 662,
                    "commit message": "<action issue=\"CSV-118\" type=\"fix\" dev=\"ggregory\" due-to=\"Enrique Lara\">CSVRecord.toMap() throws NPE on formats with no headers.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1594966 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 1000,
                    "commit message": "[CSV-184] Make the method CSVRecord#putIn(Map) public. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 1066,
                    "commit message": "Use streams.\nRemove unused imports. src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 1098,
                    "commit message": "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 1116,
                    "commit message": "Use own API src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 1188,
                    "commit message": "Fix typo, extract getHeaderMapRaw to var src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                },
                {
                    "commit index": 1189,
                    "commit message": "Rollback var extraction src.main.java.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.toMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 613,
                    "commit message": "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java"
                },
                {
                    "commit index": 1098,
                    "commit message": "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.main.java.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap",
            "function params": [
                "map",
                "allowsNulls"
            ],
            "commits that changed in": [
                {
                    "commit index": 613,
                    "commit message": "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.validateMap CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 613,
                    "commit message": "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap CSVRecordTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap CSVRecordTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVRecordTest.testToMap CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 613,
                    "commit message": "[CSV-105] Add Map conversion API to CSVRecord.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559905 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                },
                {
                    "commit index": 614,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1559908 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                },
                {
                    "commit index": 622,
                    "commit message": "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                },
                {
                    "commit index": 997,
                    "commit message": "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                },
                {
                    "commit index": 1098,
                    "commit message": "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVRecordTest.testPutInMap CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.toList",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 616,
                    "commit message": "Internal refactoring. If we have a toMap, a toList makes sense (which is already needed internally).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560003 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
                },
                {
                    "commit index": 1044,
                    "commit message": "[CSV-275] Make CSVRecord.toList() public. src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
                },
                {
                    "commit index": 1113,
                    "commit message": "CSVRecord.toList() does not give write access to the new List src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
                },
                {
                    "commit index": 1116,
                    "commit message": "Use own API src.main.java.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.getOut",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 620,
                    "commit message": "Add accessor for out ivar.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560384 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
                },
                {
                    "commit index": 761,
                    "commit message": "Sort 1 method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695166 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
                },
                {
                    "commit index": 1087,
                    "commit message": "Better internal names. src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 621,
                    "commit message": "Add @Test testRemoveAndAddColumns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560389 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                },
                {
                    "commit index": 622,
                    "commit message": "Fix generics issue.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1560399 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                },
                {
                    "commit index": 1101,
                    "commit message": "Inline Collections.sort(Comparator). src.test.java.org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 624,
                    "commit message": "[CSV-106] CSVFormat.format always append null.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1577011 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 628,
                    "commit message": "Testing [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578196 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 631,
                    "commit message": "Clean up tests for [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578397 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 636,
                    "commit message": "Avoid resource leak warnings\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1582813 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOM",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 628,
                    "commit message": "Testing [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578196 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 631,
                    "commit message": "Clean up tests for [CSV-107] CSVFormat.EXCEL.parse should handle byte order marks.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1578397 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 683,
                    "commit message": "Charset cannot be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603965 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 847,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 1246,
                    "commit message": "Use standard constant src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOM CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineCustomCollection",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 641,
                    "commit message": "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584903 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineCustomCollection CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 641,
                    "commit message": "Add API org.apache.commons.csv.CSVParser.getRecords(T).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1584903 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLine CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken",
            "function params": [
                "token"
            ],
            "commits that changed in": [
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 772,
                    "commit message": "Fix PMDs: Unnecessary use of fully qualified name 'Constants.END_OF_STREAM' due to existing static import 'org.apache.commons.csv.Constants.END_OF_STREAM'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721770 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1043,
                    "commit message": "No need to nest in else. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1089,
                    "commit message": "CSV-283: Remove Whitespace Check Determines Delimiter Twice (#167) src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1215,
                    "commit message": "Javadoc src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1229,
                    "commit message": "moving exception handling to the Lexer src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1231,
                    "commit message": "fixing checkstyle issue src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1272,
                    "commit message": "MongoDBCsv empty first column parsing fix src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1293,
                    "commit message": "Extract duplicated code into a method src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1313,
                    "commit message": "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.nextToken",
            "function params": [
                "token"
            ],
            "commits that changed in": [
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 813,
                    "commit message": "PMD: Remove useless parentheses\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742468 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 1089,
                    "commit message": "CSV-283: Remove Whitespace Check Determines Delimiter Twice (#167) src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 1215,
                    "commit message": "Javadoc src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 1285,
                    "commit message": "Add Checkstyle rules src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken",
            "function params": [
                "token",
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 643,
                    "commit message": "Better ivar name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585096 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 772,
                    "commit message": "Fix PMDs: Unnecessary use of fully qualified name 'Constants.END_OF_STREAM' due to existing static import 'org.apache.commons.csv.Constants.END_OF_STREAM'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721770 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1043,
                    "commit message": "No need to nest in else. src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1098,
                    "commit message": "* Replace For loop with map.forEach (#172)\n\n* Use diamond type <>\r\n* Extract commons expressions src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                },
                {
                    "commit index": 1293,
                    "commit message": "Extract duplicated code into a method src.main.java.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 644,
                    "commit message": "Add org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(). See discussion in [CSV-110].\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585491 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 645,
                    "commit message": "Add org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(). See discussion in [CSV-110].\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1585492 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 648,
                    "commit message": "[CSV-111] CSVRecord.toMap() fails if row length shorter than header length.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1589281 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord CSVRecordTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord CSVRecordTest.java"
                },
                {
                    "commit index": 987,
                    "commit message": "[CSV-248] CSVRecord is not Serializable.\n\nSort members. src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaderEntries",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 650,
                    "commit message": "CSV-112: HeaderMap is inconsistent when it is parsed from an input with duplicate columns names. Reported by Romain Goss\u00e9\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592371 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaderEntries CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 656,
                    "commit message": "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 656,
                    "commit message": "Add missing fields to hashcode and equals methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1592832 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 662,
                    "commit message": "<action issue=\"CSV-118\" type=\"fix\" dev=\"ggregory\" due-to=\"Enrique Lara\">CSVRecord.toMap() throws NPE on formats with no headers.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1594966 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java"
                },
                {
                    "commit index": 678,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602944 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.print",
            "function params": [
                "out"
            ],
            "commits that changed in": [
                {
                    "commit index": 663,
                    "commit message": "<action issue=\"CSV-119\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat is missing a print(...) method</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1599285 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 664,
                    "commit message": "<action issue=\"CSV-120\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat#withHeader doesn't work with CSVPrinter</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1601517 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 835,
                    "commit message": "Add convenience API CSVFormat.print(File, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748347 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 836,
                    "commit message": "Add convenience API CSVFormat.print(Path, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748349 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 837,
                    "commit message": "Fix comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 859,
                    "commit message": "org.apache.commons.csv.CSVFormat.print(Path, Charset) should use NIO and\nnot convert the Path to a File. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 875,
                    "commit message": "PMD: Unnecessary use of fully qualified name 'Constants.EMPTY' due to\nexisting static import 'org.apache.commons.csv.Constants.EMPTY' src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 893,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 928,
                    "commit message": "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1210,
                    "commit message": "Javadoc src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1269,
                    "commit message": "Use final\n\nRemove whitespace src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1294,
                    "commit message": "Use NIO instead of old io. src.main.java.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 663,
                    "commit message": "<action issue=\"CSV-119\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat is missing a print(...) method</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1599285 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrint CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 664,
                    "commit message": "<action issue=\"CSV-120\" type=\"add\" dev=\"ggregory\" due-to=\"Sergei Lebedev\">CSVFormat#withHeader doesn't work with CSVPrinter</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1601517 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeader CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 665,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Add a test that shows that ONE missing header is OK.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602166 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                },
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissing CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 666,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Add a test that shows that TWO missing header is not OK.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602168 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java"
                },
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingException CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreEmptyHeaders CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyHeaders",
            "function params": [
                "ignoreEmptyHeaders"
            ],
            "commits that changed in": [
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyHeaders CSVFormat.java"
                },
                {
                    "commit index": 671,
                    "commit message": "Checkstyle: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602903 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreEmptyHeaders CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeaders CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 667,
                    "commit message": "[CSV-121] Exception that the header contains duplicate names when the column names are empty. Added the setting ignoreEmptyHeaders, defaults to false to keep the IAE as the default behavior.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1602206 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                },
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissing CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLfThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 681,
                    "commit message": "Camel case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1603204 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithQuoteLfThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorIllegal",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorIllegal CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 687,
                    "commit message": "Make sure only record separators we can handle are used\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609548 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 689,
                    "commit message": "CSV-122: NullPointerException when empty header string and and null string of \"\". Thanks to Mike Lewis.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1609768 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                },
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyHeaders CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isHandlingNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isHandlingNull CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringEmptyLines CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isSkippingHeaderRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isSkippingHeaderRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringSurroundingSpaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isIgnoringSurroundingSpaces CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 693,
                    "commit message": "Use is prefix for getters that return booleans\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610490 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java"
                },
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker",
            "function params": [
                "commentMarker"
            ],
            "commits that changed in": [
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testComments LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testComments LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testNextToken6",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 695,
                    "commit message": "Rename withCommentStart to withCommentMarker to avoid confusion because there is no corresponding withCommentStop method\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1610494 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testNextToken6 LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isAllowMissingColumnNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isAllowMissingColumnNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames",
            "function params": [
                "allowMissingColumnNames"
            ],
            "commits that changed in": [
                {
                    "commit index": 704,
                    "commit message": "Rename the IgnoreEmptyHeaders property to AllowMissingColumnNames\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612337 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 705,
                    "commit message": "Prefix everything that is a pure getter with \"get\" as proposed by Gary Gregory\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612341 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode",
            "function params": [
                "quoteModePolicy"
            ],
            "commits that changed in": [
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 706,
                    "commit message": "Consistently rename Quote/QuotePolicy to QuoteMode\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withQuote",
            "function params": [
                "quoteChar"
            ],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
                },
                {
                    "commit index": 1264,
                    "commit message": "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isCommentStartCharacterSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentStartCharacterSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getCommentStartCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentStartCharacter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithEscaping LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 707,
                    "commit message": "Use \"Character\" as the postfix is ivar names. Use the method name pattern isFooSet() for ivar \"foo\" for methods that test foo for null (foo != null).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612352 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 708,
                    "commit message": "Restore commentMarker property which was overridden during refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1612390 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 716,
                    "commit message": "[CSV-128] CSVFormat.EXCEL should ignore empty header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1620902 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testNextToken4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken4 LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken4 LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testNextToken4 LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 717,
                    "commit message": "[CSV-129] Add CSVFormat#with 0-arg methods matching boolean arg methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1621004 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines LexerTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testIgnoreEmptyLines LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.toStringArray",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 1139,
                    "commit message": "Use Java 8 API src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments",
            "function params": [
                "headerComments"
            ],
            "commits that changed in": [
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments",
            "function params": [
                "sw",
                "now",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 720,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...). Adjust test for style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623985 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 720,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...). Adjust test for style.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623985 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 754,
                    "commit message": "[CSV-145] CSVFormat.with* methods clear the header comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1641845 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 1074,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 719,
                    "commit message": "[CSV-130] CSVFormat#withHeader doesn't work well with #printComment, add withHeaderComments(String...)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1623984 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 725,
                    "commit message": "[CSV-131] Save positions of records to enable random access. First commit for this new feature. Let the ExtendedBufferedReader track how many characters it has read so far.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625455 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getPosition ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.ExtendedBufferedReader.getPosition ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.getCharacterPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 726,
                    "commit message": "[CSV-131] Save positions of records to enable random access. 2nd commit for this new feature. Let the Lexer make the underlying reader's character position available through a new package private method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1625456 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.Lexer.getCharacterPosition Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.getCharacterPosition Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.setNextRecordNumber",
            "function params": [
                "nextRecordNumber"
            ],
            "commits that changed in": [
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.setNextRecordNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.setNextCharacterPosition",
            "function params": [
                "position"
            ],
            "commits that changed in": [
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVParser.setNextCharacterPosition CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getCharacterPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.getCharacterPosition CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition",
            "function params": [
                "lineSeparator"
            ],
            "commits that changed in": [
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 1307,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.validateRecordPosition CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 731,
                    "commit message": "[CSV-131] Save positions of records to enable random access. The floor is open for code review and further discussion based on the comments in the Jira.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635052 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 732,
                    "commit message": "Use @Ignore instead of commenting out code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635065 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable",
            "function params": [
                "stmt"
            ],
            "commits that changed in": [
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 750,
                    "commit message": "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 750,
                    "commit message": "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 928,
                    "commit message": "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.setUpTable CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 736,
                    "commit message": "Add org.apache.commons.csv.CSVParser.CSVParser(Reader, CSVFormat, long, long) and remove new setters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1635129 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithHeaders CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 750,
                    "commit message": "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 751,
                    "commit message": "Better exception handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638111 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1033,
                    "commit message": "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.geH2Connection",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.geH2Connection CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.geH2Connection CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 749,
                    "commit message": "[CSV-139] CSVPrinter.printRecord(ResultSet) with metadata.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638101 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 750,
                    "commit message": "Refactor test to better abstract set up of fixture.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638110 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 751,
                    "commit message": "Better exception handling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1638111 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseCommonsCSV CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.getReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
                },
                {
                    "commit index": 758,
                    "commit message": "Load the data in memory before running the benchmarks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658653 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.getReader CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.baseline",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.baseline CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback",
            "function params": [
                "fields"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.CountingReaderCallback CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseSuperCSV CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseJavaCSV CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseSkifeCSV CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseOpenCSV CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 755,
                    "commit message": "Added a JMH benchmark to compare the most commons CSV parsers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658276 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.split",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 756,
                    "commit message": "Added another baseline benchmark against StringUtils.split() from commons-lang\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658392 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.split CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.read",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 756,
                    "commit message": "Added another baseline benchmark against StringUtils.split() from commons-lang\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658392 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                },
                {
                    "commit index": 992,
                    "commit message": "Remove trailing whitespace. src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.read CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.init",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 758,
                    "commit message": "Load the data in memory before running the benchmarks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1658653 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java"
                },
                {
                    "commit index": 762,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695167 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java"
                },
                {
                    "commit index": 1033,
                    "commit message": "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java"
                },
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.init CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.Predefined",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                },
                {
                    "commit index": 774,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                },
                {
                    "commit index": 774,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                },
                {
                    "commit index": 797,
                    "commit message": "Drop modifiers which are implied by the context\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742149 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testDefault",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testDefault CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testDefault CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test",
            "function params": [
                "format",
                "enumName"
            ],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 764,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695179 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.test CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testTDF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testTDF CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testTDF CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testExcel CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testExcel CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 763,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695178 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180 CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180 CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.valueOf",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 764,
                    "commit message": "[CSV-157] Add enum CSVFormat.Predefined that contains the default CSVFormat values.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1695179 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testJIraCsv154",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 766,
                    "commit message": "Test CSV-154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1700073 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJIraCsv154 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 767,
                    "commit message": "Test CSV-154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1700391 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 774,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withHeaderComments CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 767,
                    "commit message": "Test CSV-154.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1700391 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker CSVFormatTest.java"
                },
                {
                    "commit index": 774,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv154_withCommentMarker CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 768,
                    "commit message": "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 768,
                    "commit message": "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 768,
                    "commit message": "CSV-153: CSVPrinter doesn't skip creation of header record if skipHeaderRecord is set to true. Thanks to Wren. This also fixes #8 from github.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1706542 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
                },
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase",
            "function params": [
                "ignoreHeaderCase"
            ],
            "commits that changed in": [
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 788,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739672 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 769,
                    "commit message": "[CSV-159] Add IgnoreCase option for accessing header names\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1708685 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 770,
                    "commit message": "More tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1715712 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 770,
                    "commit message": "More tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1715712 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 793,
                    "commit message": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739687 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.isComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 773,
                    "commit message": "Unit test for [CSV-167] Comment line hides next record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721778 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.isComment CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java"
                },
                {
                    "commit index": 824,
                    "commit message": "The declared exception IOException is not actually thrown by the method testMySqlNullStringDefault() from type CSVPrinterTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743528 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomExcel CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomExcel CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMySql",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMySql CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMySql CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls",
            "function params": [
                "original",
                "csvFormat"
            ],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
                },
                {
                    "commit index": 833,
                    "commit message": "Use Java 7 method instead of Apache Commons Lang 3.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748095 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.expectNulls CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues",
            "function params": [
                "expected",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomDefault",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomDefault CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomDefault CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.generateLines",
            "function params": [
                "nLines",
                "nCol"
            ],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.generateLines CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.generateLines CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomTdf CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 779,
                    "commit message": "[CSV-168] CsvFormat.nullString should not be escaped. [CSV-170]\nCSVFormat.MYSQL nullString should be \"\\N\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725407 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java"
                },
                {
                    "commit index": 852,
                    "commit message": "Remove extra blank line. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 781,
                    "commit message": "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 781,
                    "commit message": "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135All CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 781,
                    "commit message": "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part3 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 781,
                    "commit message": "Update copyright for 2016 in NOTICE.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725424 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 831,
                    "commit message": "Use generics diamonds.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748079 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJira135_part1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.hasComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 784,
                    "commit message": "CSV-167 Rename method and update Javadoc to correspond with reality\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1727766 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVRecord.hasComment CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getTrim",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withTrim",
            "function params": [
                "trim"
            ],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 815,
                    "commit message": "Sort methods in alphabetic order\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742506 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testTrim",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testTrim CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testTrailingDelimiter CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 794,
                    "commit message": "[CSV-175] Support for ignoring trailing delimiter.\n[CSV-177] Support trimming leading and trailing blanks.\n[CSV-178] Create default formats for Informix UNLOAD and UNLOAD CSV.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739694 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 798,
                    "commit message": "CSV-180: Add withHeader(Class<? extends Enum>) to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742169 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 798,
                    "commit message": "CSV-180: Add withHeader(Class<? extends Enum>) to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742169 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 800,
                    "commit message": "Move tests for specific issues to own package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742173 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments JiraCsv164Test.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments JiraCsv164Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 800,
                    "commit message": "Move tests for specific issues to own package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742173 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker JiraCsv164Test.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker JiraCsv164Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 773,
                    "commit message": "Unit test for [CSV-167] Comment line hides next record.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1721778 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 774,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1725344 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 783,
                    "commit message": "Fix test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1727538 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 785,
                    "commit message": "Oops, forgot to commit this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1727808 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 787,
                    "commit message": "Use final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1739671 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 800,
                    "commit message": "Move tests for specific issues to own package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742173 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 806,
                    "commit message": "Access test data using the classloader instead of defining a file handle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742426 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.parse JiraCsv167Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 802,
                    "commit message": "CSV-179: Add shortcut method for using first record as header to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742175 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 802,
                    "commit message": "CSV-179: Add shortcut method for using first record as header to CSVFormat\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742175 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 806,
                    "commit message": "Access test data using the classloader instead of defining a file handle\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742426 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput JiraCsv167Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.trim",
            "function params": [
                "charSequence"
            ],
            "commits that changed in": [
                {
                    "commit index": 816,
                    "commit message": "[CSV-181] Make CSVPrinter.print(Object) GC-free.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1742895 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVPrinter.trim CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.trim",
            "function params": [
                "charSequence"
            ],
            "commits that changed in": [
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 821,
                    "commit message": "Useless parentheses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743431 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 822,
                    "commit message": "Reuse constant instead of magic char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743432 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 823,
                    "commit message": "Reuse constant instead of magic char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743434 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 1147,
                    "commit message": "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.printAndEscape",
            "function params": [
                "value",
                "offset",
                "len",
                "out"
            ],
            "commits that changed in": [
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.printAndEscape CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.printRecord",
            "function params": [
                "out",
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.println",
            "function params": [
                "out"
            ],
            "commits that changed in": [
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote",
            "function params": [
                "object",
                "value",
                "offset",
                "len",
                "out",
                "newRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 820,
                    "commit message": "[CSV-182] Allow some printing operations directly from CSVFormat. Adds APIs to CSVFormat so update version from 1.3.1-SNAPSHOT to 1.4-SNAPHOT a la semver. This commit refactors a small bit of guts code from CSVPrinter to CSVFormat.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1743430 13f79535-47bb-0310-9956-ffa450edef68 src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java"
                },
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java"
                },
                {
                    "commit index": 891,
                    "commit message": "[CSV-219] The behavior of quote char using is not similar as Excel does\nwhen the first string contains CJK char(s).\n[CSV-172] Don't quote cells just because they have UTF-8 encoded\ncharacters. src.main.java.org.apache.commons.csv.CSVFormat.printAndQuote CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 830,
                    "commit message": "Add tests for CSVFormat.equals for null quotes. Closes #12. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1747331 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 830,
                    "commit message": "Add tests for CSVFormat.equals for null quotes. Closes #12. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1747331 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java"
                },
                {
                    "commit index": 881,
                    "commit message": "Fix Checkstyle warnings: Remove trailing white spaces on all lines. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader",
            "function params": [
                "s"
            ],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1069,
                    "commit message": "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.createBufferedReader ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testNextToken5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testNextToken5 LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testNextToken5 LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedCR LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF LexerTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapingAtEOF LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.createLexer",
            "function params": [
                "input",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.createLexer LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testBackspace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testBackspace LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testBackspace LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter2 LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter2 LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testTab",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testTab LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testTab LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedTab",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedTab LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedFF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedFF LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedFF LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedLF LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testLF LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testLF LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testFF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testFF LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testFF LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedControlCharacter LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedBackspace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedBackspace LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedBackspace LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedCharacter LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedCharacter LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testCR",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testCR LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testCR LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.createReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java"
                },
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.createReader PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer",
            "function params": [
                "test",
                "input"
            ],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.createTestCSVLexer PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.createBufferedReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 832,
                    "commit message": "Use try-with-resources.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748094 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.perf.PerformanceTest.createBufferedReader PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 835,
                    "commit message": "Add convenience API CSVFormat.print(File, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748347 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 1182,
                    "commit message": "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithDefaultCharset CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 835,
                    "commit message": "Add convenience API CSVFormat.print(File, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748347 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java"
                },
                {
                    "commit index": 1182,
                    "commit message": "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToFileWithCharsetUtf16Be CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 836,
                    "commit message": "Add convenience API CSVFormat.print(Path, Charset) (JIRA is down ATM).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/csv/trunk@1748349 13f79535-47bb-0310-9956-ffa450edef68 src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 850,
                    "commit message": "Sort method. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java"
                },
                {
                    "commit index": 1182,
                    "commit message": "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintToPathWithDefaultCharset CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 839,
                    "commit message": "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 847,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithInputStream CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 839,
                    "commit message": "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 847,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_parseWithReader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 839,
                    "commit message": "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 847,
                    "commit message": "[CSV-192] Add convenience API CSVParser.parse(Path, Charset, CSVFormat).\nAdjust API to be Charset-based instead of String (charset name), just\nlike it says in the Jira title. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStream_ParserWithReader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream",
            "function params": [
                "resource"
            ],
            "commits that changed in": [
                {
                    "commit index": 839,
                    "commit message": "[CSV-189] CSVParser: Add factory method accepting InputStream. src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1127,
                    "commit message": "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.test.java.org.apache.commons.csv.CSVParserTest.createBOMInputStream CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 851,
                    "commit message": "Add testPrintOnePositiveInteger(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintOnePositiveInteger CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 853,
                    "commit message": "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash3 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 853,
                    "commit message": "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 853,
                    "commit message": "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash4 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 853,
                    "commit message": "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash5 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 853,
                    "commit message": "Break up testEscapeBackslash() method into individual tests. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java"
                },
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull4 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull3 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull5 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 854,
                    "commit message": "[CSV-171] Negative numeric values in the first column are always quoted\nin minimal mode. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEscapeNull2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRfc4180QuoteSingleChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 855,
                    "commit message": "Add testRfc4180QuoteSingleChar(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRfc4180QuoteSingleChar CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.bugs.JiraCsv198Test.test",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 863,
                    "commit message": "Add JiraCsv198Test. src.test.java.org.apache.commons.csv.bugs.JiraCsv198Test.test JiraCsv198Test.java"
                },
                {
                    "commit index": 864,
                    "commit message": "Fix compiler warnings. src.test.java.org.apache.commons.csv.bugs.JiraCsv198Test.test JiraCsv198Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.printer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 866,
                    "commit message": "[CSV-205] \n\nAdd convenience API CSVFormat#printer() to print to System.out. src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
                },
                {
                    "commit index": 893,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithEmptyValues JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutQuoteMode JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAll JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testWithoutNullString JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeMinimal JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeNonNumeric JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 868,
                    "commit message": "[CSV-203] \n\nwithNullString value is printed without quotes when QuoteMode.ALL is\nspecified; add QuoteMode.ALL_NON_NULL. PR #17. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 925,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv203Test.testQuoteModeAllNonNull JiraCsv203Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlText",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlText CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testPostgreSqlCsv CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvTextOutput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvTextOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvTextOutput CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlCsv CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlCsv CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlText",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlText CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomPostgreSqlText CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultText",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultText CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvNullOutput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvNullOutput CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlCsvNullOutput CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 872,
                    "commit message": "[CSV-207]\n\n Provide a CSV Format for printing PostgreSQL CSV and Text formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSQLNullStringDefaultCsv CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testToString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
                },
                {
                    "commit index": 894,
                    "commit message": "[CSV-220] Add API\norg.apache.commons.csv.CSVFormat.withSystemRecordSeparator(). src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
                },
                {
                    "commit index": 927,
                    "commit message": "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testToString CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 916,
                    "commit message": "[CSV-208] Fix escape character for POSTGRESQL_TEXT and POSTGRESQL_CSV\nformats. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 1135,
                    "commit message": "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsWithNull CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                },
                {
                    "commit index": 1260,
                    "commit message": "Internal refactoring for escape character src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsOne CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testToStringAndWithCommentMarkerTakingCharacter CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testNewFormat CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 953,
                    "commit message": "Document change to test behaviour src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 959,
                    "commit message": "CSV-244 Test case failures following CSVFormat#equals() update src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testHashCodeAndWithIgnoreHeaderCase CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 892,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 927,
                    "commit message": "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 1060,
                    "commit message": "Fixed CSV-271 & Add testcase for new change (#157) src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatThrowsNullPointerException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 953,
                    "commit message": "Document change to test behaviour src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 957,
                    "commit message": "Fix odd local variable names. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 959,
                    "commit message": "CSV-244 Test case failures following CSVFormat#equals() update src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 1072,
                    "commit message": "Replace assert by simpler but equivalent calls. (#159) src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderComments CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithObjectArray CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                },
                {
                    "commit index": 942,
                    "commit message": "Be quiet on the console. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                },
                {
                    "commit index": 1244,
                    "commit message": "Don't use deprecated code src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithEmptyVector CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 873,
                    "commit message": "Add some tests from PR\nhttps://patch-diff.githubusercontent.com/raw/apache/commons-csv/pull/19.\nCloses #19. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
                },
                {
                    "commit index": 921,
                    "commit message": "Update tests from H2 1.4.197 to 1.4.198. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithResultSetOneRow CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.test",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 877,
                    "commit message": "[CSV-213] CSVParser#iterator()#hasNext() fails. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.test JiraCsv213Test.java"
                },
                {
                    "commit index": 1148,
                    "commit message": "Enable JiraCsv213Test src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.test JiraCsv213Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel",
            "function params": [
                "csvFile"
            ],
            "commits that changed in": [
                {
                    "commit index": 877,
                    "commit message": "[CSV-213] CSVParser#iterator()#hasNext() fails. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 924,
                    "commit message": "Don't throw RuntimeException. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 974,
                    "commit message": "Clean ups. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 1029,
                    "commit message": "Remove useless return. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 1084,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv213Test.createEndChannel JiraCsv213Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getFirstEndOfLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 880,
                    "commit message": "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.main.java.org.apache.commons.csv.CSVParser.getFirstEndOfLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.getFirstEol",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 880,
                    "commit message": "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.main.java.org.apache.commons.csv.Lexer.getFirstEol Lexer.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.Lexer.getFirstEol Lexer.java"
                },
                {
                    "commit index": 1285,
                    "commit message": "Add Checkstyle rules src.main.java.org.apache.commons.csv.Lexer.getFirstEol Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 880,
                    "commit message": "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineLf CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 880,
                    "commit message": "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCrLf CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 880,
                    "commit message": "[CSV-214] Adding a placeholder in the Lexer and CSV parser to store the\nend-of-line string. I applied the patch in spirit and made changes:\nthere is no need to use a boolean to track the state of the EOL String\n(set vs. not set). I also allowed for CR to be saved as an EOL string\nsince we allow that already. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testFirstEndOfLineCr CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush",
            "function params": [
                "autoFlush"
            ],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 893,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 893,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 900,
                    "commit message": "Fix compiler warning. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseBackwardCompatibility CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 887,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Remove println() in test. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 900,
                    "commit message": "Fix compiler warning. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOn CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 926,
                    "commit message": "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOn CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 926,
                    "commit message": "Address compiler warnings. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithFlushOff CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 886,
                    "commit message": "[CSV-217] Add autoFlush option for CsvPrinter. Applying modified patch\nThis closes #24. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 900,
                    "commit message": "Fix compiler warning. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCloseWithCsvFormatAutoFlushOff CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 888,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.issues.JiraCsv198Test.test JiraCsv198Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 891,
                    "commit message": "[CSV-219] The behavior of quote char using is not similar as Excel does\nwhen the first string contains CJK char(s).\n[CSV-172] Don't quote cells just because they have UTF-8 encoded\ncharacters. src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testQuoteCommaFirstChar CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 891,
                    "commit message": "[CSV-219] The behavior of quote char using is not similar as Excel does\nwhen the first string contains CJK char(s).\n[CSV-172] Don't quote cells just because they have UTF-8 encoded\ncharacters. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java"
                },
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDontQuoteEuroFirstChar CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 894,
                    "commit message": "[CSV-220] Add API\norg.apache.commons.csv.CSVFormat.withSystemRecordSeparator(). src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 894,
                    "commit message": "[CSV-220] Add API\norg.apache.commons.csv.CSVFormat.withSystemRecordSeparator(). src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java"
                },
                {
                    "commit index": 1129,
                    "commit message": "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVFormatTest.testWithSystemRecordSeparator CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testOracle",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 897,
                    "commit message": "[CSV-209] Create CSVFormat.ORACLE preset. Also: Fix and complete\ndocumentation for other formats. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testOracle CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testOracle CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomOracle",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 897,
                    "commit message": "[CSV-209] Create CSVFormat.ORACLE preset. Also: Fix and complete\ndocumentation for other formats. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomOracle CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomOracle CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 903,
                    "commit message": "Remove trailing white spaces on all lines. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 903,
                    "commit message": "Remove trailing white spaces on all lines. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1127,
                    "commit message": "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1206,
                    "commit message": "removing duplicated exception class name from error message src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1208,
                    "commit message": "Update CSVParser.java src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1235,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1290,
                    "commit message": "Remove redundant keywords src.main.java.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 901,
                    "commit message": "[CSV-224] Some Multi Iterator Parsing Peek Sequences Incorrectly Consume\nElements. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 1027,
                    "commit message": "Move init in test. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 1036,
                    "commit message": "Remove trailing whitepsace. src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParseNullPathFormat CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParse",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1174,
                    "commit message": "Add @SuppressWarnings(\"resource\") in test as narrowly as possible src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testParse CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.parseFully",
            "function params": [
                "parser"
            ],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                },
                {
                    "commit index": 932,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                },
                {
                    "commit index": 1172,
                    "commit message": "Use final and lambda shorthand src.test.java.org.apache.commons.csv.CSVParserTest.parseFully CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testParser",
            "function params": [
                "msg",
                "fac"
            ],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParser PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testParser PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParser PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java"
                },
                {
                    "commit index": 969,
                    "commit message": "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParsePathDoubleBuffering PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java"
                },
                {
                    "commit index": 969,
                    "commit message": "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParseURL PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 902,
                    "commit message": "[CSV-225] Parse method should avoid creating a redundant BufferedReader. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java"
                },
                {
                    "commit index": 969,
                    "commit message": "More lambdas, less boilerplate. src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.PerformanceTest.testParsePath PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbTsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbTsv CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbTsv CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbCsv CSVFormatPredefinedTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatPredefinedTest.testMongoDbCsv CSVFormatPredefinedTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testMongoDbCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVParserTest.testMongoDbCsv CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testMongoDbCsv CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 968,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvCommaInValue CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java"
                },
                {
                    "commit index": 968,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvBasic CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvCommaInValue CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolEscaped CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvDoubleQuoteInValue CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvBasic CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbCsvTabInValue CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 968,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testMongoDbTsvTabInValue CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultCsv CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultCsv CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolPlain CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterNullAppendableFormat CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultText",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultText CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPostgreSqlNullStringDefaultText CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNone CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testEolQuoted CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMongoDbCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 917,
                    "commit message": "[CSV-233] Add predefined CSVFormats for printing MongoDB CSV and TSV. src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMongoDbCsv CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testRandomMongoDbCsv CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes",
            "function params": [
                "object",
                "value",
                "out",
                "newRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 922,
                    "commit message": "Checkstyle. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 928,
                    "commit message": "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 928,
                    "commit message": "[CSV-238] Escape quotes in CLOBs.\n\nCloses #39. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 964,
                    "commit message": "CSV-135 - Char escape doesn't work\n\nEnsure escape chars are escaped when using quote mode src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1033,
                    "commit message": "Minor Improvement: (#127)\n\n* Add final\r\n* Unnecessary semicolon ''\r\n* Use StandardCharsets\r\n* Fix javadoc src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1071,
                    "commit message": "[CSV-263] Print from Reader with embedded quotes generates incorrect\noutput.\n\n- Resolve conflicts from PR #78 by Jason A. Guild.\n- Don't use depreacted methods.\n- Javadoc.\n- Use final. src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1147,
                    "commit message": "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1210,
                    "commit message": "Javadoc src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1255,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1255,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1257,
                    "commit message": "Call append once\n\nBetter comments src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1258,
                    "commit message": "[CSV-311] OutOfMemory for very long rows despite using column value of\ntype Reader src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1259,
                    "commit message": "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1260,
                    "commit message": "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes",
            "function params": [
                "value",
                "out"
            ],
            "commits that changed in": [
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 999,
                    "commit message": "fix isssue csv-259 (#61)\n\n* fix isssue csv-259\r\n\r\n* add testcase for CSV259\r\n\r\n* exclude csv259 test file\r\n\r\n* organize the imports src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1255,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1255,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1259,
                    "commit message": "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1259,
                    "commit message": "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1260,
                    "commit message": "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1260,
                    "commit message": "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1262,
                    "commit message": "Allocate a string look ahead buffer in\nCSVFormat.printWithEscapes(CharSequence, Appendable)\n\nAs opposed to one for each character read. src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1264,
                    "commit message": "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1264,
                    "commit message": "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1265,
                    "commit message": "No need to store in local variable src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1265,
                    "commit message": "No need to store in local variable src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1266,
                    "commit message": "Whitespace src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1320,
                    "commit message": "Better internal API src.main.java.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.IOUtils.copyLarge",
            "function params": [
                "input",
                "output",
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
                },
                {
                    "commit index": 1131,
                    "commit message": "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
                },
                {
                    "commit index": 1131,
                    "commit message": "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.IOUtils.copy",
            "function params": [
                "input",
                "output",
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                },
                {
                    "commit index": 918,
                    "commit message": "[CSV-234] Add support for java.sql.Clob. src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                },
                {
                    "commit index": 1109,
                    "commit message": "Bump commons-parent from 52 to 53.\n\nAllow org.apache.commons.csv.IOUtils.copy(Reader, Appendable,\nCharBuffer) to compile on Java 11 and run on Java 8. src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                },
                {
                    "commit index": 1131,
                    "commit message": "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                },
                {
                    "commit index": 1131,
                    "commit message": "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 929,
                    "commit message": "Better method name. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java"
                },
                {
                    "commit index": 930,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nSome NPE-proofing. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java"
                },
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java"
                },
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.createHeaderMap CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames",
            "function params": [
                "headerMap"
            ],
            "commits that changed in": [
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames CSVParser.java"
                },
                {
                    "commit index": 935,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo header names as an read-only list. src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames CSVParser.java"
                },
                {
                    "commit index": 938,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nCSVParser.createHeaderNames(Map<String, Integer>) -> private and\ninstance side. src.main.java.org.apache.commons.csv.CSVParser.createHeaderNames CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.getHeaderNames CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getIndex",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.getIndex CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getName",
            "function params": [
                "index"
            ],
            "commits that changed in": [
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.main.java.org.apache.commons.csv.CSVRecord.getName CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 931,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetHeaderNames CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java"
                },
                {
                    "commit index": 935,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo header names as an read-only list. src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java"
                },
                {
                    "commit index": 1091,
                    "commit message": "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java"
                },
                {
                    "commit index": 1091,
                    "commit message": "Bump spotbugs-maven-plugin from 4.2.3 to 4.3.0.\n\nFix SpotBugs Errors\n- Error: Medium: org.apache.commons.csv.CSVParser.getHeaderNames() may\nexpose internal representation by returning CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 599]\nEI_EXPOSE_REP\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.format [org.apache.commons.csv.CSVParser]\nAt CSVParser.java:[line 433] EI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerMap\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 437]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVParser(Reader, CSVFormat,\nlong, long) may expose internal representation by storing an externally\nmutable object into CSVParser.headerNames\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 438]\nEI_EXPOSE_REP2\n- Error: Medium: new org.apache.commons.csv.CSVPrinter(Appendable,\nCSVFormat) may expose internal representation by storing an externally\nmutable object into CSVPrinter.format\n[org.apache.commons.csv.CSVPrinter] At CSVPrinter.java:[line 100]\nEI_EXPOSE_REP2\n\nSuppresss SpotBugs Errors:\n- Error: Medium: org.apache.commons.csv.CSVFormat$Predefined.getFormat()\nmay expose internal representation by returning\nCSVFormat$Predefined.format [org.apache.commons.csv.CSVFormat$Predefined]\nAt CSVFormat.java:[line 758] EI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVParser.iterator() may expose\ninternal representation by returning CSVParser.csvRecordIterator\n[org.apache.commons.csv.CSVParser] At CSVParser.java:[line 690]\nEI_EXPOSE_REP\n- Error: Medium: org.apache.commons.csv.CSVRecord.getParser() may expose\ninternal representation by returning CSVRecord.parser\n[org.apache.commons.csv.CSVRecord] At CSVRecord.java:[line 171]\nEI_EXPOSE_REP src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java"
                },
                {
                    "commit index": 939,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nUndo previous change. src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getCSVParser",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.getCSVParser CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java"
                },
                {
                    "commit index": 937,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nRename CSVRecord.getCSVParser() -> getParser(). src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java"
                },
                {
                    "commit index": 990,
                    "commit message": "[CSV-248] Test the parser and map functionality after deserialization\n\nMethods with unexpected return values (null or exceptions) have been\ndocumented. All other methods will just fail as if the record came from\na parser without a header. src.main.java.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 936,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nAdd test. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNames CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsInconsistent",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 933,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\n- Redo so that the record tracks its source parser where call sites can\nfind metadata. This avoids adding slots to the record class itself. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsInconsistent CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 936,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nAdd test. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
                },
                {
                    "commit index": 973,
                    "commit message": "CSV-252: Clean up exception handling (#50)\n\n* CSV-252: Clean up assertions using assertThrows\r\n\r\nAs a followup to commit e2f0a4d8a83a41eaa984086636a3712c682307ea that\r\nintroduced JUnit Jupiter to the project, this patch leverages the new\r\nAssertions#assertThrows method to clean up tests for expected\r\nexceptions.\r\n\r\nInstead of the somewhat clunky structure common in JUnit 4 tests:\r\n\r\n```\r\ntry {\r\n    someMethod();\r\n    fail(\"SomeException should be thrown\");\r\n} catch (SomeException e) {\r\n    // Expected...\r\n\r\n    // Possibly some assertion on e\r\n}\r\n```\r\n\r\nJUnit Jupiter allows the following elegant syntax:\r\n\r\n```\r\nSomeException e = assertThrows(SomeException.class, () -> someMethod());\r\n// Possibly some assertions on e\r\n```\r\n\r\n* CSV-252: Remove redundant throws clauses from tests src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderNamesReadOnly CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.getParser",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 937,
                    "commit message": "[CSV-239] Cannot get headers in column order from CSVRecord.\n\nRename CSVRecord.getCSVParser() -> getParser(). src.main.java.org.apache.commons.csv.CSVRecord.getParser CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 943,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 943,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 960,
                    "commit message": "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 960,
                    "commit message": "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 943,
                    "commit message": "Sort methods. src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 950,
                    "commit message": "Prepare for release 1.7.\n\n- There is no longer site archives. We forgot to do it for 1.6 but the\nsites are still in svn.\n- The Javadoc archives now point to the same place GitHub uses:\njavadoc.io\n- Checkstyle fixes. src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.Headers",
            "function params": [
                "headerMap",
                "headerNames"
            ],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
                },
                {
                    "commit index": 1015,
                    "commit message": "Sort methods in AB order. src.main.java.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.createHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 941,
                    "commit message": "- Remove unused import.\n- Remove trailing white spaces on all lines.\n- Use final.\n- Use for-each (in test).\n- Use try-with-resources (in test).\n- Document empty blocks. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 950,
                    "commit message": "Prepare for release 1.7.\n\n- There is no longer site archives. We forgot to do it for 1.6 but the\nsites are still in svn.\n- The Javadoc archives now point to the same place GitHub uses:\njavadoc.io\n- Checkstyle fixes. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 960,
                    "commit message": "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1122,
                    "commit message": "Guard against NPE in createHeaders\n\nAlso, formatting and whitespace changes\nas requested in code review. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1162,
                    "commit message": "Javadoc and format tweaks src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1170,
                    "commit message": "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1282,
                    "commit message": "User ternary expression src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1049,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1174,
                    "commit message": "Add @SuppressWarnings(\"resource\") in test as narrowly as possible src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testRepeatedHeadersAreReturnedInCSVRecordHeaderNames CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersNotAllowed CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFileHeaderParsing",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFileHeaderParsing CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyFileHeaderParsing CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 940,
                    "commit message": "[CSV-239] Add CSVRecord.getHeaderNames and allow duplicate headers (#41)\n\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* getHeaderNames returns all headers in column order including repeats which are allowed as per RFC 4180\r\n* add CSVFormat.withAllowDuplicateHeaderNames()\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* only wrap headerNames with unmodifiableList if non-empty\r\n* fix and enhance CSVRecord.toMap javadoc\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix exception messages\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix whitespace\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* simplify if statement\r\n\r\n* [CSV-239] Cannot get headers in column order from CSVRecord.\r\n* fix indentation\r\n* add javadoc to Headers class\r\n* rename method to createHeaders\r\n* use String.format to build error message\r\n* initialize header names List with appropriate size src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java"
                },
                {
                    "commit index": 981,
                    "commit message": "Remove unnecessary array creation for varargs. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java"
                },
                {
                    "commit index": 1049,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testDuplicateHeadersAllowedByDefault CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 945,
                    "commit message": "Standardize on US spelling of \"behavior\". src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorCSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 945,
                    "commit message": "Standardize on US spelling of \"behavior\". src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviorExcel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 945,
                    "commit message": "Standardize on US spelling of \"behavior\". src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1035,
                    "commit message": "Use isEmpty(). src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorExcel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 951,
                    "commit message": "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 951,
                    "commit message": "[CSV-241] CSVFormat#valiadte() does not account for\nllowDuplicateHeaderNames.\n\nApplying a different version of the GitHub patch with adjustments to the\ntests. Also remove trailing whitespace from CSVRecord.\n\nCloses #43. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 952,
                    "commit message": "CSV-242 CSVFormat equals() and hash() don't use all fields\n\nFix equals()\nTODO fix hash() src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 966,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 980,
                    "commit message": "Remove trailing white spaces on all lines. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1042,
                    "commit message": "Use varargs. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                },
                {
                    "commit index": 1303,
                    "commit message": "Convert cascading if-else to switch src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHash CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 960,
                    "commit message": "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter CSVPrinterTest.java"
                },
                {
                    "commit index": 968,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToWriter CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 960,
                    "commit message": "Post release fixes (#44)\n\n* Fix checkstyle: remove tabs\r\n* Fix checkstyle: Split long line\r\n* Fix checkstyle: exclude pom.properties\r\n* Update findbugs to allow deliberate fall-through\r\n* Fix pmd: Remove ternary operator returning false\r\n* Fix pmd: Remove implicit final\r\n* Fix pmd: Ignore TooManyStaticImports.\r\n\r\nThis requires adding the default ruleset and then modifying with\r\nsuppressions.\r\n\r\n* Add tests to cover use of the IOUtils class.\r\n\r\nRequires the CSVFormat to have no quote or escape character, and the\r\nformatted value to be a java.io.Reader.\r\n\r\n* Clean-up findbugs exclude filter.\r\n* Removed unused import\r\n* Updated test comments for print tests targeting IOUtils.\r\n* Fix checkstyle: Suppress line length warning in CSVParser. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java"
                },
                {
                    "commit index": 968,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintReaderWithoutQuoteToAppendable CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 962,
                    "commit message": "CSV235 - WRONG Implementation for RFC4180\n\nShow that implementation is actually correct src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java"
                },
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java"
                },
                {
                    "commit index": 1049,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java"
                },
                {
                    "commit index": 1128,
                    "commit message": "Fix some compiler warnings src.test.java.org.apache.commons.csv.CSVParserTest.testCSV235 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat",
            "function params": [
                "l",
                "quote",
                "escape",
                "expected"
            ],
            "commits that changed in": [
                {
                    "commit index": 964,
                    "commit message": "CSV-135 - Char escape doesn't work\n\nEnsure escape chars are escaped when using quote mode src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1057,
                    "commit message": "Use try-with-resources. Better local var name. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1057,
                    "commit message": "Use try-with-resources. Better local var name. src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.tryFormat CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 964,
                    "commit message": "CSV-135 - Char escape doesn't work\n\nEnsure escape chars are escaped when using quote mode src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java"
                },
                {
                    "commit index": 968,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV135 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 967,
                    "commit message": "[CSV-236] Allow duplicate headers in CSV File.\n\nAdd test. src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCvs249.testJiraCsv249",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 970,
                    "commit message": "[CSV-249] ArrayIndexOutOfBoundsException when trying to read record\nwritten by CSVPrinter using CSVParser with same format.\n\nAdd passing test. src.test.java.org.apache.commons.csv.issues.JiraCvs249.testJiraCsv249 JiraCvs249.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withHeaderComments JiraCsv164Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withCommentMarker",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv164Test.testJiraCsv154_withCommentMarker JiraCsv164Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 1082,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java"
                },
                {
                    "commit index": 1086,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.parse JiraCsv167Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCvs249Test.testJiraCsv249",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 972,
                    "commit message": "CSV-252: Migration to JUnit Jupiter (#49)\n\n* CSV-252 Stop using junit.framework.TestCase\r\n\r\njunit.framework.TestCase is a class from JUnit 3, and while it is not\r\nofficially deprecated, it's discouraged to use it.\r\n\r\nThis patch removes the single use of\r\njunit.framework.TestCase#assertNull, and replaces it with the\r\nstandard, recommended, org.junit.Assert#assertNull.\r\n\r\n* CSV-252 Standardize org.junit.Assert imports\r\n\r\nCode in the project uses org.junit.Assert's methods in two ways:\r\n1. By statically importing them\r\n2. By importing the class and using its methods\r\n\r\nOption 1 seems to be the de-facto standard, with just a handful of\r\ncases using Option 2.\r\nThis patch standardizes these cases to also use static imports thus\r\nmaking the code look more uniform, and easier to maintain.\r\n\r\n* CSV-252 Upgrade Mockito to 3.1.0\r\n\r\nUpgrade the Mockito dependency to the latest available version, 3.1.0,\r\nin order to facilitate an upgrade to JUnit Jupiter.\r\n\r\n* CSV-252 JUnit Jupiter upgrade\r\n\r\nThis patch upgrades the project's testing framework from JUnit 4.12\r\nto the modern JUnit Jupiter 5.5.4.\r\n\r\nSince JUnit 5 Jupiter is not backwards compatible to JUnit 4.x (or\r\neven JUnit Vintage), this patch is a bit large, even though a lot of\r\nthe changes are merely cosmetic (such as changing the argument order,\r\nsee details below). In order to make the reviewer's task as easy as\r\npossible, this PR does not presume to use JUnit Jupiter's best\r\npractices and all its new functionality, but only to migrate the\r\nexisting tests with as little change as possible. Following patches\r\nmay want to improve the tests by using some of JUnit Jupiter's new\r\nfeatures.\r\n\r\nThis patch includes the following changes:\r\n\r\n1. Maven dependency changes:\r\n a. junit:junit was replaced with org.junit.jupiter:junit-jupiter.\r\n b. org.hamcrest:hamcrest was introduced as an explicit dependency,\r\n    since the project uses Hamcrest, and JUnit Jupiter does not\r\n    bundle Hamcrest, unlike JUnit 4.x.\r\n\r\n2. Annotations:\r\n a. org.junit.jupiter.api.Test was used as a drop in replacement for\r\n    org.juit.Test without arguments. See 3.ii. for handling of @Test\r\n    annotations with an \"expected\" argument.\r\n b. org.junit.jupiter.api.BeforeEach was used as an drop in\r\n    replacement for org.junit.Before.\r\n c. org.junit.jupiter.api.BeforeAll was used as an drop in\r\n    replacement for org.junit.BeforeClass.\r\n d. org.junit.jupiter.api.Disabled was used as a drop in replacement\r\n    for org.junit.Ignore.\r\n\r\n3. Assertions:\r\n a. org.junit.jupiter.api.Assertions' methods were used as drop in\r\n    replacements for org.junit.Assert's methods with the same name in\r\n    the simple case of an assertion without a message. In the case of\r\n    an assertion with a message, org.junit.jupiter.api.Assertions'\r\n    methods were used, but the argument order was changed - Assert's\r\n    methods take the message as the first argument, while Assertions'\r\n    methods take the message as the last argument.\r\n b. org.junit.jupiter.api.Assertions#assertThrows was used to assert\r\n    that a specific exception was throws instead of an org.junit.Test\r\n    annotation with an expected argument. This technique has a couple\r\n    of side bonuses. First, it makes the tests slightly stricter, as\r\n    now they can assert the exception was thrown from a specific line\r\n    and prevent false positives where the test's \"set-up\" code\r\n    accidentally threw that exception. Second, it clarifies that some\r\n    of the test code is unreachable (as a previous line already\r\n    throws an exception), and can safely be removed in order to clean\r\n    up the test. The throws clauses of these methods were cleaned up\r\n    from exceptions that can no longer be thrown in order to avoid\r\n    compilation warnings.\r\n c. org.hamcrest.MatcherAssert#assertThat was used as a drop in\r\n    replacement for org.junit.Assert#assertThat.\r\n\r\n4. Specific Changes:\r\n a. CSVFileParserTest was rewritten with JUnit Jupiter's\r\n    org.junit.jupiter.api.ParameterizedTest. Unlike JUnit 4's\r\n    org.junit.runners.Parameterized, it cannot be used to inject\r\n    arguments to a test's construct, and so the test can't be\r\n    stateful. Instead, it was rewritten so every test receives the\r\n    file as a parameter, and opens a reader on it itself. As a side\r\n    bonus, this design makes it easier to close the reader and avoid\r\n    leaving open file descriptors like the original test did. src.test.java.org.apache.commons.csv.issues.JiraCvs249Test.testJiraCsv249 JiraCvs249Test.java"
                },
                {
                    "commit index": 975,
                    "commit message": "No need for all the whitespace. src.test.java.org.apache.commons.csv.issues.JiraCvs249Test.testJiraCsv249 JiraCvs249Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testJiraDescription",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 976,
                    "commit message": "[CSV-247]  A single empty header is allowed when not allowing empty\ncolumn headers.\n\nAdd test case. src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testJiraDescription JiraCvs247Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testHeadersMissingOneColumn",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 976,
                    "commit message": "[CSV-247]  A single empty header is allowed when not allowing empty\ncolumn headers.\n\nAdd test case. src.test.java.org.apache.commons.csv.issues.JiraCvs247Test.testHeadersMissingOneColumn JiraCvs247Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersMissingOneColumnException CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java"
                },
                {
                    "commit index": 1083,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingThrowsWhenNotAllowingMissingColumnNames JiraCsv247Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 978,
                    "commit message": "CSV-247: CSVParser to check an empty header before checking duplicates. (#47)\n\nThis updates the issues test for CSV-247 and adds tests to the\r\nCSVParserTest. src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames JiraCsv247Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames JiraCsv247Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv247Test.testHeadersMissingOneColumnWhenAllowingMissingColumnNames JiraCsv247Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 982,
                    "commit message": "Add CSVRecord.isSet(int) method (#52)\n\n* Add CSVRecord.isSet(int) method\r\n\r\n* Remove unnecessary unboxing\r\n\r\n* Revert: Remove unnecessary unboxing src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString CSVRecordTest.java"
                },
                {
                    "commit index": 987,
                    "commit message": "[CSV-248] CSVRecord is not Serializable.\n\nSort members. src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString CSVRecordTest.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetString CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetInt",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 982,
                    "commit message": "Add CSVRecord.isSet(int) method (#52)\n\n* Add CSVRecord.isSet(int) method\r\n\r\n* Remove unnecessary unboxing\r\n\r\n* Revert: Remove unnecessary unboxing src.test.java.org.apache.commons.csv.CSVRecordTest.testIsSetInt CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 988,
                    "commit message": "[CSV-248] CSVRecord is not Serializable.\n\nMake field transient. src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
                },
                {
                    "commit index": 990,
                    "commit message": "[CSV-248] Test the parser and map functionality after deserialization\n\nMethods with unexpected return values (null or exceptions) have been\ndocumented. All other methods will just fail as if the record came from\na parser without a header. src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
                },
                {
                    "commit index": 1234,
                    "commit message": "Proper use of JUnit APIs src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
                },
                {
                    "commit index": 1302,
                    "commit message": "Use Assertions.assertInstanceOf() src.test.java.org.apache.commons.csv.CSVRecordTest.testSerialization CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetNullEnum",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 989,
                    "commit message": "Let a null input to CSVRecord#get(Enum) fail in CSVRecord#get(String). src.test.java.org.apache.commons.csv.CSVRecordTest.testGetNullEnum CSVRecordTest.java"
                },
                {
                    "commit index": 1045,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetNullEnum CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testDeserialisation",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 990,
                    "commit message": "[CSV-248] Test the parser and map functionality after deserialization\n\nMethods with unexpected return values (null or exceptions) have been\ndocumented. All other methods will just fail as if the record came from\na parser without a header. src.test.java.org.apache.commons.csv.CSVRecordTest.testDeserialisation CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 991,
                    "commit message": "[CSV-248] Test CSVRecord deserialization from binary format.\n\nThe serialised form was created using version 1.6. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
                },
                {
                    "commit index": 996,
                    "commit message": "Prepare for 1.8-RC2.\n\n- Remove package private code with Java 8 equivalent\njava.util.Objects.requirteNonNull().\n- Checkstyle fixes.\n- Use final.\n- Remove unused import. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
                },
                {
                    "commit index": 1233,
                    "commit message": "Proper use of JUnit APIs src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
                },
                {
                    "commit index": 1302,
                    "commit message": "Use Assertions.assertInstanceOf() src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.testJiraCsv248 JiraCsv248Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 991,
                    "commit message": "[CSV-248] Test CSVRecord deserialization from binary format.\n\nThe serialised form was created using version 1.6. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput JiraCsv248Test.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput JiraCsv248Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv248Test.getTestInput JiraCsv248Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 993,
                    "commit message": "Document that the list of header names will not contain null names.\n\nAdded a test to demonstrate missing null headers from the list. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
                },
                {
                    "commit index": 1010,
                    "commit message": "Replace org.apache.commons.csv.Assertions.notNull() with\nObjects.requireNonNull(). src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
                },
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
                },
                {
                    "commit index": 1174,
                    "commit message": "Add @SuppressWarnings(\"resource\") in test as narrowly as possible src.test.java.org.apache.commons.csv.CSVParserTest.testHeadersWithNullColumnName CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 997,
                    "commit message": "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum CSVRecordTest.java"
                },
                {
                    "commit index": 1045,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum CSVRecordTest.java"
                },
                {
                    "commit index": 1104,
                    "commit message": "[CSV-269] CSVRecord.get(Enum) should use Enum.name() instead of\nEnum.toString(). src.test.java.org.apache.commons.csv.CSVRecordTest.testGetWithEnum CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 997,
                    "commit message": "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.testToString CSVRecordTest.java"
                },
                {
                    "commit index": 1045,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testToString CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader",
            "function params": [
                "number"
            ],
            "commits that changed in": [
                {
                    "commit index": 997,
                    "commit message": "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader CSVRecordTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader CSVRecordTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVRecordTest.EnumHeader CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 997,
                    "commit message": "Add testcases for CSVRecord with get(Enum) and toString. (#54) src.test.java.org.apache.commons.csv.CSVRecordTest.toString CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 999,
                    "commit message": "fix isssue csv-259 (#61)\n\n* fix isssue csv-259\r\n\r\n* add testcase for CSV259\r\n\r\n* exclude csv259 test file\r\n\r\n* organize the imports src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCSV259 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1001,
                    "commit message": "improve CSVFormat test coverage (#63)\n\n* improve CSVFormat test coverage\r\n\r\n* remove print in test src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithoutCRLF CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1001,
                    "commit message": "improve CSVFormat test coverage (#63)\n\n* improve CSVFormat test coverage\r\n\r\n* remove print in test src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
                },
                {
                    "commit index": 1056,
                    "commit message": "Clean up exception. src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVFormatTest.testFormatToString CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1001,
                    "commit message": "improve CSVFormat test coverage (#63)\n\n* improve CSVFormat test coverage\r\n\r\n* remove print in test src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithEscapesEndWithCRLF CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof",
            "function params": [
                "eolAtEof"
            ],
            "commits that changed in": [
                {
                    "commit index": 1003,
                    "commit message": "[CSV-149] Add disabled test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1017,
                    "commit message": "Fix bug in test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1183,
                    "commit message": "Add assert as sanity check src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEolAtEof JiraCsv149Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithoutEOL",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1003,
                    "commit message": "[CSV-149] Add disabled test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithoutEOL JiraCsv149Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEOL",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1003,
                    "commit message": "[CSV-149] Add disabled test. src.test.java.org.apache.commons.csv.issues.JiraCsv149Test.testJiraCsv149EndWithEOL JiraCsv149Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testTrim CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsRecordSeparatorThrowsException CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1071,
                    "commit message": "[CSV-263] Print from Reader with embedded quotes generates incorrect\noutput.\n\n- Resolve conflicts from PR #78 by Jason A. Guild.\n- Don't use depreacted methods.\n- Javadoc.\n- Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuotes CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithQuoteModeIsNONE CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderResultSetNull CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintWithoutQuotes CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1004,
                    "commit message": "Improve test coverage in CSVFormatTest (#65)\n\n* Improve Format Coverage to 99percent\r\n\r\n* code format add space src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java"
                },
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithHeaderEnumNull CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1006,
                    "commit message": "Improve record and printer Coverage (#66)\n\n* Improve CSVRecord and CSVPrinter coverage\r\n\r\n* remove useless test code and test throws\r\n\r\n* add space src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable CSVPrinterTest.java"
                },
                {
                    "commit index": 1023,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testNotFlushable CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1006,
                    "commit message": "Improve record and printer Coverage (#66)\n\n* Improve CSVRecord and CSVPrinter coverage\r\n\r\n* remove useless test code and test throws\r\n\r\n* add space src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1023,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testCRComment CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1006,
                    "commit message": "Improve record and printer Coverage (#66)\n\n* Improve CSVRecord and CSVPrinter coverage\r\n\r\n* remove useless test code and test throws\r\n\r\n* add space src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues CSVRecordTest.java"
                },
                {
                    "commit index": 1045,
                    "commit message": "Sort methods. src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues CSVRecordTest.java"
                },
                {
                    "commit index": 1306,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVRecordTest.testCSVRecordNULLValues CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeFF",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1007,
                    "commit message": "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeFF LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeFF LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testIsMetaCharCommentStart",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1007,
                    "commit message": "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testIsMetaCharCommentStart LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testIsMetaCharCommentStart LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1007,
                    "commit message": "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength LexerTest.java"
                },
                {
                    "commit index": 1308,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.LexerTest.testTrimTrailingSpacesZeroLength LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeTab",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1007,
                    "commit message": "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeTab LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeBackspace",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1007,
                    "commit message": "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeBackspace LexerTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.testReadEscapeBackspace LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.TokenMatchersTest.testToString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1007,
                    "commit message": "Improve lexer and token coverage (#67)\n\n* Improve Lexer and Token coverage\r\n\r\n* fix the imports src.test.java.org.apache.commons.csv.TokenMatchersTest.testToString TokenMatchersTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1008,
                    "commit message": "[CSV-211] CSVFormat.format trims last delimiter if the delimiter is a white space (#71)\n\n* [CSV-211] fix CSVFormat.format trims last delimiter if the delimiter is a white space\r\n\r\n* [CSV-211] Add JiraCsv211Test src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1009,
                    "commit message": "[CSV-211] CSVFormat.format trims last delimiter if the delimiter is a\nwhite space #71. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1173,
                    "commit message": "Fix compiler warning src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv211Test.testJiraCsv211Format JiraCsv211Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput JiraCsv167Test.java"
                },
                {
                    "commit index": 1058,
                    "commit message": "Use try-with-resources. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput JiraCsv167Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestInput JiraCsv167Test.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withEscape",
            "function params": [
                "escape"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withEscape CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withRecordSeparator",
            "function params": [
                "recordSeparator"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withRecordSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getTrailingDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getTrailingDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.print",
            "function params": [
                "object",
                "value",
                "out",
                "newRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.print CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowDuplicateHeaderNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withHeader",
            "function params": [
                "header"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeader CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteCharacter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withAutoFlush",
            "function params": [
                "autoFlush"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAutoFlush CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withTrim",
            "function params": [
                "trim"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrim CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withQuote",
            "function params": [
                "quoteChar"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withQuote CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.toStringArray",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.toStringArray CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withDelimiter",
            "function params": [
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withNullString",
            "function params": [
                "nullString"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withNullString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withHeaderComments",
            "function params": [
                "headerComments"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withHeaderComments CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord",
            "function params": [
                "skipHeaderRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withSkipHeaderRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.equals",
            "function params": [
                "obj"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.equals CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isQuoteCharacterSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.valueOf",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.valueOf CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.println",
            "function params": [
                "out"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.println CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.printWithQuotes",
            "function params": [
                "object",
                "value",
                "out",
                "newRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithQuotes CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withQuoteMode",
            "function params": [
                "quoteModePolicy"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withQuoteMode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteMode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getQuoteMode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getSkipHeaderRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.CSVFormat",
            "function params": [
                "delimiter",
                "quoteChar",
                "quoteMode",
                "commentStart",
                "escape",
                "ignoreSurroundingSpaces",
                "ignoreEmptyLines",
                "recordSeparator",
                "nullString",
                "headerComments",
                "header",
                "skipHeaderRecord",
                "allowMissingColumnNames",
                "ignoreHeaderCase",
                "trim",
                "trailingDelimiter",
                "autoFlush",
                "allowDuplicateHeaderNames"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.CSVFormat CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.toString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getCommentMarker",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getCommentMarker CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.trim",
            "function params": [
                "charSequence"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.trim CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getHeader CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withTrailingDelimiter",
            "function params": [
                "trailingDelimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withTrailingDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.isNullStringSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isNullStringSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withSystemRecordSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getAutoFlush",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getAutoFlush CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getAllowDuplicateHeaderNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.printer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printer CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getTrim",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getTrim CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getHeaderComments CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.parse",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.parse CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getEscapeCharacter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getEscapeCharacter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.validate",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.validate CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.printWithEscapes",
            "function params": [
                "value",
                "out"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printWithEscapes CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.isLineBreak",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isLineBreak CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getFormat",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getFormat CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withCommentMarker",
            "function params": [
                "commentMarker"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withCommentMarker CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.hashCode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.hashCode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.format",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.format CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.newFormat",
            "function params": [
                "delimiter"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.newFormat CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getNullString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.Predefined",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.Predefined CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.getRecordSeparator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.getRecordSeparator CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces",
            "function params": [
                "ignoreSurroundingSpaces"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isEscapeCharacterSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.isCommentMarkerSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.isCommentMarkerSet CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVFormat.printRecord",
            "function params": [
                "out",
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVFormat.printRecord CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getRecords",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getRecords CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.createEmptyHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.createEmptyHeaderMap CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.nextRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.nextRecord CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVRecordIterator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.Headers",
            "function params": [
                "headerMap",
                "headerNames"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.Headers CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMap CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.iterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.iterator CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.addRecordValue",
            "function params": [
                "lastRecord"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.addRecordValue CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.close CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.isClosed CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.CSVParser",
            "function params": [
                "reader",
                "format",
                "characterOffset",
                "recordNumber"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.CSVParser CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getHeaderNames CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMapRaw",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getHeaderMapRaw CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getFirstEndOfLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getFirstEndOfLine CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.parse",
            "function params": [
                "reader",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.parse CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getRecordNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getRecordNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.getCurrentLineNumber CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVParser.createHeaders",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVParser.createHeaders CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.close",
            "function params": [
                "flush"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.close CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.printComment",
            "function params": [
                "comment"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.resources.org.apache.commons.csv.CSVPrinter.printComment CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecords CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.println",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.println CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.flush",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.flush CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.CSVPrinter",
            "function params": [
                "out",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.CSVPrinter CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.print",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.print CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.getOut",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.getOut CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVPrinter.printRecord",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVPrinter.printRecord CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.getCharacterPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getCharacterPosition CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.isSet",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isSet CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.getParser",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getParser CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.getComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getComment CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.get",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.get CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.toList",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.toList CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.getHeaderMapRaw",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getHeaderMapRaw CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.CSVRecord",
            "function params": [
                "parser",
                "values",
                "comment",
                "recordNumber",
                "characterPosition"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.CSVRecord CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.hasComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.hasComment CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.size",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.size CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.isMapped",
            "function params": [
                "name"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isMapped CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.getRecordNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.getRecordNumber CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.putIn",
            "function params": [
                "map"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.putIn CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.values",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.values CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.iterator",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.iterator CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.isConsistent",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.isConsistent CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.toMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.toMap CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.CSVRecord.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.CSVRecord.toString CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.lookAhead",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.lookAhead ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.isClosed ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getLastChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getLastChar ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.readLine",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.readLine ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.read",
            "function params": [
                "buf",
                "offset",
                "length"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.read ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.close ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader",
            "function params": [
                "reader"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.ExtendedBufferedReader.getPosition ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.IOUtils.copyLarge",
            "function params": [
                "input",
                "output",
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copyLarge IOUtils.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.IOUtils.copy",
            "function params": [
                "input",
                "output",
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                },
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.IOUtils.copy IOUtils.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.parseEncapsulatedToken",
            "function params": [
                "token"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.parseEncapsulatedToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isCommentStart",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isCommentStart Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isStartOfLine",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isStartOfLine Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.nextToken",
            "function params": [
                "token"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.nextToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.getCurrentLineNumber",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.getCurrentLineNumber Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.getCharacterPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.getCharacterPosition Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.close",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.close Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isWhitespace",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isWhitespace Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.readEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.readEscape Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isEscape",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isEscape Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.parseSimpleToken",
            "function params": [
                "token",
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.parseSimpleToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.mapNullToDisabled",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.mapNullToDisabled Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isEndOfFile",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isEndOfFile Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isQuoteChar",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isQuoteChar Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isClosed",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isClosed Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.Lexer",
            "function params": [
                "format",
                "reader"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.Lexer Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isDelimiter",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isDelimiter Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.isMetaChar",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.isMetaChar Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.trimTrailingSpaces",
            "function params": [
                "buffer"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.trimTrailingSpaces Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.readEndOfLine",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.readEndOfLine Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Lexer.getFirstEol",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Lexer.getFirstEol Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Token.reset",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Token.reset Token.java"
                }
            ]
        },
        {
            "function name": "src.test.resources.org.apache.commons.csv.Token.toString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1016,
                    "commit message": "Move resources to component specific folder. src.test.resources.org.apache.commons.csv.Token.toString Token.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1024,
                    "commit message": "Add org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord(). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1028,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1048,
                    "commit message": "Organize imports, simpler arrays, simpler if/else. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordsWithCSVRecord CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1031,
                    "commit message": "CSV-267 - Minor improvement (#126) src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv249Test.testJiraCsv249 JiraCsv249Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders",
            "function params": [
                "resultSet"
            ],
            "commits that changed in": [
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
                },
                {
                    "commit index": 1108,
                    "commit message": "[CSV-295] Support for parallelism in CSVPrinter. src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVPrinter.printHeaders CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetHeader CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1038,
                    "commit message": "[CSV-123] Add possibility to use ResultSet header meta data as CSV\nheader #11. src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection CSVPrinterTest.java"
                },
                {
                    "commit index": 1062,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.getH2Connection CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToList",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1044,
                    "commit message": "[CSV-275] Make CSVRecord.toList() public. src.test.java.org.apache.commons.csv.CSVRecordTest.testToList CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.toStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1046,
                    "commit message": "Add CSVRecord#toStream(). src.main.java.org.apache.commons.csv.CSVRecord.toStream CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1046,
                    "commit message": "Add CSVRecord#toStream(). src.test.java.org.apache.commons.csv.CSVRecordTest.testToStream CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVRecord.stream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1047,
                    "commit message": "Use Stream.of() and rename new method to be like Collection#stream()\ninstead of toStream(). src.main.java.org.apache.commons.csv.CSVRecord.stream CSVRecord.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1047,
                    "commit message": "Use Stream.of() and rename new method to be like Collection#stream()\ninstead of toStream(). src.test.java.org.apache.commons.csv.CSVRecordTest.testStream CSVRecordTest.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.CSVRecordTest.testStream CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.stream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1050,
                    "commit message": "# WARNING: head commit changed in the meantime\n\nAdd CSVParser#stream().\n\n- Use JApiCmp instead of Clirr in the default goal.\n- Allow for longer lines.\n- Fix PMD custom rules for current version of PMD.\n- Bump checkstyle from 8.29 to 8.44.\n- Bump commons.javadoc.version from 3.2.0 to 3.3.0. src.main.java.org.apache.commons.csv.CSVParser.stream CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1050,
                    "commit message": "# WARNING: head commit changed in the meantime\n\nAdd CSVParser#stream().\n\n- Use JApiCmp instead of Clirr in the default goal.\n- Allow for longer lines.\n- Fix PMD custom rules for current version of PMD.\n- Bump checkstyle from 8.29 to 8.44.\n- Bump commons.javadoc.version from 3.2.0 to 3.3.0. src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testStream CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1052,
                    "commit message": "[CSV-148] Add testcases about withIgnoreSurroundingSpaces() and withTrim() (#70) src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithIgnoreSurroundingSpacesEmpty JiraCsv148Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1052,
                    "commit message": "[CSV-148] Add testcases about withIgnoreSurroundingSpaces() and withTrim() (#70) src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv148Test.testWithTrimEmpty JiraCsv148Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.Builder",
            "function params": [
                "escapeCharacter"
            ],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1137,
                    "commit message": "Check setDelimiter() for empty string\n\nSigned-off-by: Mykola Faryma <m.faryma@partner.samsung.com> src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1139,
                    "commit message": "Use Java 8 API src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1155,
                    "commit message": "Inline single use variable src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1155,
                    "commit message": "Inline single use variable src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1179,
                    "commit message": "Revert \"Add support for trailing text after the closing quote, for Excel compatibility.\"\n\nThis reverts commit ed0ca2232105f6df1f3fc68762f03c7595dc20c2. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.main.java.org.apache.commons.csv.CSVFormat.Builder CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.builder",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.main.java.org.apache.commons.csv.CSVFormat.builder CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.builder CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.builder CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1 CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException1 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236_0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236_0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106_0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106_0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1 CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException1 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType0",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1059,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73. src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType0 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withList",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1060,
                    "commit message": "Fixed CSV-271 & Add testcase for new change (#157) src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withList JiraCsv271Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withList JiraCsv271Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withArray",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1060,
                    "commit message": "Fixed CSV-271 & Add testcase for new change (#157) src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withArray JiraCsv271Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv271Test.testJiraCsv271_withArray JiraCsv271Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrue_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106__Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106__Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106__Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNullString_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsNoQuotes_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsLeftNoQuoteRightQuote_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsHeader_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testJiraCsv236__Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEqualsEscape_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1061,
                    "commit message": "Add and use CSVFormat.Builder, deprecated CSVFormat#with methods, based\non #73.\n\nBetter test method names and use @SuppressWarnings(\"deprecation\"). src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsFalse_Deprecated CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterString CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter",
            "function params": [
                "ch",
                "charSeq",
                "startIndex",
                "delimiter",
                "delimiterLength"
            ],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1263,
                    "commit message": "Better internal name\n\nJavadoc src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java"
                },
                {
                    "commit index": 1263,
                    "commit message": "Better internal name\n\nJavadoc src.main.java.org.apache.commons.csv.CSVFormat.isDelimiter CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak",
            "function params": [
                "source"
            ],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.containsLineBreak CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.contains",
            "function params": [
                "source",
                "searchCh"
            ],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.CSVFormat.contains CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.contains CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.contains CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java"
                },
                {
                    "commit index": 1093,
                    "commit message": "CSV-278: Reuse Buffers in Lexer for Delimiter Detection (#162)\n\n* CSV-278: Reuse Buffers in Lexer for Delimiter Detection\r\n\r\n* Remove erroneous tab character\r\n\r\n* Reduce change set with fewer formatting changes\r\n\r\n* Reduce change set with fewer formatting changes src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java"
                },
                {
                    "commit index": 1256,
                    "commit message": "Internal refactoring\n\nReduce whitepace src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.Lexer.isEscapeDelimiter Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithQuote CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteWithEscape CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithQuoteThrowsException CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterStringWithEscape CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.CSVParserTest.testNotValueCSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithQuote CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testParseWithDelimiterWithEscape CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoted CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimiterStringEscaped CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVPrinterTest.testDelimeterStringQuoteNone CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1063,
                    "commit message": "Add support for String delimiters #76.\n\nBump PMD core from 6.29.0 to 6.36.0. Fix rule set. src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
                },
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv206Test.testJiraCsv206MultipleCharacterDelimiter JiraCsv206Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1067,
                    "commit message": "Add tests that print CSVRecords. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1074,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecord CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1067,
                    "commit message": "Add tests that print CSVRecords. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
                },
                {
                    "commit index": 1074,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVParser CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1067,
                    "commit message": "Add tests that print CSVRecords. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
                },
                {
                    "commit index": 1074,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
                },
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintCSVRecords CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1068,
                    "commit message": "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader (#5)\n\n* Fix eol checking for read array in ExtendedBufferedReader\r\n\r\n* Add test for eol checking when reading to different buffers\r\n\r\nCo-authored-by: mirasrael <d_signer@mail.ru>\r\nCo-authored-by: Alexander Bondarev <alexander.bondarev@thomsonreuters.com> src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1069,
                    "commit message": "[CSV-158] Fix EOL checking for read array in ExtendedBufferedReader.\n\nClean up new test methods. Sort methods. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1073,
                    "commit message": "Use final. src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java"
                },
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.test.java.org.apache.commons.csv.ExtendedBufferedReaderTest.testReadingInDifferentBuffer ExtendedBufferedReaderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.append",
            "function params": [
                "c",
                "appendable"
            ],
            "commits that changed in": [
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
                },
                {
                    "commit index": 1070,
                    "commit message": "Refactor append calls into private methods for ongoing streaming work. src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.append CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv263Test.testPrintFromReaderWithQuotes",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1071,
                    "commit message": "[CSV-263] Print from Reader with embedded quotes generates incorrect\noutput.\n\n- Resolve conflicts from PR #78 by Jason A. Guild.\n- Don't use depreacted methods.\n- Javadoc.\n- Use final. src.test.java.org.apache.commons.csv.issues.JiraCsv263Test.testPrintFromReaderWithQuotes JiraCsv263Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv263Test.testPrintFromReaderWithQuotes JiraCsv263Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.isStrictQuoteMode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.CSVParser.isStrictQuoteMode CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.isStrictQuoteMode CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.handleNull",
            "function params": [
                "input"
            ],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.main.java.org.apache.commons.csv.CSVParser.handleNull CSVParser.java"
                },
                {
                    "commit index": 1279,
                    "commit message": "Only need this in ctor src.main.java.org.apache.commons.csv.CSVParser.handleNull CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.testHandleAbsentValues",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.testHandleAbsentValues JiraCsv253Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.testHandleAbsentValues JiraCsv253Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.assertArrayEqual",
            "function params": [
                "expected",
                "actual"
            ],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv253Test.assertArrayEqual JiraCsv253Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithNotSetNullString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithNotSetNullString JiraCsv93Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithNotSetNullString JiraCsv93Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.every",
            "function params": [
                "csvFormat",
                "objects",
                "format",
                "data"
            ],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.every JiraCsv93Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringNULL",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringNULL JiraCsv93Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringNULL JiraCsv93Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringEmptyString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1075,
                    "commit message": "[CSV-93] Allow the handling of NULL values.\n\n- [CSV-253] Handle absent values in input (null).\n- Cleaned up version of PR 77 from dota17 where:\n- Don't duplicate two state items from the format.\n- Use try-with-resources.\n- Remove useless parens.\n- Update Javaodc.\n- Sort members in the new tests.\n- Use builder. src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringEmptyString JiraCsv93Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv93Test.testWithSetNullStringEmptyString JiraCsv93Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyString",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1077,
                    "commit message": "Test parsing an empty file.\n\n- Sort members.\n- Better constant name.\n- Move RAT check to plugin management section to de-duplicate the\nexclusion list. src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyString CSVParserTest.java"
                },
                {
                    "commit index": 1114,
                    "commit message": "The declared exception Exception is not actually thrown by the method src.test.java.org.apache.commons.csv.CSVParserTest.testEmptyString CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withCommentMarker",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withCommentMarker JiraCsv154Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withCommentMarker JiraCsv154Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withHeaderComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1080,
                    "commit message": "Use Builder.\n\nDon't declared unused exceptions in throw src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withHeaderComments JiraCsv154Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv154Test.testJiraCsv154_withHeaderComments JiraCsv154Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1082,
                    "commit message": "Better resource management. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestReader JiraCsv167Test.java"
                },
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.getTestReader JiraCsv167Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVBenchmark.scan",
            "function params": [
                "bh"
            ],
            "commits that changed in": [
                {
                    "commit index": 1088,
                    "commit message": "CSV-281: Update CSVBenchmark (#165)\n\n* CSV-281: Update CSVBenchmark\r\n\r\n* Restore split Benchmark to use BufferedReader src.test.java.org.apache.commons.csv.CSVBenchmark.scan CSVBenchmark.java"
                },
                {
                    "commit index": 1207,
                    "commit message": "removing unwanted files src.test.java.org.apache.commons.csv.CSVBenchmark.scan CSVBenchmark.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVBenchmark.scan CSVBenchmark.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1095,
                    "commit message": "[CSV-265] Update buffer position when reading line comment (#120)\n\n* [CSV-265] Add JiraCsv265Test\r\n\r\n* [CSV-265] Update buffer position when reading line comment\r\n\r\n* Update JiraCsv265Test.java\r\n\r\nFile should end in a new line.\r\n\r\nCo-authored-by: Tyler King <tylerking001@hotmail.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com> src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments JiraCsv265Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments JiraCsv265Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithComments JiraCsv265Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1095,
                    "commit message": "[CSV-265] Update buffer position when reading line comment (#120)\n\n* [CSV-265] Add JiraCsv265Test\r\n\r\n* [CSV-265] Update buffer position when reading line comment\r\n\r\n* Update JiraCsv265Test.java\r\n\r\nFile should end in a new line.\r\n\r\nCo-authored-by: Tyler King <tylerking001@hotmail.com>\r\nCo-authored-by: Gary Gregory <garydgregory@users.noreply.github.com> src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines JiraCsv265Test.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines JiraCsv265Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv265Test.testCharacterPositionWithCommentsSpanningMultipleLines JiraCsv265Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.setUp",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1096,
                    "commit message": "Sort members. src.test.java.org.apache.commons.csv.LexerTest.setUp LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiter JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithSinglePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter4 JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterQuoted JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter1 JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiterEndsWithDelimiter JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTriplePipeDelimiter JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1130,
                    "commit message": "Use forEach() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithABADelimiter JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter2 JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterEndsWithDelimiter JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithTwoCharDelimiter3 JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1102,
                    "commit message": "CSV-288 Fix for multi-char delimiter not working as expected (#218)\n\nWhen checking if previous token is delimiter, isDelimiter(lastChar) unintentionally advance the buffer pointer. Also isDelimiter(lastChar) cannot handle multi-char delimiter. To fix this, create a new indicator isLastTokenDelimiter instead of using isDelimiter(lastChar), the indicator is set/reset in isDelimiter() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java"
                },
                {
                    "commit index": 1107,
                    "commit message": "Use final. Use shorthand syntax for array creation. src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java"
                },
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.testParseWithDoublePipeDelimiterDoubleCharValue JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java"
                },
                {
                    "commit index": 1117,
                    "commit message": "Replace @since with @see src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.getDuplicateHeaderMode CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java"
                },
                {
                    "commit index": 1150,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testWithEmptyDuplicates CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264 JiraCsv264Test.java"
                },
                {
                    "commit index": 1111,
                    "commit message": "Remove unused exceptions src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264 JiraCsv264Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264 JiraCsv264Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow JiraCsv264Test.java"
                },
                {
                    "commit index": 1111,
                    "commit message": "Remove unused exceptions src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow JiraCsv264Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapDisallow JiraCsv264Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1103,
                    "commit message": "CSV-264: Added DuplicateHeaderMode for flexibility with header strictness. (#114)\n\n* csv-264: added duplicateheadermode for flexibility with header strictness\r\n\r\n* fix: use assertthrows and update docs src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty JiraCsv264Test.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty JiraCsv264Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv264Test.testJiraCsv264WithGapAllowEmpty JiraCsv264Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.printRecordObject",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.printRecordObject CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.rethrow",
            "function params": [
                "throwable"
            ],
            "commits that changed in": [
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.main.java.org.apache.commons.csv.CSVPrinter.rethrow CSVPrinter.java"
                },
                {
                    "commit index": 1235,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVPrinter.rethrow CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testPrintRecordStream CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllStreamOfArrays",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1112,
                    "commit message": "Add CSVPrinter.printRecord[s](Stream). src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllStreamOfArrays CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllStreamOfArrays CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListForEach",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1113,
                    "commit message": "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListForEach CSVRecordTest.java"
                },
                {
                    "commit index": 1129,
                    "commit message": "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVRecordTest.testToListForEach CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListFor",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1113,
                    "commit message": "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListFor CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListSet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1113,
                    "commit message": "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListSet CSVRecordTest.java"
                },
                {
                    "commit index": 1129,
                    "commit message": "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVRecordTest.testToListSet CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testToListAdd",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1113,
                    "commit message": "CSVRecord.toList() does not give write access to the new List src.test.java.org.apache.commons.csv.CSVRecordTest.testToListAdd CSVRecordTest.java"
                },
                {
                    "commit index": 1129,
                    "commit message": "Use API instead of system property\n\nUse final src.test.java.org.apache.commons.csv.CSVRecordTest.testToListAdd CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getHeaderComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.getHeaderComment CSVParser.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.CSVParser.getHeaderComment CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getTrailerComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.getTrailerComment CSVParser.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.CSVParser.getTrailerComment CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.hasTrailerComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.hasTrailerComment CSVParser.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.CSVParser.hasTrailerComment CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.hasHeaderComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.main.java.org.apache.commons.csv.CSVParser.hasHeaderComment CSVParser.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.CSVParser.hasHeaderComment CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.getHeaderComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.test.java.org.apache.commons.csv.CSVParserTest.getHeaderComment CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.getTrailerComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1118,
                    "commit message": "[CSV-304] Accessors for header/trailer comments\n\nAdd accessors for header comments (before the header row)\nand trailer comments (after the last record)\nAlso add javadoc and tests src.test.java.org.apache.commons.csv.CSVParserTest.getTrailerComment CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment3 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment3 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1 CSVParserTest.java"
                },
                {
                    "commit index": 1125,
                    "commit message": "Fix formatting src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment2 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment3 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment2 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment1 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderTrailerComment1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment3 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment3 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderTrailerComment CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment2 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_MultilineComment CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment2 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_NoComment2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment1 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetTrailerComment_HeaderComment1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1119,
                    "commit message": "Split tests into separate methods\n\nAs requested in code review src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment1 CSVParserTest.java"
                },
                {
                    "commit index": 1126,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testGetHeaderComment_HeaderComment1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordsFromBrokenInputStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1121,
                    "commit message": "Add a test for broken input. src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordsFromBrokenInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1127,
                    "commit message": "CSVParser.getRecords() now throws UncheckedIOException instead of\nIOException src.test.java.org.apache.commons.csv.CSVParserTest.testGetRecordsFromBrokenInputStream CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Constants.Constants",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1131,
                    "commit message": "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.Constants.Constants Constants.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.IOUtils.IOUtils",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1131,
                    "commit message": "Make package private class final\n\nAllow no instances of some internal classes src.main.java.org.apache.commons.csv.IOUtils.IOUtils IOUtils.java"
                },
                {
                    "commit index": 1184,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.IOUtils.IOUtils IOUtils.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.IOUtils.rethrow",
            "function params": [
                "throwable"
            ],
            "commits that changed in": [
                {
                    "commit index": 1134,
                    "commit message": "Move package-private method. src.main.java.org.apache.commons.csv.IOUtils.rethrow IOUtils.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlText",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1135,
                    "commit message": "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlText JiraCsv290Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlCsv",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1135,
                    "commit message": "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testPostgresqlCsv JiraCsv290Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1135,
                    "commit message": "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
                },
                {
                    "commit index": 1144,
                    "commit message": "Use final\n\nRemove unused imports src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
                },
                {
                    "commit index": 1169,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
                },
                {
                    "commit index": 1305,
                    "commit message": "Use try-with-resources src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testWriteThenRead JiraCsv290Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper",
            "function params": [
                "filename",
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 1135,
                    "commit message": "CSV-290 - Fix the wrong assumptions in PostgreSQL formats\n\nCSVFormat.POSTGRESQL_CSV - special characters are not escaped.\nCSVFormat.POSTGRESQL_TEXT - values are not quoted. src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1136,
                    "commit message": "Add test for tab characters (ASCII 9) in values src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1144,
                    "commit message": "Use final\n\nRemove unused imports src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1144,
                    "commit message": "Use final\n\nRemove unused imports src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1145,
                    "commit message": "Simplify test src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1240,
                    "commit message": "Camel-case parameter names src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1240,
                    "commit message": "Camel-case parameter names src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                },
                {
                    "commit index": 1271,
                    "commit message": "Use better JUnit API src.test.java.org.apache.commons.csv.issues.JiraCsv290Test.testHelper JiraCsv290Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1137,
                    "commit message": "Check setDelimiter() for empty string\n\nSigned-off-by: Mykola Faryma <m.faryma@partner.samsung.com> src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1 CSVFormatTest.java"
                },
                {
                    "commit index": 1151,
                    "commit message": "Add missing code coverage src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDelimiterEmptyStringThrowsException1 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print",
            "function params": [
                "csvRecord",
                "csvPrinter"
            ],
            "commits that changed in": [
                {
                    "commit index": 1146,
                    "commit message": "Refactor code duplication in tests src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print JiraCsv288Test.java"
                },
                {
                    "commit index": 1172,
                    "commit message": "Use final and lambda shorthand src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print JiraCsv288Test.java"
                },
                {
                    "commit index": 1172,
                    "commit message": "Use final and lambda shorthand src.test.java.org.apache.commons.csv.issues.JiraCsv288Test.print JiraCsv288Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar",
            "function params": [
                "ch"
            ],
            "commits that changed in": [
                {
                    "commit index": 1147,
                    "commit message": "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                },
                {
                    "commit index": 1147,
                    "commit message": "Refactor duplicate code\n\nNormalize Javadoc first word src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                },
                {
                    "commit index": 1154,
                    "commit message": "Bump CSVFormat#serialVersionUID from 1 to 2\n\nJavadoc Serialization in CSVFormat is not supported from one version to\nthe next. src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                },
                {
                    "commit index": 1154,
                    "commit message": "Bump CSVFormat#serialVersionUID from 1 to 2\n\nJavadoc Serialization in CSVFormat is not supported from one version to\nthe next. src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                },
                {
                    "commit index": 1286,
                    "commit message": "Bump commons-parent from 69 to 70\n\nFix PMD issues for port to PMD 7.1.0 src.main.java.org.apache.commons.csv.CSVFormat.isTrimChar CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecordEmpty",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1151,
                    "commit message": "Add missing code coverage src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecordEmpty CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1151,
                    "commit message": "Add missing code coverage src.test.java.org.apache.commons.csv.CSVFormatTest.testPrintRecord CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1156,
                    "commit message": "Fill in the test coverage for getAllowDuplicateHeaderNames() to reflect\nthe _current_ behavior, right or wrong. src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames CSVFormatTest.java"
                },
                {
                    "commit index": 1157,
                    "commit message": "Sort member src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testGetAllowDuplicateHeaderNames CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testGetDuplicateHeaderMode",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1158,
                    "commit message": "Add testGetDuplicateHeaderMode() src.test.java.org.apache.commons.csv.CSVFormatTest.testGetDuplicateHeaderMode CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testGetDuplicateHeaderMode CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.IOUtilsTest.testRethrow",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1160,
                    "commit message": "Explicitly test a method JaCoCo says is not tested but should be src.test.java.org.apache.commons.csv.IOUtilsTest.testRethrow IOUtilsTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty2 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty2 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty1 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty1 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty3",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1161,
                    "commit message": "Validates that a CSVFormat rejects empty header names src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty3 CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElementsTrueContainsEmpty3 CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser",
            "function params": [
                "duolicateHeaderMode",
                "allowMissingColumnNames",
                "headers",
                "valid"
            ],
            "commits that changed in": [
                {
                    "commit index": 1163,
                    "commit message": "Add test for duplicate header names\n\nTest the CSVFormat and CSVParser handle the headers consistently.\n\nCSVParser handles all 36 cases.\n\nCSFFormat fails 6 cases. These are currently disabled. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1165,
                    "commit message": "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1165,
                    "commit message": "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1166,
                    "commit message": "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1166,
                    "commit message": "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1168,
                    "commit message": "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1170,
                    "commit message": "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1170,
                    "commit message": "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVParser CSVDuplicateHeaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1163,
                    "commit message": "Add test for duplicate header names\n\nTest the CSVFormat and CSVParser handle the headers consistently.\n\nCSVParser handles all 36 cases.\n\nCSFFormat fails 6 cases. These are currently disabled. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1166,
                    "commit message": "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1168,
                    "commit message": "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1170,
                    "commit message": "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderData CSVDuplicateHeaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat",
            "function params": [
                "duolicateHeaderMode",
                "allowMissingColumnNames",
                "headers",
                "valid"
            ],
            "commits that changed in": [
                {
                    "commit index": 1163,
                    "commit message": "Add test for duplicate header names\n\nTest the CSVFormat and CSVParser handle the headers consistently.\n\nCSVParser handles all 36 cases.\n\nCSFFormat fails 6 cases. These are currently disabled. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1165,
                    "commit message": "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1165,
                    "commit message": "Test javadoc updates and typos src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1166,
                    "commit message": "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1166,
                    "commit message": "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1168,
                    "commit message": "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1170,
                    "commit message": "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.testCSVFormat CSVDuplicateHeaderTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderParseOnlyData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1166,
                    "commit message": "Update test case for cases that are only supported for parsing src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderParseOnlyData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderParseOnlyData CSVDuplicateHeaderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.isBlank",
            "function params": [
                "value"
            ],
            "commits that changed in": [
                {
                    "commit index": 1167,
                    "commit message": "Test for empty/blank headers the same way for input and output src.main.java.org.apache.commons.csv.CSVFormat.isBlank CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.isBlank CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1168,
                    "commit message": "CSVFormat: Sanitise empty headers to the empty string \"\"\n\nAdd more tests for duplicate headers including null header names. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1170,
                    "commit message": "CSV-264: CSVParser identifies null, empty or blank headers as 'missing'\n\nDuplicate missing header names are handled consistently between\nCSVFormat and CSVParser.\n\nDocument that the ignore header case flag is for parser behaviour.\n\nUpdate CSVDuplicateHeaderTest to add the ignore header case flag to\ntests. Add test cases with case insensitive duplicates. src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData CSVDuplicateHeaderTest.java"
                },
                {
                    "commit index": 1184,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVDuplicateHeaderTest.duplicateHeaderAllowsMissingColumnsNamesData CSVDuplicateHeaderTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getAllowTrailingText",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.main.java.org.apache.commons.csv.CSVFormat.getAllowTrailingText CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1176,
                    "commit message": "Add support for trailing text after the closing quote, for Excel compatibility. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java"
                },
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java"
                },
                {
                    "commit index": 1178,
                    "commit message": "Revert \"Add a setting that controls whether the last field on the last line, if quoted, has to have a closing quote before the file ends.\"\n\nThis reverts commit d0ea9e3a000aa358a4960df6cfc8abd735a3d165. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.LexerTest.testTrailingTextAfterQuote LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getAllowEofWithoutClosingQuote",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.main.java.org.apache.commons.csv.CSVFormat.getAllowEofWithoutClosingQuote CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1177,
                    "commit message": "Add a setting that controls whether the last field on the last line,\nif quoted, has to have a closing quote before the file ends. src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote LexerTest.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote LexerTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.LexerTest.testEOFWithoutClosingQuote LexerTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Ok",
            "function params": [
                "format"
            ],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Ok CSVParserTest.java"
                },
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Ok CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141_CSVFormat_DEFAULT",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141_CSVFormat_DEFAULT CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.parse",
            "function params": [
                "parser",
                "failParseRecordNo"
            ],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.parse CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD_CSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD_CSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_POSTGRESQL_CSV",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_POSTGRESQL_CSV CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141RFC4180",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141RFC4180 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_INFORMIX_UNLOAD CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Excel",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Excel CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_ORACLE",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_ORACLE CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Failure",
            "function params": [
                "format",
                "failParseRecordNo"
            ],
            "commits that changed in": [
                {
                    "commit index": 1180,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141Failure CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_DEFAULT",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1181,
                    "commit message": "Tests CSV-141 and PR 295 src.test.java.org.apache.commons.csv.CSVParserTest.testCSV141CSVFormat_DEFAULT CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempPath",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1182,
                    "commit message": "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempPath CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempFile",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1182,
                    "commit message": "Port some code from IO to NIO APIs src.test.java.org.apache.commons.csv.CSVPrinterTest.createTempFile CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1185,
                    "commit message": "feat: document duplicate header behavior src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet CSVRecordTest.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet CSVRecordTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderGet CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1185,
                    "commit message": "feat: document duplicate header behavior src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap CSVRecordTest.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap CSVRecordTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVRecordTest.testDuplicateHeaderToMap CSVRecordTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1203,
                    "commit message": "adding more details into the error message during the CSV parser issues src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent CSVParser.java"
                },
                {
                    "commit index": 1205,
                    "commit message": "formatting changes src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent CSVParser.java"
                },
                {
                    "commit index": 1222,
                    "commit message": "removing last parsed content from exception message, instead making respective method public src.main.java.org.apache.commons.csv.CSVParser.getLastParsedContent CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1203,
                    "commit message": "adding more details into the error message during the CSV parser issues src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage CSVParserTest.java"
                },
                {
                    "commit index": 1205,
                    "commit message": "formatting changes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage CSVParserTest.java"
                },
                {
                    "commit index": 1221,
                    "commit message": "Aligning error messages to be align with master branch src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorWithDetailedMessage CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVTest.testFaultyCSVshouldThrowErrorWithDetailedMessage",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1206,
                    "commit message": "removing duplicated exception class name from error message src.test.java.org.apache.commons.csv.CSVTest.testFaultyCSVshouldThrowErrorWithDetailedMessage CSVTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVTest.readCSVFileSimpleOne",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1206,
                    "commit message": "removing duplicated exception class name from error message src.test.java.org.apache.commons.csv.CSVTest.readCSVFileSimpleOne CSVTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1222,
                    "commit message": "removing last parsed content from exception message, instead making respective method public src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java"
                },
                {
                    "commit index": 1223,
                    "commit message": "adding code review typo fixes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java"
                },
                {
                    "commit index": 1224,
                    "commit message": "fixing code review changes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java"
                },
                {
                    "commit index": 1225,
                    "commit message": "removing unwanted assert src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_2 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1222,
                    "commit message": "removing last parsed content from exception message, instead making respective method public src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java"
                },
                {
                    "commit index": 1223,
                    "commit message": "adding code review typo fixes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java"
                },
                {
                    "commit index": 1224,
                    "commit message": "fixing code review changes src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java"
                },
                {
                    "commit index": 1225,
                    "commit message": "removing unwanted assert src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowErrorAndDetailedMessageShouldBeAvailable_1 CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowExceptionWithLineAndPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1229,
                    "commit message": "moving exception handling to the Lexer src.test.java.org.apache.commons.csv.CSVParserTest.testFaultyCSVShouldThrowExceptionWithLineAndPosition CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1230,
                    "commit message": "changing the exception message to be more meaningful src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java"
                },
                {
                    "commit index": 1242,
                    "commit message": "Sort test members src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java"
                },
                {
                    "commit index": 1253,
                    "commit message": "Use final src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testQuoteModeNoneShouldReturnMeaningfulExceptionMessage CSVFormatTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1232,
                    "commit message": "[CSV-147] Better error message during faulty CSV record read #347\n\nClean up new test src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition CSVParserTest.java"
                },
                {
                    "commit index": 1313,
                    "commit message": "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition CSVParserTest.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVParserTest.testThrowExceptionWithLineAndPosition CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.format_",
            "function params": [
                "values"
            ],
            "commits that changed in": [
                {
                    "commit index": 1236,
                    "commit message": "Reuse Commons IO src.main.java.org.apache.commons.csv.CSVFormat.format_ CSVFormat.java"
                },
                {
                    "commit index": 1247,
                    "commit message": "Add Watchdog.Watchdog(Duration).\n\n- Add ExecuteWatchdog.ExecuteWatchdog(Duration)\n- Deprecate ExecuteWatchdog.ExecuteWatchdog(long)\n- Deprecate Watchdog.Watchdog(long) src.main.java.org.apache.commons.csv.CSVFormat.format_ CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1239,
                    "commit message": "No _ in test method names needed src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithReader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1239,
                    "commit message": "No _ in test method names needed src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParseWithReader CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1239,
                    "commit message": "No _ in test method names needed src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1331,
                    "commit message": "Enable Checkstyle for test sources and fix issues src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testBOMInputStreamParserWithInputStream CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.testParse",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1241,
                    "commit message": "Normalize test method names src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.testParse JiraCsv167Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv167Test.testParse JiraCsv167Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstSpaceValue1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstSpaceValue1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstSpaceValue1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithFirstEmptyValue2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithFirstEmptyValue2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstTabValue1",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstTabValue1 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstTabValue1 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstEmptyValue2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstEmptyValue2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArraysWithFirstEmptyValue2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1268,
                    "commit message": "JDBC Blob columns are now output as Base64 instead of Object#toString(),\nwhich usually is InputStream#toString() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfListsWithFirstEmptyValue2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArraysWithFirstEmptyValue2",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1254,
                    "commit message": "Add the tests that pass from\nhttps://github.com/apache/commons-csv/pull/14 src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArraysWithFirstEmptyValue2 CSVPrinterTest.java"
                },
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArraysWithFirstEmptyValue2 CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterCharArray",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1259,
                    "commit message": "Internal refactoring for delimiter src.main.java.org.apache.commons.csv.CSVFormat.getDelimiterCharArray CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1260,
                    "commit message": "Internal refactoring for escape character src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar CSVFormat.java"
                },
                {
                    "commit index": 1264,
                    "commit message": "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.getEscapeChar CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.escape",
            "function params": [
                "c",
                "appendable"
            ],
            "commits that changed in": [
                {
                    "commit index": 1264,
                    "commit message": "Don't allocate an extra String in CSVFormat.printWithEscapes(Reader,\nAppendable)\n\nInternal refactoring src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java"
                },
                {
                    "commit index": 1269,
                    "commit message": "Use final\n\nRemove whitespace src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java"
                },
                {
                    "commit index": 1269,
                    "commit message": "Use final\n\nRemove whitespace src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java"
                },
                {
                    "commit index": 1291,
                    "commit message": "Document explicit (un)boxing src.main.java.org.apache.commons.csv.CSVFormat.escape CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getLenientEof",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.getLenientEof CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVFormat.getTrailingData",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1270,
                    "commit message": "A different take on PR #303\n\nAdd support for trailing text after the closing quote, and EOF without a\nfinal closing quote, for Excel compatibility. Fix a unit test and add a\nRAT exclude for the sample CSV file. src.main.java.org.apache.commons.csv.CSVFormat.getTrailingData CSVFormat.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1272,
                    "commit message": "MongoDBCsv empty first column parsing fix src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1273,
                    "commit message": "better test - comparing printer input and parser output src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1275,
                    "commit message": "Sort members src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1276,
                    "commit message": "Always use blocks\n\nUse final src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1278,
                    "commit message": "Convert new test into a proper JUnit test src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1278,
                    "commit message": "Convert new test into a proper JUnit test src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1280,
                    "commit message": "Better local name src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.CSVParserTest.testParsingPrintedEmptyFirstColumn CSVParserTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken",
            "function params": [
                "token"
            ],
            "commits that changed in": [
                {
                    "commit index": 1293,
                    "commit message": "Extract duplicated code into a method src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken Lexer.java"
                },
                {
                    "commit index": 1318,
                    "commit message": "[CSV-150] Escaping is not disableable src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken Lexer.java"
                },
                {
                    "commit index": 1332,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.Lexer.appendNextEscapedCharacterToToken Lexer.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.perf.PerformanceTest.readLines",
            "function params": [
                "in"
            ],
            "commits that changed in": [
                {
                    "commit index": 1311,
                    "commit message": "Rename internal method src.test.java.org.apache.commons.csv.perf.PerformanceTest.readLines PerformanceTest.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal",
            "function params": [
                "csvFormat",
                "expectedSubstring"
            ],
            "commits that changed in": [
                {
                    "commit index": 1312,
                    "commit message": "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal JiraCsv294Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal JiraCsv294Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testInternal JiraCsv294Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWorks",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1312,
                    "commit message": "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWorks JiraCsv294Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWorks JiraCsv294Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithQuoteEscapeWorks",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1312,
                    "commit message": "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithQuoteEscapeWorks JiraCsv294Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithQuoteEscapeWorks JiraCsv294Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithBackslashEscapeWorks",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1312,
                    "commit message": "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithBackslashEscapeWorks JiraCsv294Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithBackslashEscapeWorks JiraCsv294Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithNullEscapeWorks",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1312,
                    "commit message": "Add JiraCsv294Test src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithNullEscapeWorks JiraCsv294Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv294Test.testDefaultCsvFormatWithNullEscapeWorks JiraCsv294Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVException.CSVException",
            "function params": [
                "format",
                "args"
            ],
            "commits that changed in": [
                {
                    "commit index": 1313,
                    "commit message": "Add CSVException that extends IOException thrown on invalid input\ninstead of IOException src.main.java.org.apache.commons.csv.CSVException.CSVException CSVException.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEncapsulation",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1315,
                    "commit message": "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEncapsulation JiraCsv150Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEncapsulation JiraCsv150Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableComment",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1315,
                    "commit message": "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableComment JiraCsv150Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableComment JiraCsv150Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable",
            "function params": [
                "csvFormat",
                "stringReader"
            ],
            "commits that changed in": [
                {
                    "commit index": 1315,
                    "commit message": "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable JiraCsv150Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable JiraCsv150Test.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisable JiraCsv150Test.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEscaping",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1315,
                    "commit message": "[CSV-150] Add disabled test JiraCsv150Test\n\nSee also https://github.com/apache/commons-csv/pull/68 src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEscaping JiraCsv150Test.java"
                },
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.issues.JiraCsv150Test.testDisableEscaping JiraCsv150Test.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.Lexer.nullToDisabled",
            "function params": [
                "c"
            ],
            "commits that changed in": [
                {
                    "commit index": 1318,
                    "commit message": "[CSV-150] Escaping is not disableable src.main.java.org.apache.commons.csv.Lexer.nullToDisabled Lexer.java"
                },
                {
                    "commit index": 1332,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.Lexer.nullToDisabled Lexer.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1319,
                    "commit message": "Rename internal methods src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1320,
                    "commit message": "Better internal API src.main.java.org.apache.commons.csv.ExtendedBufferedReader.peek ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark",
            "function params": [
                "readAheadLimit"
            ],
            "commits that changed in": [
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1326,
                    "commit message": "Remove trailing whitespace\n\nUse final src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1326,
                    "commit message": "Remove trailing whitespace\n\nUse final src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1332,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.ExtendedBufferedReader.mark ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.ExtendedBufferedReader.reset",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1325,
                    "commit message": "Improve parser performance by up to 20%, YMMV src.main.java.org.apache.commons.csv.ExtendedBufferedReader.reset ExtendedBufferedReader.java"
                },
                {
                    "commit index": 1332,
                    "commit message": "Sort members src.main.java.org.apache.commons.csv.ExtendedBufferedReader.reset ExtendedBufferedReader.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.getRecordCount",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.getRecordCount CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVPrinter.endOfRecord",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.main.java.org.apache.commons.csv.CSVPrinter.endOfRecord CSVPrinter.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVPrinterTest.assertInitialState",
            "function params": [
                "printer"
            ],
            "commits that changed in": [
                {
                    "commit index": 1333,
                    "commit message": "[CSV-313] Add CSVPrinter.getRecordCount() src.test.java.org.apache.commons.csv.CSVPrinterTest.assertInitialState CSVPrinterTest.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.Builder",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java"
                },
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.Builder CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.main.java.org.apache.commons.csv.CSVParser.builder",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1334,
                    "commit message": "Add and use CSVParser.Builder and builder() src.main.java.org.apache.commons.csv.CSVParser.builder CSVParser.java"
                }
            ]
        },
        {
            "function name": "src.test.java.org.apache.commons.csv.CSVFormatTest.testBuildVsGet",
            "function params": [],
            "commits that changed in": [
                {
                    "commit index": 1336,
                    "commit message": "CSVFormat.Builder implements Supplier<CSVFormat>\n\n- Deprecate CSVFormat.Builder.build() for get() src.test.java.org.apache.commons.csv.CSVFormatTest.testBuildVsGet CSVFormatTest.java"
                }
            ]
        }
    ]
}