{"bugs": ["org.apache.commons.codec.binary.base64.encode(byte[];int;int)"], "components_names": [[5, "org.apache.commons.codec.binary.base64.hasdata()"], [9, "org.apache.commons.codec.binary.base64inputstream.base64inputstream(inputstream;boolean;int;byte[])"], [10, "org.apache.commons.codec.binary.base64inputstream.read()"], [11, "org.apache.commons.codec.binary.base64inputstream.read(byte[];int;int)"], [0, "org.apache.commons.codec.binary.base64.base64(int;byte[])"], [1, "org.apache.commons.codec.binary.base64.base64(int;byte[];boolean)"], [2, "org.apache.commons.codec.binary.base64.avail()"], [3, "org.apache.commons.codec.binary.base64.containsbase64byte(byte[])"], [4, "org.apache.commons.codec.binary.base64.encode(byte[];int;int)"], [6, "org.apache.commons.codec.binary.base64.isbase64(byte)"], [7, "org.apache.commons.codec.binary.base64.readresults(byte[];int;int)"], [8, "org.apache.commons.codec.binary.base64.resizebuf()"], [12, "org.apache.commons.codec.binary.base64outputstream.base64outputstream(outputstream;boolean;int;byte[])"], [13, "org.apache.commons.codec.binary.base64outputstream.close()"], [14, "org.apache.commons.codec.binary.base64outputstream.flush()"], [15, "org.apache.commons.codec.binary.base64outputstream.flush(boolean)"]], "tests_details": [["org.apache.commons.codec.binary.base64test.testencodedecodesmall()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.net.bcodectest.testdecodeobjects()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger1()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testencodeobjects()", [1, 3, 4, 6], 0], ["org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testsingletonschunked()", [1, 3, 4, 6], 0], ["org.apache.commons.codec.binary.base64test.testbase64()", [1, 3, 4, 6], 0], ["org.apache.commons.codec.binary.base64test.testisarraybytebase64()", [6], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", [1, 3, 6], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", [0, 1, 2, 3, 4, 6, 7, 8, 12, 13, 14, 15], 0], ["org.apache.commons.codec.binary.base64test.testknowndecodings()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testsingletons()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", [1, 3, 6], 0], ["org.apache.commons.codec.binary.base64test.testtriplets()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testconstructors()", [0, 1, 3, 6], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstream()", [0, 1, 2, 3, 4, 6, 7, 8, 12, 13, 14, 15], 1], ["org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", [1, 2, 3, 6, 7], 0], ["org.apache.commons.codec.binary.base64test.testcodec68()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testencodedecoderandom()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger3()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testtripletschunked()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstream()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 1], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", [0, 1, 2, 3, 4, 6, 7, 8, 12, 13, 14, 15], 0], ["org.apache.commons.codec.binary.base64test.testnonbase64test()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonly()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testinvalidencoding()", [1, 2, 3, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testknownencodings()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testuuid()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger2()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger4()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testpairs()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", [1, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()", [1, 2, 3, 4, 6, 7, 8], 0]], "initial_tests": ["org.apache.commons.codec.binary.base64test.testencodedecodesmall()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", "org.apache.commons.codec.net.bcodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testcodeinteger1()", "org.apache.commons.codec.net.bcodectest.testencodeobjects()", "org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", "org.apache.commons.codec.binary.base64test.testsingletonschunked()", "org.apache.commons.codec.binary.base64test.testbase64()", "org.apache.commons.codec.binary.base64test.testisarraybytebase64()", "org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", "org.apache.commons.codec.binary.base64test.testknowndecodings()", "org.apache.commons.codec.binary.base64test.testsingletons()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", "org.apache.commons.codec.binary.base64test.testtriplets()", "org.apache.commons.codec.binary.base64test.testconstructors()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstream()", "org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", "org.apache.commons.codec.binary.base64test.testcodec68()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", "org.apache.commons.codec.binary.base64test.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", "org.apache.commons.codec.binary.base64test.testcodeinteger3()", "org.apache.commons.codec.binary.base64test.testtripletschunked()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstream()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", "org.apache.commons.codec.binary.base64test.testnonbase64test()", "org.apache.commons.codec.binary.base64test.testdecodepadonly()", "org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", "org.apache.commons.codec.net.bcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testknownencodings()", "org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", "org.apache.commons.codec.binary.base64test.testuuid()", "org.apache.commons.codec.binary.base64test.testcodeinteger2()", "org.apache.commons.codec.binary.base64test.testcodeinteger4()", "org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64test.testpairs()", "org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", "org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()"]}