{"bugs": ["org.apache.commons.codec.binary.base64.encodebase64string(byte[])"], "components_names": [[0, "org.apache.commons.codec.binary.base64.base64(int)"], [1, "org.apache.commons.codec.binary.base64.base64(int;byte[])"], [11, "org.apache.commons.codec.binary.base64.encodetostring(byte[])"], [17, "org.apache.commons.codec.binary.hex.decodehex(char[])"], [18, "org.apache.commons.codec.binary.hex.todigit(char;int)"], [2, "org.apache.commons.codec.binary.base64.base64(int;byte[];boolean)"], [3, "org.apache.commons.codec.binary.base64.base64(boolean)"], [4, "org.apache.commons.codec.binary.base64.containsbase64byte(byte[])"], [5, "org.apache.commons.codec.binary.base64.encode(byte[])"], [6, "org.apache.commons.codec.binary.base64.encode(byte[];int;int)"], [7, "org.apache.commons.codec.binary.base64.encodebase64(byte[];boolean)"], [8, "org.apache.commons.codec.binary.base64.encodebase64(byte[];boolean;boolean)"], [9, "org.apache.commons.codec.binary.base64.encodebase64(byte[];boolean;boolean;int)"], [10, "org.apache.commons.codec.binary.base64.encodebase64string(byte[])"], [12, "org.apache.commons.codec.binary.base64.getencodelength(byte[];int;byte[])"], [13, "org.apache.commons.codec.binary.base64.isbase64(byte)"], [14, "org.apache.commons.codec.binary.base64.isurlsafe()"], [15, "org.apache.commons.codec.binary.base64.reset()"], [16, "org.apache.commons.codec.binary.base64.setinitialbuffer(byte[];int;int)"], [19, "org.apache.commons.codec.binary.stringutils.getbytesunchecked(string;string)"], [20, "org.apache.commons.codec.binary.stringutils.getbytesutf8(string)"], [21, "org.apache.commons.codec.binary.stringutils.newstring(byte[];string)"], [22, "org.apache.commons.codec.binary.stringutils.newstringutf8(byte[])"]], "tests_details": [["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", [1, 2, 4, 13, 19, 20], 0], ["org.apache.commons.codec.digest.digestutilstest.testsha512()", [19, 20], 0], ["org.apache.commons.codec.binary.base64test.testencodedecodesmall()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20], 0], ["org.apache.commons.codec.binary.hextest.testdecodehexoddcharacters5()", [17], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16be()", [19], 0], ["org.apache.commons.codec.binary.hextest.testdecodestringoddcharacters()", [17], 0], ["org.apache.commons.codec.binary.hextest.testdencodeempty()", [17], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10encode()", [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22], 1], ["org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringbadenc()", [21], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringutf16be()", [21], 0], ["org.apache.commons.codec.net.bcodectest.testdecodeobjects()", [0, 1, 2, 4, 13, 15, 16, 19], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testsafecharencodedecode()", [19, 21], 0], ["org.apache.commons.codec.binary.base64test.testbytetostringvariations()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], 1], ["org.apache.commons.codec.binary.base64inputstreamtest.testcodec101()", [2, 3, 4, 13, 16, 19, 20], 0], ["org.apache.commons.codec.net.qcodectest.testencodeobjects()", [21], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testinvalidencoding()", [19], 0], ["org.apache.commons.codec.binary.base64test.testobjectencode()", [0, 1, 2, 4, 5, 6, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger1()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.net.bcodectest.testencodeobjects()", [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 21], 0], ["org.apache.commons.codec.binary.hextest.testdecodehexoddcharacters1()", [17], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesuncheckedbadname()", [19], 0], ["org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testsingletonschunked()", [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testbase64()", [1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 22], 0], ["org.apache.commons.codec.binary.base64test.testisarraybytebase64()", [13], 0], ["org.apache.commons.codec.binary.base64test.testurlsafe()", [0, 1, 2, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesusascii()", [19], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", [0, 1, 2, 4, 13], 0], ["org.apache.commons.codec.net.qcodectest.testencodedecodeblanks()", [19, 21], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf8()", [19, 20], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringutf16()", [21], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testcodec98npe()", [2, 3, 4, 13, 19, 20, 21, 22], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreammimechucksize()", [1, 2, 3, 4, 6, 13], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringusascii()", [21], 0], ["org.apache.commons.codec.net.urlcodectest.testunsafeencodedecode()", [19, 21], 0], ["org.apache.commons.codec.binary.base64test.testisurlsafe()", [2, 3, 4, 13, 14], 0], ["org.apache.commons.codec.net.urlcodectest.testdefaultencoding()", [21], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decodewithcrlf()", [0, 1, 2, 4, 13, 15, 16, 19, 20, 21], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10encodedecode()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 21, 22], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencode()", [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreampemchunksize()", [1, 2, 3, 4, 6, 13], 0], ["org.apache.commons.codec.digest.digestutilstest.testshahex()", [19, 20], 0], ["org.apache.commons.codec.binary.base64test.testknowndecodings()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.hextest.testhelloworldlowercasehex()", [19, 20], 0], ["org.apache.commons.codec.binary.base64test.testsingletons()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testread0()", [1, 2, 4, 13, 19, 20], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testencodeurlwithnullbitset()", [19], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", [0, 1, 2, 4, 13], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testutf8roundtrip()", [19, 21], 0], ["org.apache.commons.codec.binary.base64test.testtriplets()", [2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringutf16le()", [21], 0], ["org.apache.commons.codec.net.qcodectest.testdecodeobjects()", [19], 0], ["org.apache.commons.codec.binary.base64test.testconstructors()", [0, 1, 2, 4, 13, 21, 22], 0], ["org.apache.commons.codec.binary.hextest.testcustomcharsetbadnameencodebytearray()", [19], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testinputstreamreader()", [2, 3, 4, 13, 16, 19, 20], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16le()", [19], 0], ["org.apache.commons.codec.binary.hextest.testdecodebadcharacterpos0()", [17, 18], 0], ["org.apache.commons.codec.net.qcodectest.testunsafeencodedecode()", [19, 21], 0], ["org.apache.commons.codec.binary.hextest.testencodedecoderandom()", [17, 18, 19, 20], 0], ["org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testcodec68()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16()", [19], 0], ["org.apache.commons.codec.net.urlcodectest.testdecodeobjects()", [19], 0], ["org.apache.commons.codec.net.qcodectest.testbasicencodedecode()", [19, 21], 0], ["org.apache.commons.codec.digest.digestutilstest.testmd5hexlength()", [19, 20], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.hextest.testencodeempty()", [19], 0], ["org.apache.commons.codec.net.urlcodectest.testencodeurlwithnullbitset()", [19], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", [2, 3, 4, 13], 0], ["org.apache.commons.codec.binary.base64test.testencodedecoderandom()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.teststringtobytevariations()", [0, 1, 2, 4, 13, 15, 16, 17, 18, 19, 20, 21, 22], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger3()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testtripletschunked()", [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.digest.digestutilstest.testsha256()", [19, 20], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", [1, 2, 4, 13, 19, 20], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreammimechunksize()", [1, 2, 3, 4, 6, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.net.qcodectest.testinvalidencoding()", [19], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringutf8()", [21, 22], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreampemchucksize()", [1, 2, 3, 4, 6, 13], 0], ["org.apache.commons.codec.binary.hextest.testdecodearrayoddcharacters()", [17], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testdecodeobjects()", [19], 0], ["org.apache.commons.codec.binary.base64test.testencodeovermaxsize()", [9, 12], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", [2, 4, 5, 6, 12, 13, 14, 15, 16, 21, 22], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20], 0], ["org.apache.commons.codec.binary.base64test.testnonbase64test()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.net.urlcodectest.testencodeobjects()", [21], 0], ["org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20], 0], ["org.apache.commons.codec.binary.hextest.testcustomcharset()", [17, 18, 19], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testencodeobjects()", [21], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonly()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.net.bcodectest.testinvalidencoding()", [0, 1, 2, 4, 13, 15, 16, 19], 0], ["org.apache.commons.codec.net.urlcodectest.testinvalidencoding()", [19], 0], ["org.apache.commons.codec.binary.base64test.testknownencodings()", [2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.net.qcodectest.testutf8roundtrip()", [19, 21], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", [2, 4, 5, 6, 12, 13, 14, 15, 16, 21, 22], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decodeencode()", [0, 1, 2, 4, 7, 8, 9, 10, 13, 15, 19, 20, 21, 22], 0], ["org.apache.commons.codec.digest.digestutilstest.testmd5length()", [19, 20], 0], ["org.apache.commons.codec.binary.base64test.testemptybase64()", [0, 1, 2, 4, 7, 8, 9, 13, 15], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testdefaultencoding()", [21], 0], ["org.apache.commons.codec.binary.hextest.testhelloworlduppercasehex()", [19, 20], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", [2, 3, 4, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", [1, 2, 4, 13, 19, 20], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testdecodeinvalid()", [19], 0], ["org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decode()", [0, 1, 2, 4, 13, 15, 16, 19, 20, 21], 0], ["org.apache.commons.codec.binary.hextest.testrequiredcharset()", [17, 18, 19], 0], ["org.apache.commons.codec.binary.base64codec13test.testencoder()", [0, 1, 2, 4, 5, 6, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testuuid()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger2()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", [0, 1, 2, 4, 5, 6, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger4()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testcodec98npe()", [2, 3, 4, 13, 16, 19, 20, 21, 22], 0], ["org.apache.commons.codec.binary.hextest.testdecodebadcharacterpos1()", [17, 18], 0], ["org.apache.commons.codec.digest.digestutilstest.testmd5hex()", [19, 20], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testunsafeencodedecode()", [19, 21], 0], ["org.apache.commons.codec.net.urlcodectest.testdecodeinvalid()", [19], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesiso8859_1()", [19], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testbasicencodedecode()", [19, 21], 0], ["org.apache.commons.codec.net.urlcodectest.testutf8roundtrip()", [19, 21], 0], ["org.apache.commons.codec.binary.stringutilstest.testnewstringiso8859_1()", [21], 0], ["org.apache.commons.codec.binary.base64codec13test.testdecoder()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.net.urlcodectest.testbasicencodedecode()", [19, 21], 0], ["org.apache.commons.codec.binary.base64test.testpairs()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", [0, 1, 2, 4, 13, 15, 16], 0], ["org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 21], 0], ["org.apache.commons.codec.binary.hextest.testdecodehexoddcharacters3()", [17], 0], ["org.apache.commons.codec.net.urlcodectest.testsafecharencodedecode()", [19, 21], 0], ["org.apache.commons.codec.digest.digestutilstest.testsha384()", [19, 20], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", [0, 1, 2, 4, 5, 6, 12, 13, 14, 15, 16], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()", [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16], 0]], "initial_tests": ["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", "org.apache.commons.codec.digest.digestutilstest.testsha512()", "org.apache.commons.codec.binary.base64test.testencodedecodesmall()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", "org.apache.commons.codec.binary.hextest.testdecodehexoddcharacters5()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16be()", "org.apache.commons.codec.binary.hextest.testdecodestringoddcharacters()", "org.apache.commons.codec.binary.hextest.testdencodeempty()", "org.apache.commons.codec.binary.base64test.testrfc4648section10encode()", "org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", "org.apache.commons.codec.binary.stringutilstest.testnewstringbadenc()", "org.apache.commons.codec.binary.stringutilstest.testnewstringutf16be()", "org.apache.commons.codec.net.bcodectest.testdecodeobjects()", "org.apache.commons.codec.net.quotedprintablecodectest.testsafecharencodedecode()", "org.apache.commons.codec.binary.base64test.testbytetostringvariations()", "org.apache.commons.codec.binary.base64inputstreamtest.testcodec101()", "org.apache.commons.codec.net.qcodectest.testencodeobjects()", "org.apache.commons.codec.net.quotedprintablecodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testobjectencode()", "org.apache.commons.codec.binary.base64test.testcodeinteger1()", "org.apache.commons.codec.net.bcodectest.testencodeobjects()", "org.apache.commons.codec.binary.hextest.testdecodehexoddcharacters1()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesuncheckedbadname()", "org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", "org.apache.commons.codec.binary.base64test.testsingletonschunked()", "org.apache.commons.codec.binary.base64test.testbase64()", "org.apache.commons.codec.binary.base64test.testisarraybytebase64()", "org.apache.commons.codec.binary.base64test.testurlsafe()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesusascii()", "org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", "org.apache.commons.codec.net.qcodectest.testencodedecodeblanks()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf8()", "org.apache.commons.codec.binary.stringutilstest.testnewstringutf16()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", "org.apache.commons.codec.binary.base64outputstreamtest.testcodec98npe()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreammimechucksize()", "org.apache.commons.codec.binary.stringutilstest.testnewstringusascii()", "org.apache.commons.codec.net.urlcodectest.testunsafeencodedecode()", "org.apache.commons.codec.binary.base64test.testisurlsafe()", "org.apache.commons.codec.net.urlcodectest.testdefaultencoding()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decodewithcrlf()", "org.apache.commons.codec.binary.base64test.testrfc4648section10encodedecode()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", "org.apache.commons.codec.binary.base64codec13test.teststaticencode()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreampemchunksize()", "org.apache.commons.codec.digest.digestutilstest.testshahex()", "org.apache.commons.codec.binary.base64test.testknowndecodings()", "org.apache.commons.codec.binary.hextest.testhelloworldlowercasehex()", "org.apache.commons.codec.binary.base64test.testsingletons()", "org.apache.commons.codec.binary.base64inputstreamtest.testread0()", "org.apache.commons.codec.net.quotedprintablecodectest.testencodeurlwithnullbitset()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", "org.apache.commons.codec.net.quotedprintablecodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64test.testtriplets()", "org.apache.commons.codec.binary.stringutilstest.testnewstringutf16le()", "org.apache.commons.codec.net.qcodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testconstructors()", "org.apache.commons.codec.binary.hextest.testcustomcharsetbadnameencodebytearray()", "org.apache.commons.codec.binary.base64inputstreamtest.testinputstreamreader()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16le()", "org.apache.commons.codec.binary.hextest.testdecodebadcharacterpos0()", "org.apache.commons.codec.net.qcodectest.testunsafeencodedecode()", "org.apache.commons.codec.binary.hextest.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", "org.apache.commons.codec.binary.base64test.testcodec68()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16()", "org.apache.commons.codec.net.urlcodectest.testdecodeobjects()", "org.apache.commons.codec.net.qcodectest.testbasicencodedecode()", "org.apache.commons.codec.digest.digestutilstest.testmd5hexlength()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", "org.apache.commons.codec.binary.hextest.testencodeempty()", "org.apache.commons.codec.net.urlcodectest.testencodeurlwithnullbitset()", "org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", "org.apache.commons.codec.binary.base64test.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.teststringtobytevariations()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", "org.apache.commons.codec.binary.base64test.testcodeinteger3()", "org.apache.commons.codec.binary.base64test.testtripletschunked()", "org.apache.commons.codec.digest.digestutilstest.testsha256()", "org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreammimechunksize()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", "org.apache.commons.codec.net.qcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.stringutilstest.testnewstringutf8()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreampemchucksize()", "org.apache.commons.codec.binary.hextest.testdecodearrayoddcharacters()", "org.apache.commons.codec.net.quotedprintablecodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testencodeovermaxsize()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", "org.apache.commons.codec.binary.base64test.testnonbase64test()", "org.apache.commons.codec.net.urlcodectest.testencodeobjects()", "org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", "org.apache.commons.codec.binary.hextest.testcustomcharset()", "org.apache.commons.codec.net.quotedprintablecodectest.testencodeobjects()", "org.apache.commons.codec.binary.base64test.testdecodepadonly()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", "org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", "org.apache.commons.codec.net.bcodectest.testinvalidencoding()", "org.apache.commons.codec.net.urlcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testknownencodings()", "org.apache.commons.codec.net.qcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decodeencode()", "org.apache.commons.codec.digest.digestutilstest.testmd5length()", "org.apache.commons.codec.binary.base64test.testemptybase64()", "org.apache.commons.codec.net.quotedprintablecodectest.testdefaultencoding()", "org.apache.commons.codec.binary.hextest.testhelloworlduppercasehex()", "org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", "org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", "org.apache.commons.codec.net.quotedprintablecodectest.testdecodeinvalid()", "org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decode()", "org.apache.commons.codec.binary.hextest.testrequiredcharset()", "org.apache.commons.codec.binary.base64codec13test.testencoder()", "org.apache.commons.codec.binary.base64test.testuuid()", "org.apache.commons.codec.binary.base64test.testcodeinteger2()", "org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", "org.apache.commons.codec.binary.base64test.testcodeinteger4()", "org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64inputstreamtest.testcodec98npe()", "org.apache.commons.codec.binary.hextest.testdecodebadcharacterpos1()", "org.apache.commons.codec.digest.digestutilstest.testmd5hex()", "org.apache.commons.codec.net.quotedprintablecodectest.testunsafeencodedecode()", "org.apache.commons.codec.net.urlcodectest.testdecodeinvalid()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesiso8859_1()", "org.apache.commons.codec.net.quotedprintablecodectest.testbasicencodedecode()", "org.apache.commons.codec.net.urlcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.stringutilstest.testnewstringiso8859_1()", "org.apache.commons.codec.binary.base64codec13test.testdecoder()", "org.apache.commons.codec.net.urlcodectest.testbasicencodedecode()", "org.apache.commons.codec.binary.base64test.testpairs()", "org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", "org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", "org.apache.commons.codec.binary.hextest.testdecodehexoddcharacters3()", "org.apache.commons.codec.net.urlcodectest.testsafecharencodedecode()", "org.apache.commons.codec.digest.digestutilstest.testsha384()", "org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()"]}