{"bugs": ["org.apache.commons.codec.binary.base64.encodebase64(byte[])"], "components_names": [[0, "org.apache.commons.codec.binary.base64.base64(int;byte[];boolean)"], [1, "org.apache.commons.codec.binary.base64.avail()"], [2, "org.apache.commons.codec.binary.base64.containsbase64byte(byte[])"], [3, "org.apache.commons.codec.binary.base64.encode(byte[])"], [4, "org.apache.commons.codec.binary.base64.encode(byte[];int;int)"], [5, "org.apache.commons.codec.binary.base64.encodebase64(byte[])"], [6, "org.apache.commons.codec.binary.base64.encodebase64(byte[];boolean)"], [7, "org.apache.commons.codec.binary.base64.encodebase64(byte[];boolean;boolean)"], [8, "org.apache.commons.codec.binary.base64.encodebase64(byte[];boolean;boolean;int)"], [9, "org.apache.commons.codec.binary.base64.getencodelength(byte[];int;byte[])"], [10, "org.apache.commons.codec.binary.base64.isbase64(byte)"], [11, "org.apache.commons.codec.binary.base64.readresults(byte[];int;int)"], [12, "org.apache.commons.codec.binary.base64.reset()"], [13, "org.apache.commons.codec.binary.base64.resizebuffer()"]], "tests_details": [["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64test.testcodec112()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 1], ["org.apache.commons.codec.binary.base64test.testencodedecodesmall()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10encode()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.net.bcodectest.testdecodeobjects()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testbytetostringvariations()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testcodec101()", [0, 1, 2, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64test.testobjectencode()", [0, 1, 2, 3, 4, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger1()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.net.bcodectest.testencodeobjects()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testsingletonschunked()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testbase64()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testisarraybytebase64()", [10], 0], ["org.apache.commons.codec.binary.base64test.testurlsafe()", [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testcodec105()", [0, 1, 2, 4, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testcodec98npe()", [0, 1, 2, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreammimechucksize()", [0, 1, 2, 4, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64test.testisstringbase64()", [10], 0], ["org.apache.commons.codec.binary.base64test.testisurlsafe()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decodewithcrlf()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10encodedecode()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencode()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreampemchunksize()", [0, 1, 2, 4, 10, 13], 0], ["org.apache.commons.codec.binary.base64test.testknowndecodings()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testsingletons()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testread0()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64test.testtriplets()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testconstructors()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testinputstreamreader()", [0, 1, 2, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testcodec68()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64test.testencodedecoderandom()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.teststringtobytevariations()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger3()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testtripletschunked()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreammimechunksize()", [0, 1, 2, 4, 10, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreampemchucksize()", [0, 1, 2, 4, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64test.testencodeovermaxsize()", [8, 9], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", [0, 1, 2, 3, 4, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testnonbase64test()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonly()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.net.bcodectest.testinvalidencoding()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testknownencodings()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", [0, 1, 2, 3, 4, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decodeencode()", [0, 2, 6, 7, 8, 10, 12], 0], ["org.apache.commons.codec.binary.base64test.testemptybase64()", [0, 2, 5, 6, 7, 8, 10, 12], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", [0, 2, 10], 0], ["org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decode()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.testencoder()", [0, 1, 2, 3, 4, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testuuid()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger2()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", [0, 1, 2, 3, 4, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger4()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testcodec98npe()", [0, 1, 2, 10, 11, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.testdecoder()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testpairs()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", [0, 1, 2, 10, 11, 12, 13], 0], ["org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", [0, 1, 2, 3, 4, 10, 11, 12, 13], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], 0]], "initial_tests": ["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", "org.apache.commons.codec.binary.base64test.testcodec112()", "org.apache.commons.codec.binary.base64test.testencodedecodesmall()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", "org.apache.commons.codec.binary.base64test.testrfc4648section10encode()", "org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", "org.apache.commons.codec.net.bcodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testbytetostringvariations()", "org.apache.commons.codec.binary.base64inputstreamtest.testcodec101()", "org.apache.commons.codec.binary.base64test.testobjectencode()", "org.apache.commons.codec.binary.base64test.testcodeinteger1()", "org.apache.commons.codec.net.bcodectest.testencodeobjects()", "org.apache.commons.codec.binary.base64test.testsingletonschunked()", "org.apache.commons.codec.binary.base64test.testbase64()", "org.apache.commons.codec.binary.base64test.testisarraybytebase64()", "org.apache.commons.codec.binary.base64test.testurlsafe()", "org.apache.commons.codec.binary.base64inputstreamtest.testcodec105()", "org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", "org.apache.commons.codec.binary.base64outputstreamtest.testcodec98npe()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreammimechucksize()", "org.apache.commons.codec.binary.base64test.testisstringbase64()", "org.apache.commons.codec.binary.base64test.testisurlsafe()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decodewithcrlf()", "org.apache.commons.codec.binary.base64test.testrfc4648section10encodedecode()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", "org.apache.commons.codec.binary.base64codec13test.teststaticencode()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreampemchunksize()", "org.apache.commons.codec.binary.base64test.testknowndecodings()", "org.apache.commons.codec.binary.base64test.testsingletons()", "org.apache.commons.codec.binary.base64inputstreamtest.testread0()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", "org.apache.commons.codec.binary.base64test.testtriplets()", "org.apache.commons.codec.binary.base64test.testconstructors()", "org.apache.commons.codec.binary.base64inputstreamtest.testinputstreamreader()", "org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", "org.apache.commons.codec.binary.base64test.testcodec68()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", "org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", "org.apache.commons.codec.binary.base64test.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.teststringtobytevariations()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", "org.apache.commons.codec.binary.base64test.testcodeinteger3()", "org.apache.commons.codec.binary.base64test.testtripletschunked()", "org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreammimechunksize()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreampemchucksize()", "org.apache.commons.codec.binary.base64test.testencodeovermaxsize()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", "org.apache.commons.codec.binary.base64test.testnonbase64test()", "org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", "org.apache.commons.codec.binary.base64test.testdecodepadonly()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", "org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", "org.apache.commons.codec.net.bcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testknownencodings()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decodeencode()", "org.apache.commons.codec.binary.base64test.testemptybase64()", "org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", "org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", "org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decode()", "org.apache.commons.codec.binary.base64codec13test.testencoder()", "org.apache.commons.codec.binary.base64test.testuuid()", "org.apache.commons.codec.binary.base64test.testcodeinteger2()", "org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", "org.apache.commons.codec.binary.base64test.testcodeinteger4()", "org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64inputstreamtest.testcodec98npe()", "org.apache.commons.codec.binary.base64codec13test.testdecoder()", "org.apache.commons.codec.binary.base64test.testpairs()", "org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", "org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", "org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()"]}