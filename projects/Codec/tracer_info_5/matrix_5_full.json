{"bugs": ["org.apache.commons.codec.binary.base64.decode(byte[];int;int)"], "components_names": [[5, "org.apache.commons.codec.binary.base64.hasdata()"], [8, "org.apache.commons.codec.binary.base64.setinitialbuffer(byte[];int;int)"], [9, "org.apache.commons.codec.binary.base64inputstream.base64inputstream(inputstream)"], [10, "org.apache.commons.codec.binary.base64inputstream.base64inputstream(inputstream;boolean)"], [11, "org.apache.commons.codec.binary.base64inputstream.base64inputstream(inputstream;boolean;int;byte[])"], [12, "org.apache.commons.codec.binary.base64inputstream.read(byte[];int;int)"], [0, "org.apache.commons.codec.binary.base64.base64(int;byte[];boolean)"], [1, "org.apache.commons.codec.binary.base64.base64(boolean)"], [2, "org.apache.commons.codec.binary.base64.avail()"], [3, "org.apache.commons.codec.binary.base64.containsbase64byte(byte[])"], [4, "org.apache.commons.codec.binary.base64.decode(byte[];int;int)"], [6, "org.apache.commons.codec.binary.base64.isbase64(byte)"], [7, "org.apache.commons.codec.binary.base64.readresults(byte[];int;int)"], [15, "org.apache.commons.codec.binary.base64.resizebuffer()"], [16, "org.apache.commons.codec.binary.base64outputstream.base64outputstream(outputstream;boolean)"], [17, "org.apache.commons.codec.binary.base64outputstream.base64outputstream(outputstream;boolean;int;byte[])"], [18, "org.apache.commons.codec.binary.base64outputstream.close()"], [19, "org.apache.commons.codec.binary.base64outputstream.flush(boolean)"], [20, "org.apache.commons.codec.binary.base64outputstream.write(byte[];int;int)"], [13, "org.apache.commons.codec.binary.stringutils.getbytesunchecked(string;string)"], [14, "org.apache.commons.codec.binary.stringutils.getbytesutf8(string)"]], "tests_details": [["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", [0, 3, 6, 11, 12, 13, 14], 0], ["org.apache.commons.codec.digest.digestutilstest.testsha512()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testencodedecodesmall()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", [0, 1, 2, 3, 4, 5, 6, 7, 15, 8, 9, 10, 11, 12, 13, 14], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16be()", [13], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10encode()", [13, 14], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", [0, 1, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.net.bcodectest.testdecodeobjects()", [0, 2, 3, 4, 6, 7, 8, 13], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testsafecharencodedecode()", [13], 0], ["org.apache.commons.codec.binary.base64test.testbytetostringvariations()", [0, 1, 3, 6, 8, 13, 14], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testinvalidencoding()", [13], 0], ["org.apache.commons.codec.binary.base64test.testobjectencode()", [0, 3, 6, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger1()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testencodeobjects()", [0, 3, 6, 8], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesuncheckedbadname()", [13], 0], ["org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testsingletonschunked()", [0, 1, 3, 6, 8], 0], ["org.apache.commons.codec.binary.base64test.testbase64()", [0, 2, 3, 4, 6, 7, 8, 13, 14], 0], ["org.apache.commons.codec.binary.base64test.testisarraybytebase64()", [6], 0], ["org.apache.commons.codec.binary.base64test.testurlsafe()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesusascii()", [13], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", [0, 3, 6], 0], ["org.apache.commons.codec.net.qcodectest.testencodedecodeblanks()", [13], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf8()", [13, 14], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", [0, 1, 2, 3, 4, 5, 6, 7, 15, 8, 9, 10, 11, 12, 13, 14], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testcodec98npe()", [0, 1, 2, 3, 4, 6, 7, 15, 16, 17, 18, 19, 20, 13, 14], 1], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreammimechucksize()", [0, 1, 2, 3, 4, 5, 6, 7, 15, 9, 10, 11, 12], 0], ["org.apache.commons.codec.net.urlcodectest.testunsafeencodedecode()", [13], 0], ["org.apache.commons.codec.binary.base64test.testisurlsafe()", [0, 1, 3, 6], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decodewithcrlf()", [0, 2, 3, 4, 6, 7, 15, 8, 13, 14], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10encodedecode()", [0, 1, 2, 3, 4, 6, 7, 15, 8, 13, 14], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", [0, 1, 2, 3, 4, 6, 7, 15, 8, 16, 17, 18, 19, 20, 13, 14], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencode()", [0, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreampemchunksize()", [0, 1, 2, 3, 4, 6, 15, 16, 17, 18, 19, 20], 0], ["org.apache.commons.codec.digest.digestutilstest.testshahex()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testknowndecodings()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.hextest.testhelloworldlowercasehex()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testsingletons()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testread0()", [0, 3, 6, 11, 12, 13, 14], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testencodeurlwithnullbitset()", [13], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", [0, 3, 6], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testutf8roundtrip()", [13], 0], ["org.apache.commons.codec.binary.base64test.testtriplets()", [0, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.net.qcodectest.testdecodeobjects()", [13], 0], ["org.apache.commons.codec.binary.base64test.testconstructors()", [0, 3, 6], 0], ["org.apache.commons.codec.binary.hextest.testcustomcharsetbadnameencodebytearray()", [13], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16le()", [13], 0], ["org.apache.commons.codec.net.qcodectest.testunsafeencodedecode()", [13], 0], ["org.apache.commons.codec.binary.hextest.testencodedecoderandom()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodec68()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16()", [13], 0], ["org.apache.commons.codec.net.urlcodectest.testdecodeobjects()", [13], 0], ["org.apache.commons.codec.net.qcodectest.testbasicencodedecode()", [13], 0], ["org.apache.commons.codec.digest.digestutilstest.testmd5hexlength()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.hextest.testencodeempty()", [13], 0], ["org.apache.commons.codec.net.urlcodectest.testencodeurlwithnullbitset()", [13], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", [0, 1, 3, 6, 16, 17, 20], 0], ["org.apache.commons.codec.binary.base64test.testencodedecoderandom()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.teststringtobytevariations()", [0, 2, 3, 4, 6, 7, 15, 8, 13, 14], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger3()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64test.testtripletschunked()", [0, 1, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.digest.digestutilstest.testsha256()", [13, 14], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", [0, 3, 6, 11, 12, 13, 14], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreammimechunksize()", [0, 1, 2, 3, 4, 6, 15, 16, 17, 18, 19, 20], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.qcodectest.testinvalidencoding()", [13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreampemchucksize()", [0, 1, 2, 3, 4, 5, 6, 7, 15, 9, 10, 11, 12], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testdecodeobjects()", [13], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", [0, 3, 6, 8], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", [0, 1, 2, 3, 4, 6, 7, 15, 8, 16, 17, 18, 19, 20, 13, 14], 0], ["org.apache.commons.codec.binary.base64test.testnonbase64test()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", [0, 1, 3, 6, 8, 13, 14], 0], ["org.apache.commons.codec.binary.hextest.testcustomcharset()", [13], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonly()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.net.bcodectest.testinvalidencoding()", [0, 2, 3, 4, 6, 7, 8, 13], 0], ["org.apache.commons.codec.net.urlcodectest.testinvalidencoding()", [13], 0], ["org.apache.commons.codec.binary.base64test.testknownencodings()", [0, 1, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.net.qcodectest.testutf8roundtrip()", [13], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", [0, 3, 6, 8], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decodeencode()", [0, 3, 6, 13, 14], 0], ["org.apache.commons.codec.digest.digestutilstest.testmd5length()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testemptybase64()", [0, 3, 6], 0], ["org.apache.commons.codec.binary.hextest.testhelloworlduppercasehex()", [13, 14], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", [0, 1, 3, 6, 16, 17, 20], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", [0, 3, 6, 11, 13, 14], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testdecodeinvalid()", [13], 0], ["org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testrfc4648section10decode()", [0, 2, 3, 4, 6, 7, 8, 13, 14], 0], ["org.apache.commons.codec.binary.hextest.testrequiredcharset()", [13], 0], ["org.apache.commons.codec.binary.base64codec13test.testencoder()", [0, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testuuid()", [0, 2, 3, 4, 6, 7, 15, 8, 13, 14], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger2()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", [0, 2, 3, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger4()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", [0, 2, 3, 4, 6, 7, 15, 8, 13], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testcodec98npe()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 1], ["org.apache.commons.codec.digest.digestutilstest.testmd5hex()", [13, 14], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testunsafeencodedecode()", [13], 0], ["org.apache.commons.codec.net.urlcodectest.testdecodeinvalid()", [13], 0], ["org.apache.commons.codec.binary.stringutilstest.testgetbytesiso8859_1()", [13], 0], ["org.apache.commons.codec.net.quotedprintablecodectest.testbasicencodedecode()", [13], 0], ["org.apache.commons.codec.net.urlcodectest.testutf8roundtrip()", [13], 0], ["org.apache.commons.codec.binary.base64codec13test.testdecoder()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.urlcodectest.testbasicencodedecode()", [13], 0], ["org.apache.commons.codec.binary.base64test.testpairs()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", [0, 2, 3, 4, 6, 7, 8], 0], ["org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", [0, 2, 3, 4, 6, 7, 8, 13], 0], ["org.apache.commons.codec.net.urlcodectest.testsafecharencodedecode()", [13], 0], ["org.apache.commons.codec.digest.digestutilstest.testsha384()", [13, 14], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", [0, 2, 3, 4, 6, 7, 15, 8], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()", [0, 2, 3, 4, 6, 7, 15, 8], 0]], "initial_tests": ["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", "org.apache.commons.codec.digest.digestutilstest.testsha512()", "org.apache.commons.codec.binary.base64test.testencodedecodesmall()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16be()", "org.apache.commons.codec.binary.base64test.testrfc4648section10encode()", "org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", "org.apache.commons.codec.net.bcodectest.testdecodeobjects()", "org.apache.commons.codec.net.quotedprintablecodectest.testsafecharencodedecode()", "org.apache.commons.codec.binary.base64test.testbytetostringvariations()", "org.apache.commons.codec.net.quotedprintablecodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testobjectencode()", "org.apache.commons.codec.binary.base64test.testcodeinteger1()", "org.apache.commons.codec.net.bcodectest.testencodeobjects()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesuncheckedbadname()", "org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", "org.apache.commons.codec.binary.base64test.testsingletonschunked()", "org.apache.commons.codec.binary.base64test.testbase64()", "org.apache.commons.codec.binary.base64test.testisarraybytebase64()", "org.apache.commons.codec.binary.base64test.testurlsafe()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesusascii()", "org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", "org.apache.commons.codec.net.qcodectest.testencodedecodeblanks()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf8()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", "org.apache.commons.codec.binary.base64outputstreamtest.testcodec98npe()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreammimechucksize()", "org.apache.commons.codec.net.urlcodectest.testunsafeencodedecode()", "org.apache.commons.codec.binary.base64test.testisurlsafe()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decodewithcrlf()", "org.apache.commons.codec.binary.base64test.testrfc4648section10encodedecode()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", "org.apache.commons.codec.binary.base64codec13test.teststaticencode()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreampemchunksize()", "org.apache.commons.codec.digest.digestutilstest.testshahex()", "org.apache.commons.codec.binary.base64test.testknowndecodings()", "org.apache.commons.codec.binary.hextest.testhelloworldlowercasehex()", "org.apache.commons.codec.binary.base64test.testsingletons()", "org.apache.commons.codec.binary.base64inputstreamtest.testread0()", "org.apache.commons.codec.net.quotedprintablecodectest.testencodeurlwithnullbitset()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", "org.apache.commons.codec.net.quotedprintablecodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64test.testtriplets()", "org.apache.commons.codec.net.qcodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testconstructors()", "org.apache.commons.codec.binary.hextest.testcustomcharsetbadnameencodebytearray()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16le()", "org.apache.commons.codec.net.qcodectest.testunsafeencodedecode()", "org.apache.commons.codec.binary.hextest.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", "org.apache.commons.codec.binary.base64test.testcodec68()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesutf16()", "org.apache.commons.codec.net.urlcodectest.testdecodeobjects()", "org.apache.commons.codec.net.qcodectest.testbasicencodedecode()", "org.apache.commons.codec.digest.digestutilstest.testmd5hexlength()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", "org.apache.commons.codec.binary.hextest.testencodeempty()", "org.apache.commons.codec.net.urlcodectest.testencodeurlwithnullbitset()", "org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", "org.apache.commons.codec.binary.base64test.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.teststringtobytevariations()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", "org.apache.commons.codec.binary.base64test.testcodeinteger3()", "org.apache.commons.codec.binary.base64test.testtripletschunked()", "org.apache.commons.codec.digest.digestutilstest.testsha256()", "org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstreammimechunksize()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", "org.apache.commons.codec.net.qcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstreampemchucksize()", "org.apache.commons.codec.net.quotedprintablecodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", "org.apache.commons.codec.binary.base64test.testnonbase64test()", "org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", "org.apache.commons.codec.binary.hextest.testcustomcharset()", "org.apache.commons.codec.binary.base64test.testdecodepadonly()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", "org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", "org.apache.commons.codec.net.bcodectest.testinvalidencoding()", "org.apache.commons.codec.net.urlcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testknownencodings()", "org.apache.commons.codec.net.qcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decodeencode()", "org.apache.commons.codec.digest.digestutilstest.testmd5length()", "org.apache.commons.codec.binary.base64test.testemptybase64()", "org.apache.commons.codec.binary.hextest.testhelloworlduppercasehex()", "org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", "org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", "org.apache.commons.codec.net.quotedprintablecodectest.testdecodeinvalid()", "org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", "org.apache.commons.codec.binary.base64test.testrfc4648section10decode()", "org.apache.commons.codec.binary.hextest.testrequiredcharset()", "org.apache.commons.codec.binary.base64codec13test.testencoder()", "org.apache.commons.codec.binary.base64test.testuuid()", "org.apache.commons.codec.binary.base64test.testcodeinteger2()", "org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", "org.apache.commons.codec.binary.base64test.testcodeinteger4()", "org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64inputstreamtest.testcodec98npe()", "org.apache.commons.codec.digest.digestutilstest.testmd5hex()", "org.apache.commons.codec.net.quotedprintablecodectest.testunsafeencodedecode()", "org.apache.commons.codec.net.urlcodectest.testdecodeinvalid()", "org.apache.commons.codec.binary.stringutilstest.testgetbytesiso8859_1()", "org.apache.commons.codec.net.quotedprintablecodectest.testbasicencodedecode()", "org.apache.commons.codec.net.urlcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64codec13test.testdecoder()", "org.apache.commons.codec.net.urlcodectest.testbasicencodedecode()", "org.apache.commons.codec.binary.base64test.testpairs()", "org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", "org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", "org.apache.commons.codec.net.urlcodectest.testsafecharencodedecode()", "org.apache.commons.codec.digest.digestutilstest.testsha384()", "org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()"]}