{"bugs": [], "components_names": [[0, "org.apache.commons.codec.language.bm.nametype.valueof(string)"], [1, "org.apache.commons.codec.language.bm.lang.instance(nametype)"], [2, "org.apache.commons.codec.language.bm.languages$somelanguages.languages$somelanguages(set)"], [3, "org.apache.commons.codec.language.bm.phoneticengine.phoneticengine(nametype;ruletype;boolean)"], [4, "org.apache.commons.codec.language.bm.languages.getlanguages()"], [5, "org.apache.commons.codec.language.bm.ruletype.valueof(string)"], [6, "org.apache.commons.codec.language.bm.phoneticengine.encode(string;languageset)"], [7, "org.apache.commons.codec.language.bm.rule.getinstancemap(nametype;ruletype;languageset)"], [8, "org.apache.commons.codec.language.bm.phoneticengine$phonemebuilder.empty(languageset)"], [9, "org.apache.commons.codec.language.bm.phoneticengine$phonemebuilder.phoneticengine$phonemebuilder(phoneme)"], [10, "org.apache.commons.codec.language.bm.phoneticengine$rulesapplication.invoke()"], [11, "org.apache.commons.codec.language.bm.phoneticengine.join(iterable;string)"], [12, "org.apache.commons.codec.language.bm.rule$phoneme.rule$phoneme(charsequence;languageset)"], [13, "org.apache.commons.codec.language.bm.languages$somelanguages.languages$somelanguages(set;1)"], [14, "org.apache.commons.codec.language.bm.phoneticengine$rulesapplication.phoneticengine$rulesapplication(map;charsequence;phonemebuilder;int;int)"], [15, "org.apache.commons.codec.language.bm.languages$somelanguages.issingleton()"], [16, "org.apache.commons.codec.language.bm.lang.guesslanguages(string)"], [17, "org.apache.commons.codec.language.bm.phoneticengine.encode(string)"], [18, "org.apache.commons.codec.language.bm.phoneticengine.phoneticengine(nametype;ruletype;boolean;int)"], [19, "org.apache.commons.codec.language.bm.rule.getinstancemap(nametype;ruletype;string)"]], "tests_details": [["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna()", [1, 2, 3, 4, 6, 13, 16, 17, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException()", [1, 2, 3, 7, 13, 15, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException()", [1, 3, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException()", [1, 3, 12, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat()", [1, 3, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh()", [1, 3, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact()", [1, 3, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException()", [1, 3, 18], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3()", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC()", [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion()", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 1], ["org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode()", [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative()", [12], 0], ["org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero()", [12], 0], ["org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks()", [12], 0], ["unknown_162_169_114", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["unknown_116_169_113", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["unknown_162_133_133", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["unknown_49_48_51", [1, 3, 18], 0], ["unknown_116_169_176", [0, 1, 3, 5, 10, 14, 18], 0], ["unknown_162_169_71", [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["unknown_162_137_137", [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], 0], ["unknown_54_49_49", [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19], 0], ["unknown_116_127_127", [10, 12, 14], 0], ["unknown_116_129_129", [8, 10, 12, 14], 0], ["unknown_162_146_146", [10, 12, 14], 0], ["unknown_162_93_93", [10, 14], 0], ["unknown_162_136_136", [2, 8, 9, 10, 12, 13, 14], 0], ["unknown_162_129_129", [10, 12, 14], 0], ["unknown_116_93_93", [8, 9, 10, 12, 14], 0], ["unknown_162_133_114", [2, 8, 9, 10, 12, 13, 14], 0], ["unknown_162_169_168", [8, 10, 12, 14], 0], ["unknown_162_169_169", [10, 12, 14], 0], ["unknown_162_169_133", [8, 9, 10, 12, 14], 0], ["unknown_162_131_131", [2, 8, 9, 10, 12, 13, 14], 0], ["unknown_116_125_125", [9, 10, 12, 14], 0], ["unknown_162_125_125", [10, 12, 14], 0], ["unknown_116_169_129", [8], 0], ["unknown_116_93_129", [12], 0], ["unknown_162_169_170", [10, 12, 14], 0], ["unknown_162_91_91", [8, 9, 10, 12, 14], 0], ["unknown_162_169_161", [10, 14], 0], ["unknown_162_133_136", [8, 9, 10, 12, 14], 0], ["unknown_113_169_169", [10, 14], 0], ["unknown_113_169_116", [12, 14], 0], ["unknown_116_133_133", [8, 9, 10, 12, 14], 0], ["unknown_113_133_133", [8], 0], ["unknown_116_137_137", [8, 9, 10, 12, 14], 0], ["unknown_113_169_96", [8], 0], ["unknown_116_133_113", [8, 10, 14], 0], ["unknown_116_131_131", [8, 9, 10, 12, 14], 0], ["unknown_113_125_125", [9], 0], ["unknown_116_169_125", [9], 0], ["unknown_116_169_158", [9, 12], 0], ["unknown_116_169_133", [10, 14], 0], ["unknown_116_168_168", [10, 14], 0], ["unknown_116_169_168", [10, 14], 0], ["unknown_116_124_124", [10, 14], 0], ["unknown_116_169_167", [10, 14], 0], ["unknown_116_137_113", [10, 14], 0], ["unknown_116_136_136", [10, 14], 0], ["unknown_116_169_166", [10, 14], 0], ["unknown_116_169_161", [10, 14], 0], ["unknown_116_170_170", [10, 14], 0], ["unknown_116_170_169", [14], 0], ["unknown_116_128_128", [10, 14], 0], ["unknown_114_169_124", [10, 14], 0], ["unknown_116_133_136", [10, 14], 0], ["unknown_116_131_113", [10, 14], 0], ["unknown_162_169_167", [10, 14], 0], ["unknown_162_128_128", [10, 14], 0], ["unknown_162_169_131", [10, 14], 0], ["unknown_162_169_166", [10], 0], ["unknown_113_128_128", [14], 0], ["unknown_113_167_167", [10, 14], 0], ["unknown_113_169_167", [14], 0], ["unknown_113_131_131", [10, 14], 0], ["unknown_116_167_167", [10, 14], 0], ["unknown_116_161_161", [10, 14], 0], ["unknown_116_169_131", [10, 14], 0], ["unknown_113_166_167", [10, 14], 0], ["unknown_116_169_128", [10, 14], 0], ["unknown_116_167_168", [14], 0], ["unknown_113_169_143", [12], 0], ["unknown_113_169_148", [12], 0], ["unknown_113_166_166", [10], 0], ["unknown_116_166_166", [10], 0], ["unknown_113_127_127", [12], 0], ["unknown_113_91_91", [12], 0], ["unknown_113_158_158", [12], 0], ["unknown_113_127_91", [12], 0], ["unknown_114_127_127", [12], 0], ["unknown_114_91_91", [12], 0], ["unknown_116_158_158", [12], 0], ["unknown_116_91_91", [12], 0], ["unknown_116_169_127", [12], 0], ["unknown_116_127_91", [12], 0]], "initial_tests": ["org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2()", "org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3()", "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC()", "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI()", "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC()", "org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion()", "org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode()", "org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative()", "org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero()", "org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks()", "unknown_162_169_114", "unknown_116_169_113", "unknown_162_133_133", "unknown_49_48_51", "unknown_116_169_176", "unknown_162_169_71", "unknown_162_137_137", "unknown_54_49_49", "unknown_116_127_127", "unknown_116_129_129", "unknown_162_146_146", "unknown_162_93_93", "unknown_162_136_136", "unknown_162_129_129", "unknown_116_93_93", "unknown_162_133_114", "unknown_162_169_168", "unknown_162_169_169", "unknown_162_169_133", "unknown_162_131_131", "unknown_116_125_125", "unknown_162_125_125", "unknown_116_169_129", "unknown_116_93_129", "unknown_162_169_170", "unknown_162_91_91", "unknown_162_169_161", "unknown_162_133_136", "unknown_113_169_169", "unknown_113_169_116", "unknown_116_133_133", "unknown_113_133_133", "unknown_116_137_137", "unknown_113_169_96", "unknown_116_133_113", "unknown_116_131_131", "unknown_113_125_125", "unknown_116_169_125", "unknown_116_169_158", "unknown_116_169_133", "unknown_116_168_168", "unknown_116_169_168", "unknown_116_124_124", "unknown_116_169_167", "unknown_116_137_113", "unknown_116_136_136", "unknown_116_169_166", "unknown_116_169_161", "unknown_116_170_170", "unknown_116_170_169", "unknown_116_128_128", "unknown_114_169_124", "unknown_116_133_136", "unknown_116_131_113", "unknown_162_169_167", "unknown_162_128_128", "unknown_162_169_131", "unknown_162_169_166", "unknown_113_128_128", "unknown_113_167_167", "unknown_113_169_167", "unknown_113_131_131", "unknown_116_167_167", "unknown_116_161_161", "unknown_116_169_131", "unknown_113_166_167", "unknown_116_169_128", "unknown_116_167_168", "unknown_113_169_143", "unknown_113_169_148", "unknown_113_166_166", "unknown_116_166_166", "unknown_113_127_127", "unknown_113_91_91", "unknown_113_158_158", "unknown_113_127_91", "unknown_114_127_127", "unknown_114_91_91", "unknown_116_158_158", "unknown_116_91_91", "unknown_116_169_127", "unknown_116_127_91"]}