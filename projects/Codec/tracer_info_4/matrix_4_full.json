{"bugs": ["org.apache.commons.codec.binary.base64.base64(boolean)"], "components_names": [[4, "org.apache.commons.codec.binary.base64.encode(object)"], [0, "org.apache.commons.codec.binary.base64.base64()"], [1, "org.apache.commons.codec.binary.base64.base64(int;byte[];boolean)"], [2, "org.apache.commons.codec.binary.base64.base64(boolean)"], [3, "org.apache.commons.codec.binary.base64.containsbase64byte(byte[])"], [5, "org.apache.commons.codec.binary.base64.encode(byte[])"], [6, "org.apache.commons.codec.binary.base64.encode(byte[];int;int)"], [7, "org.apache.commons.codec.binary.base64.getencodelength(byte[];int;byte[])"], [8, "org.apache.commons.codec.binary.base64.isbase64(byte)"], [9, "org.apache.commons.codec.binary.base64.isurlsafe()"], [10, "org.apache.commons.codec.binary.base64.reset()"], [11, "org.apache.commons.codec.binary.base64.setinitialbuffer(byte[];int;int)"]], "tests_details": [["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", [0, 1, 3, 8], 0], ["org.apache.commons.codec.binary.base64test.testencodedecodesmall()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.net.bcodectest.testdecodeobjects()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testbytetostringvariations()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger1()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.net.bcodectest.testencodeobjects()", [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testsingletonschunked()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testbase64()", [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testisarraybytebase64()", [0, 8], 0], ["org.apache.commons.codec.binary.base64test.testurlsafe()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", [0, 0, 1, 2, 3, 4, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testisurlsafe()", [0, 1, 2, 3, 8, 9], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticencode()", [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testcodeintegernull()", [0], 0], ["org.apache.commons.codec.binary.base64test.testknowndecodings()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testsingletons()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testread0()", [0, 1, 3, 8], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", [0, 0, 1, 2, 3, 8], 0], ["org.apache.commons.codec.binary.base64test.testtriplets()", [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testconstructors()", [0, 0, 1, 2, 3, 8], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstream()", [0, 1, 2, 3, 6, 8], 0], ["org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testcodec68()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", [0, 1, 2, 3, 8], 0], ["org.apache.commons.codec.binary.base64test.testencodedecoderandom()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.teststringtobytevariations()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger3()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testtripletschunked()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstream()", [0, 1, 2, 3, 6, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", [0, 1, 3, 8], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testrfc2045section2dot1crlfdefinition()", [0], 0], ["org.apache.commons.codec.binary.base64test.testencodeovermaxsize()", [0, 7], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testnonbase64test()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonly()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.net.bcodectest.testinvalidencoding()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testknownencodings()", [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", [0, 1, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testemptybase64()", [0, 0, 1, 2, 3, 8, 10], 0], ["org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", [0, 1, 2, 3, 8], 0], ["org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", [0, 1, 3, 8], 0], ["org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.testencoder()", [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 1], ["org.apache.commons.codec.binary.base64test.testuuid()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testcodeinteger2()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 1], ["org.apache.commons.codec.binary.base64test.testcodeinteger4()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.testdecoder()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testpairs()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", [0, 0, 1, 2, 3, 8, 10, 11], 0], ["org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", [0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 0], ["org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()", [0, 0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], 0]], "initial_tests": ["org.apache.commons.codec.binary.base64inputstreamtest.testreadnull()", "org.apache.commons.codec.binary.base64test.testencodedecodesmall()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambytebybyte()", "org.apache.commons.codec.binary.base64codec13test.teststaticencodechunked()", "org.apache.commons.codec.net.bcodectest.testdecodeobjects()", "org.apache.commons.codec.binary.base64test.testbytetostringvariations()", "org.apache.commons.codec.binary.base64test.testcodeinteger1()", "org.apache.commons.codec.net.bcodectest.testencodeobjects()", "org.apache.commons.codec.binary.base64test.testdiscardwhitespace()", "org.apache.commons.codec.binary.base64test.testsingletonschunked()", "org.apache.commons.codec.binary.base64test.testbase64()", "org.apache.commons.codec.binary.base64test.testisarraybytebase64()", "org.apache.commons.codec.binary.base64test.testurlsafe()", "org.apache.commons.codec.binary.base64test.testobjectencodewithinvalidparameter()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64inputstreambychunk()", "org.apache.commons.codec.binary.base64test.testisurlsafe()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambychunk()", "org.apache.commons.codec.binary.base64codec13test.teststaticencode()", "org.apache.commons.codec.binary.base64test.testcodeintegernull()", "org.apache.commons.codec.binary.base64test.testknowndecodings()", "org.apache.commons.codec.binary.base64test.testsingletons()", "org.apache.commons.codec.binary.base64inputstreamtest.testread0()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithinvalidparameter()", "org.apache.commons.codec.binary.base64test.testtriplets()", "org.apache.commons.codec.binary.base64test.testconstructors()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64emptyoutputstream()", "org.apache.commons.codec.binary.base64test.testignoringnonbase64indecode()", "org.apache.commons.codec.binary.base64test.testcodec68()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex2()", "org.apache.commons.codec.binary.base64outputstreamtest.testwriteoutofbounds()", "org.apache.commons.codec.binary.base64test.testencodedecoderandom()", "org.apache.commons.codec.binary.base64test.teststringtobytevariations()", "org.apache.commons.codec.binary.base64test.testdecodepadmarkerindex3()", "org.apache.commons.codec.binary.base64test.testcodeinteger3()", "org.apache.commons.codec.binary.base64test.testtripletschunked()", "org.apache.commons.codec.binary.base64inputstreamtest.testbase64emptyinputstream()", "org.apache.commons.codec.binary.base64inputstreamtest.testreadoutofbounds()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecode()", "org.apache.commons.codec.binary.base64test.testrfc2045section2dot1crlfdefinition()", "org.apache.commons.codec.binary.base64test.testencodeovermaxsize()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean()", "org.apache.commons.codec.binary.base64outputstreamtest.testbase64outputstreambytebybyte()", "org.apache.commons.codec.binary.base64test.testnonbase64test()", "org.apache.commons.codec.binary.base64test.testchunkedencodemultipleof76()", "org.apache.commons.codec.binary.base64test.testdecodepadonly()", "org.apache.commons.codec.binary.base64codec13test.teststaticdecodechunked()", "org.apache.commons.codec.binary.base64test.testdecodepadonlychunked()", "org.apache.commons.codec.net.bcodectest.testinvalidencoding()", "org.apache.commons.codec.binary.base64test.testknownencodings()", "org.apache.commons.codec.binary.base64test.testconstructor_int_bytearray_boolean_urlsafe()", "org.apache.commons.codec.binary.base64test.testemptybase64()", "org.apache.commons.codec.binary.base64outputstreamtest.testwritetonullcoverage()", "org.apache.commons.codec.binary.base64inputstreamtest.testmarksupported()", "org.apache.commons.codec.binary.base64test.testdecodewithwhitespace()", "org.apache.commons.codec.binary.base64codec13test.testencoder()", "org.apache.commons.codec.binary.base64test.testuuid()", "org.apache.commons.codec.binary.base64test.testcodeinteger2()", "org.apache.commons.codec.binary.base64codec13test.testbinaryencoder()", "org.apache.commons.codec.binary.base64test.testcodeinteger4()", "org.apache.commons.codec.net.bcodectest.testutf8roundtrip()", "org.apache.commons.codec.binary.base64codec13test.testdecoder()", "org.apache.commons.codec.binary.base64test.testpairs()", "org.apache.commons.codec.binary.base64codec13test.testbinarydecoder()", "org.apache.commons.codec.net.bcodectest.testbasicencodedecode()", "org.apache.commons.codec.binary.base64test.testobjectencodewithvalidparameter()", "org.apache.commons.codec.binary.base64test.testobjectdecodewithvalidparameter()"]}