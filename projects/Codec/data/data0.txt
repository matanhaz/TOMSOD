{
    "changes": [
        {
            "commit_id": 1,
            "hash": "71205dde6b8eda4140c777b4fb71935d73bf2d12",
            "commit_summary": "Added Codec to commons from the sandbox\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130120 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "DecoderException",
                    "function params": [
                        "pMessage"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "pMessage"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.compare"
                },
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "StringEncoderComparator",
                    "function params": [
                        "en"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.isBase64"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.decode"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.isBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.isBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "encodeBase64Chunked",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64Chunked"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "discardWhitespace",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardWhitespace"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "getMaxCodeLen",
                    "function params": [],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.getMaxCodeLen"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.setMaxCodeLen"
                },
                {
                    "function name": "isMetaphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isMetaphoneEqual"
                },
                {
                    "function name": "Metaphone",
                    "function params": [],
                    "file name": "Metaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.Metaphone"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [],
                    "file name": "RefinedSoundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "Soundex",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "setMaxLength",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.setMaxLength"
                },
                {
                    "function name": "getMaxLength",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMaxLength"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "BinaryEncoderAbstractTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.BinaryEncoderAbstractTest"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "StringEncoderAbstractTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.StringEncoderAbstractTest"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "StringEncoderComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.StringEncoderComparatorTest"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testComparatorNoArgCon",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.tearDown"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testTriplets"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testBase64"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testSingletons"
                },
                {
                    "function name": "Base64Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.Base64Test"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.suite"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.toString"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.setUp"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/base64/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.base64.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTriplets"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "Base64Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.Base64Test"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testNonBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDiscardingOfWhiteSpace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardingOfWhiteSpace"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeEmpty"
                },
                {
                    "function name": "testOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testOddCharacters"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"
                },
                {
                    "function name": "testEncodeZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeZeroes"
                },
                {
                    "function name": "HexTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.HexTest"
                },
                {
                    "function name": "testHelloWorld",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorld"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.setUp"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.suite"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.tearDown"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.makeEncoder"
                },
                {
                    "function name": "testMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testMetaphone"
                },
                {
                    "function name": "testIsMetaphoneEqual",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual"
                },
                {
                    "function name": "MetaphoneTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.MetaphoneTest"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                },
                {
                    "function name": "RefinedSoundexTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.RefinedSoundexTest"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.suite"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.makeEncoder"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.tearDown"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.tearDown"
                },
                {
                    "function name": "testMaxLength",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMaxLength"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.makeEncoder"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncode"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.setUp"
                },
                {
                    "function name": "SoundexTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.SoundexTest"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.suite"
                }
            ],
            "date": "2003-04-25"
        },
        {
            "commit_id": 2,
            "hash": "941f00ce535e98f4f45ba838ed92795f7a615508",
            "commit_summary": "Removed unused local variable.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130135 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "Base64Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.Base64Test"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDiscardingOfWhiteSpace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardingOfWhiteSpace"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTriplets"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testNonBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                }
            ],
            "date": "2003-05-06"
        },
        {
            "commit_id": 3,
            "hash": "0e0d47592c8ce9aac136d336c8ac931a06fd6feb",
            "commit_summary": "Javadoc clean up such that the class description one liner forms a complete sentence. Under 1.4.x, javadoc was ending the one liner with the first initial of the last name of the first author since a period character followed the initial.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130136 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "encodeBase64Chunked",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64Chunked"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "discardWhitespace",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardWhitespace"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.for"
                }
            ],
            "date": "2003-05-06"
        },
        {
            "commit_id": 4,
            "hash": "282192ceff92d8a71b57e6d6cb75664fbaf412ab",
            "commit_summary": "Make URL references into @see links which are now commented out until the links are fixed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130139 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2003-05-12"
        },
        {
            "commit_id": 5,
            "hash": "4f10ae2edef970df9f189754e88d7f92f1b536e1",
            "commit_summary": "Javadocs were swicthed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130140 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2003-05-12"
        },
        {
            "commit_id": 6,
            "hash": "ddafa8f0cf6b44ff6df7ff176caeff84be8c260c",
            "commit_summary": "Fix for Bug 19860: Modified Base64 to remedy non-compliance with RFC 2045.  Non-Base64 characters were not being discarded during the decode.  RFC 2045 explicitly states that all characters outside of the base64 alphabet are to be ignored.  A new function discardNonBase64 is called prior to a decode.  Note that isArrayBase64 only discards whitespace before testing the contents of an encoded byte array.  Unit tests for Base64 were updated to reflect the changes related to discarding non-Base64 characters.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130141 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "discardNonBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardNonBase64"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                }
            ],
            "date": "2003-05-14"
        },
        {
            "commit_id": 7,
            "hash": "dfd60e3ed99c3d78ea891f7776748e87c5f01864",
            "commit_summary": "Moved 1.1 release notes to new file and prepared releas notes for the 1.1.1 maint rel.  Added/modified documentation\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130147 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [],
            "date": "2003-05-29"
        },
        {
            "commit_id": 8,
            "hash": "7748f47dcab2b77d0aeceef6af87b13851c3e7f3",
            "commit_summary": "Fixed a number of checkstyle problems - from around 270 checkstyle issues to 16\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130150 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/base64/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "discardNonBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardNonBase64"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "discardWhitespace",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardWhitespace"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "getMaxCodeLen",
                    "function params": [],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.getMaxCodeLen"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.setMaxCodeLen"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                }
            ],
            "date": "2003-05-29"
        },
        {
            "commit_id": 9,
            "hash": "727432fe12821b9e25e2c5a1758076ad83b098eb",
            "commit_summary": "Added Benjamin Walstrum's contribution of DoubleMetaphone, added Benjamin to the contributors\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130153 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "DoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphone"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4",
                        "criteria5",
                        "criteria6"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isVowel"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleC"
                },
                {
                    "function name": "handleD",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleD"
                },
                {
                    "function name": "handleH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleH"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "isSilentStart",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isSilentStart"
                },
                {
                    "function name": "charAt",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.charAt"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "cleanInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.cleanInput"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "getMaxCodeLen",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4",
                        "criteria5"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "isSlavoGermanic",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                }
            ],
            "date": "2003-06-11"
        },
        {
            "commit_id": 10,
            "hash": "f0ff6ed771ce1a795ec84897254ceb008f0e98a1",
            "commit_summary": "Removed characters which were breaking GUMP build.  Need to replace character literals with Unicode codes\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130155 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                }
            ],
            "date": "2003-06-18"
        },
        {
            "commit_id": 11,
            "hash": "e5afc85e67e21f11f7c5240f3b762ed661910b3d",
            "commit_summary": "Checkstyle improvements\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130156 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/base64/Base64.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleC"
                },
                {
                    "function name": "handleD",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleD"
                },
                {
                    "function name": "handleH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleH"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                }
            ],
            "date": "2003-06-18"
        },
        {
            "commit_id": 12,
            "hash": "690728e6332774663f2ae37d3fd473cbd0ada67f",
            "commit_summary": "Added StringDecoder and URLCodec from the HttpClient team.  This patch was submitted by Oleg Kalnichevski\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130160 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.for"
                },
                {
                    "function name": "URLCodec",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.for"
                },
                {
                    "function name": "urlencode",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.urlencode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "urldecode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.urldecode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.for"
                }
            ],
            "date": "2003-07-11"
        },
        {
            "commit_id": 13,
            "hash": "a0c7d99835895fa1836aefcf947228551842167d",
            "commit_summary": "Hex now implements BinaryDecoder and BinaryEncoder, patch submitted by Christopher O'Brien\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130161 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                }
            ],
            "date": "2003-07-11"
        },
        {
            "commit_id": 14,
            "hash": "19e0f44eafe0fb923e292b1dc6dc8706bb8100c0",
            "commit_summary": "Added a unit test for URLCodec thanks to Oleg Kalnichevski for the patch submission\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130162 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "URLCodecTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.URLCodecTest"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                }
            ],
            "date": "2003-07-11"
        },
        {
            "commit_id": 15,
            "hash": "9121badb679c4678bc0b83dec478b5ce5478abeb",
            "commit_summary": "The local variable result is never read\tDoubleMetaphone.java\tApache Jakarta Commons/codec/src/java/org/apache/commons/codec/language\tline 253\tJuly 18, 2003 8:21:41 PM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130164 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                }
            ],
            "date": "2003-07-20"
        },
        {
            "commit_id": 16,
            "hash": "ea515a8d142e060b70844a040a94c71439171bf5",
            "commit_summary": "Javadoc typo.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130165 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/base64/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.isBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.encode"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.decode"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.isBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.isBase64"
                },
                {
                    "function name": "for",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/base64/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.base64.Base64.for"
                }
            ],
            "date": "2003-07-20"
        },
        {
            "commit_id": 17,
            "hash": "18f114279392e140081072ef93f3e01b52b07069",
            "commit_summary": "Severity\tDescription\tResource\tIn Folder\tLocation\tCreation Time\n\tUnnecessary cast to type byte[] for expression of type byte[]\tBase64.java\tApache Jakarta Commons/codec/src/java/org/apache/commons/codec/binary\tline 275\tJuly 23, 2003 11:22:45 AM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130166 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2003-07-25"
        },
        {
            "commit_id": 18,
            "hash": "41d7c62ba2c811904a21f1821cb530ef28b4e547",
            "commit_summary": "Severity\tDescription\tResource\tIn Folder\tLocation\tCreation Time\n\tUnnecessary cast to type int for expression of type char. It is already compatible with the argument type int\tURLCodec.java\tApache Jakarta Commons/codec/src/java/org/apache/commons/codec/net\tline 165\tJuly 23, 2003 11:22:45 AM\n\tUnnecessary cast to type int for expression of type char. It is already compatible with the argument type int\tURLCodec.java\tApache Jakarta Commons/codec/src/java/org/apache/commons/codec/net\tline 166\tJuly 23, 2003 11:22:45 AM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130167 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "urlencode",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.urlencode"
                }
            ],
            "date": "2003-07-25"
        },
        {
            "commit_id": 19,
            "hash": "81621443ff37fd3bd393f77296fd9e19950d15ee",
            "commit_summary": "Consistent use of @version $Id$ as the last tag in a type's Javadoc comment.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130168 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/base64/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "DecoderException",
                    "function params": [
                        "pMessage"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "pMessage"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                }
            ],
            "date": "2003-07-25"
        },
        {
            "commit_id": 20,
            "hash": "a7b192dfd931c420763054cc6c73cb79cbcf14c5",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130169 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2003-07-25"
        },
        {
            "commit_id": 21,
            "hash": "5612674fb2e4e4a8dbc164cc15d17e00c72860e9",
            "commit_summary": "Allow ivar to be accessed from a subclass without warnings:\nSeverity\tDescription\tResource\tIn Folder\tLocation\tCreation Time\n\tRead access to enclosing field DoubleMetaphone.maxCodeLen is emulated by a synthetic accessor method. Increasing its visibility will improve your performance\tDoubleMetaphone.java\tApache Jakarta Commons/codec/src/java/org/apache/commons/codec/language\tline 1118\tJuly 25, 2003 3:53:04 PM\n\tRead access to enclosing field DoubleMetaphone.maxCodeLen is emulated by a synthetic accessor method. Increasing its visibility will improve your performance\tDoubleMetaphone.java\tApache Jakarta Commons/codec/src/java/org/apache/commons/codec/language\tline 1119\tJuly 25, 2003 3:53:04 PM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130170 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2003-07-25"
        },
        {
            "commit_id": 22,
            "hash": "5190100336e9218a9ca78eca04908b55858671ea",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130171 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2003-07-25"
        },
        {
            "commit_id": 23,
            "hash": "ab75c6affbd6074d64c5205d14d350f18a816318",
            "commit_summary": "Severity\tDescription\tResource\tIn Folder\tLocation\tCreation Time\n\tUnnecessary cast to type Object for expression of type byte[]\tBase64Test.java\tApache Jakarta Commons/codec/src/test/org/apache/commons/codec/binary\tline 370\tJuly 23, 2003 11:22:45 AM\n\tUnnecessary cast to type Object for expression of type byte[]\tBase64Test.java\tApache Jakarta Commons/codec/src/test/org/apache/commons/codec/binary\tline 401\tJuly 23, 2003 11:22:45 AM\n\tUnnecessary cast to type Object for expression of type Object\tBase64Test.java\tApache Jakarta Commons/codec/src/test/org/apache/commons/codec/binary\tline 373\tJuly 23, 2003 11:22:45 AM\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130172 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                }
            ],
            "date": "2003-07-25"
        },
        {
            "commit_id": 24,
            "hash": "c38480da2f7e5447389494a10032b99810085185",
            "commit_summary": "author tag change, removed my email address from author tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130173 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparatorTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.StringEncoderComparatorTest"
                },
                {
                    "function name": "testComparatorNoArgCon",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorNoArgCon"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"
                },
                {
                    "function name": "testEncodeZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeZeroes"
                },
                {
                    "function name": "testOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testOddCharacters"
                },
                {
                    "function name": "testHelloWorld",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorld"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeEmpty"
                },
                {
                    "function name": "HexTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.HexTest"
                }
            ],
            "date": "2003-07-30"
        },
        {
            "commit_id": 25,
            "hash": "1dcf683da3d9f48ff682e7c9a8a50e02392863b9",
            "commit_summary": "Bugzilla #21633: Commit'd patch from Michael Becke to URL\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130174 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "urlencode",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.urlencode"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.constructString"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                }
            ],
            "date": "2003-07-31"
        },
        {
            "commit_id": 26,
            "hash": "e727c992094a447fea8ef2bf9c18e2d55e680254",
            "commit_summary": "Minor Javadoc fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130178 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2003-08-11"
        },
        {
            "commit_id": 27,
            "hash": "c00b6e25b8c636d6bb29d0a2b712c24002915c07",
            "commit_summary": "Renamed urlencode to encodeUrl.\nRenamed urldecode to decodeUrl.\nUpdates Javadocs to start method comments to use the verb form \"Decodes\" or \"Encodes\" instead of \"Converts\" to match method names.\nRefactored \"US-ASCII\" references to a static var.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130179 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2003-08-14"
        },
        {
            "commit_id": 28,
            "hash": "bde6e6b5fc4e911107d9e014e037990c1f3882c5",
            "commit_summary": "Javadoc: normalize verb usage and general tidying.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130180 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [],
            "date": "2003-08-14"
        },
        {
            "commit_id": 29,
            "hash": "293d0ddf08193812286ed983c94c675d33ae678a",
            "commit_summary": "Fixed the typo in \"acknowlegement\" to \"acknowledgement\" as spotted by Gary.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130183 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/base64/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/base64/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2003-08-18"
        },
        {
            "commit_id": 30,
            "hash": "83a5ba3fcdcd8b3e39c2414b794fa10cc612f965",
            "commit_summary": "Fixed bug reported by Dan Quaroni <dquaroni@openratings.com> dealing\nwith the maxCodeLen check at the tail end of the Metaphone alg.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130189 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2003-09-04"
        },
        {
            "commit_id": 31,
            "hash": "d542ac38c91731d1fd91feefee6301d90aa44957",
            "commit_summary": "A DoubleMetaphoneTest was contributed by Mindbridge\nand contains test data from the original Lawrence Phillips\narticle.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130195 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqual",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqual"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.setUp"
                },
                {
                    "function name": "DoubleMetaphoneTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.DoubleMetaphoneTest"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.tearDown"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.makeEncoder"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.suite"
                }
            ],
            "date": "2003-10-04"
        },
        {
            "commit_id": 32,
            "hash": "29076a48666a30252842bb1a3ecce65211fdb61d",
            "commit_summary": "A minor documentation change in the Encoder interface.\nThis commit rewords the class level Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130197 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/Encoder.java"
            ],
            "functions": [],
            "date": "2003-10-04"
        },
        {
            "commit_id": 33,
            "hash": "84ee6515c0749bf5c546355f4e6805b5b59a7951",
            "commit_summary": "Adds some clarification to the class level Javadoc, and\nalso rewords the constructor's javadoc to sound less 'robotic'\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130198 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/EncoderException.java"
            ],
            "functions": [],
            "date": "2003-10-04"
        },
        {
            "commit_id": 34,
            "hash": "752897b3e5efb8127c3bb797dbdf3bf511ec91b5",
            "commit_summary": "Added the DigestUtils class which provides static utility\nmethods for creating MD5 and SHA digests.  This is\na contribution from both Dave Dribin and David Graham.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130200 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testMD5HexLength",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"
                },
                {
                    "function name": "testMD5Length",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                }
            ],
            "date": "2003-10-04"
        },
        {
            "commit_id": 35,
            "hash": "21804202745423b5fcd0a34a2c8c94064416ab3a",
            "commit_summary": "Fixed a number of broken Apache License 1.1 issues.\nIncluded the license verbatim from /commons/license\n(fixed the \"acknowledgement\" spelling bugs).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130204 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/base64/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/base64/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqual",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqual"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.setUp"
                },
                {
                    "function name": "DoubleMetaphoneTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.DoubleMetaphoneTest"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.tearDown"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.makeEncoder"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.suite"
                }
            ],
            "date": "2003-10-05"
        },
        {
            "commit_id": 36,
            "hash": "c76ca5ec26d4b1fd434bc47271ef54fc58fb35d2",
            "commit_summary": "Another license fix, in section five changed plural \"names\"\nto singular \"name\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130205 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/base64/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/base64/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2003-10-05"
        },
        {
            "commit_id": 37,
            "hash": "ec225adf2f6ce3ad2681d06ab0aeb83ec1a00f9b",
            "commit_summary": "The StringEncoderComparator used to call o1.toString(), and\no2.toString() on the parameters supplied to the compare\nmethod.  There is no need to require that only Strings\nare passed to the StringEncoderComparator - (actually\nthere is no reason why we couldn't have a generic Encoder\ncomparator.  This patch is the first step towards a more\ngeneric object, and it allows us to test the exception condition\nin this compare() method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130206 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.compare"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 38,
            "hash": "83b6dedef42ab67db1faef06f8595c651f03160d",
            "commit_summary": "Added more tests to the StringEncoderComparator class\nand increased coverage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130207 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 39,
            "hash": "31114f306900c2ec516a2395fa669156300eb71c",
            "commit_summary": "ENCODING was a static final variable, but it was only\naccessed from non-static methods.  This field was alter\nto be non-static and non-final.  A constructor was added to\nallow the end-user to set a custom Encoding.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130208 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "URLCodec",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 40,
            "hash": "10a1327b88bdb842bfb58605887175c2bc7b4a75",
            "commit_summary": "More tests for URLCodec to increase coverage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130209 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 41,
            "hash": "d718e52b671b8395084905f8063a09be17caf2b3",
            "commit_summary": "Added the ability to customize the Provider which is used\nto get an instance of MD5 and SHA.  By default, this\nUtils class will search the list of available Provider objects\nfor implementations, but if you want to supply your own\nProvider object you may do so by calling the static method\nsetProvider on DigestUtils. + Also, brought test coverage\nof DigestUtils up to 100%\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130210 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "setProvider",
                    "function params": [
                        "pProvider"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.setProvider"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                },
                {
                    "function name": "testSHANoAvailable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSHANoAvailable"
                },
                {
                    "function name": "testMd5NoAvailable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMd5NoAvailable"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 42,
            "hash": "b4bd93b48d45b93077bf1b3bc20b8e39a3a2c0be",
            "commit_summary": "Removing the test for Base64 in the base64 package as\nthis class will be removed from the 1.2 release\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130211 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-10-12"
        },
        {
            "commit_id": 43,
            "hash": "3652eb64e9c29bdd83d60376b61ae5fb99feeb26",
            "commit_summary": "Removing the deprecated Base64 class from the base64 package.\nThis class will not be available in the 1.2 release.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130212 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2003-10-12"
        },
        {
            "commit_id": 44,
            "hash": "1078329ade725b36e3617dd7c6dd7a714810795c",
            "commit_summary": "Removed all checkstyle violations from Base64, and the\nlanguage encoders.  Most of the checkstyle violations fixed\nwere violations dealing with the placement of operators\non a newline instead of on the end of the previous line.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130213 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 45,
            "hash": "124b73fed7492b3118c4ea43c28dc0b1bceda032",
            "commit_summary": "Removed all checkstyle violations from Base64, and the\nlanguage encoders.  Most of the checkstyle violations fixed\nwere violations dealing with the placement of operators\non a newline instead of on the end of the previous line.\n\nIn addition to the checkstyle fixes, DoubleMetaphone now\nhandles two cases C with a Cedilla and N with a tilde (ene).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130214 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                }
            ],
            "date": "2003-10-12"
        },
        {
            "commit_id": 46,
            "hash": "4cec5dbc051e5bd1ba4dff9aa87a5c81ad4f0abd",
            "commit_summary": "Rename the instance variable from \"ENCODING\" to \"encoding\".\nAdd getEncoding() accessor and replace instance variable references with accessor method call.\nRemove throws EncoderException from methods that in fact NEVER throw such an Exception.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130215 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.getEncoding"
                },
                {
                    "function name": "URLCodec",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2003-10-13"
        },
        {
            "commit_id": 47,
            "hash": "e983a64122755c52935c514c784b85036d685c07",
            "commit_summary": "Removed the 1.4 method call on MessageDigest\n from DigestUtils.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130216 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                }
            ],
            "date": "2003-10-15"
        },
        {
            "commit_id": 48,
            "hash": "d5989808fbc60a14bdb57bb526321fa8b978eb90",
            "commit_summary": "Minor Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130217 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.compare"
                }
            ],
            "date": "2003-10-29"
        },
        {
            "commit_id": 49,
            "hash": "ca867027ada51ce2cccc8669424495fa41eb45b5",
            "commit_summary": "Remove unused imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130218 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2003-11-03"
        },
        {
            "commit_id": 50,
            "hash": "fb41ecd7170303482bb50a5731d121110e15ea84",
            "commit_summary": "Refactor common code and complete test coverage (100%, see clover report).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130219 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 51,
            "hash": "625612006d4a4624e51f31197ca0b924914176e5",
            "commit_summary": "Refactor common code and complete test coverage (100%, see clover report). Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130220 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testMD5HexLength",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                },
                {
                    "function name": "testMD5Length",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"
                },
                {
                    "function name": "testInternalNoSuchAlgorithmException",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 52,
            "hash": "ddf6ebfb1147e0fc3de39050b35cb2bf3857079f",
            "commit_summary": "Better access level for this method.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130221 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 53,
            "hash": "b87223431e18100a35be17ed44b40fc9c7ff14e8",
            "commit_summary": "Improve test coverage (See clover report).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130222 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testDiscardWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 54,
            "hash": "66cf3bd969dac311d4dc50fd9a19ce387095afec",
            "commit_summary": "Minor clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130223 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "getRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.getRandom"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 55,
            "hash": "5fc5353dd975e54ad52ed1074cc06c21402a6461",
            "commit_summary": "PR: 24360\nSubmitted by:\tGary Gregory\n[codec] ClassCastException in Hex.decode(Object) fixed.\nJavadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130224 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 56,
            "hash": "2a02fe784259660283fc80124a699ab9c637dd0b",
            "commit_summary": "PR: 24360\nSubmitted by:\tGary Gregory\n[codec] ClassCastException in Hex.decode(Object) fixed.\nComplete code coverage for Hex (See clover report).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130225 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"
                },
                {
                    "function name": "testDencodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDencodeEmpty"
                },
                {
                    "function name": "testEncodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"
                },
                {
                    "function name": "testEncodeZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeZeroes"
                },
                {
                    "function name": "testHelloWorld",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorld"
                },
                {
                    "function name": "testDecodeArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"
                },
                {
                    "function name": "testDecodeHexOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters"
                },
                {
                    "function name": "testDecodeStringOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeEmpty"
                },
                {
                    "function name": "testDecodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 57,
            "hash": "efed05794b97c19559284aa15e34b7fdc319853b",
            "commit_summary": "Minor Javadoc'ing.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130227 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2003-11-03"
        },
        {
            "commit_id": 58,
            "hash": "9da7d2a69e0c19bb33a6e3ca18ab1c6a2298d61d",
            "commit_summary": "More Soundex test data and code clean up.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130228 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "getSoundexMapping",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getSoundexMapping"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "setSoundexMapping",
                    "function params": [
                        "soundexMapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.setSoundexMapping"
                },
                {
                    "function name": "getMaxLength",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMaxLength"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.makeEncoder"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncode"
                },
                {
                    "function name": "getEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.getEncoder"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.suite"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.tearDown"
                },
                {
                    "function name": "testEncode2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncode2"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.setUp"
                },
                {
                    "function name": "setEncoder",
                    "function params": [
                        "encoder"
                    ],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.setEncoder"
                }
            ],
            "date": "2003-11-04"
        },
        {
            "commit_id": 59,
            "hash": "6b0e4534b45d9344d13b71ff5f5369d6dbefb8c9",
            "commit_summary": "Soundex encoding bugs.\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=24471\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130229 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "str",
                        "index"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "map",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.clean"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "AllTests.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/AllTests.java",
                    "full name": "src.test.org.apache.commons.codec.language.AllTests.suite"
                },
                {
                    "function name": "testMaxLength",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMaxLength"
                },
                {
                    "function name": "testHWRuleEx2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"
                },
                {
                    "function name": "getEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.getEncoder"
                },
                {
                    "function name": "testHWRuleEx3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"
                },
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                },
                {
                    "function name": "testEncodeIgnoreHyphens",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"
                },
                {
                    "function name": "testEncodeBatch4",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBasic"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.setUp"
                },
                {
                    "function name": "setEncoder",
                    "function params": [
                        "encoder"
                    ],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.setEncoder"
                },
                {
                    "function name": "testEncodeBatch2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.encodeAll"
                },
                {
                    "function name": "testEncodeIgnoreApostrophes",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testEncodeBatch3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"
                },
                {
                    "function name": "testB650",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testB650"
                }
            ],
            "date": "2003-11-06"
        },
        {
            "commit_id": 60,
            "hash": "5ad899e3b481ba87002ca0a1aac398547b8099e0",
            "commit_summary": "Javadoc fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130230 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2003-11-06"
        },
        {
            "commit_id": 61,
            "hash": "f095ceb27daa38033f1e8368c90668403a4fb520",
            "commit_summary": "Soundex.setMaxLength causes bugs and is not needed.\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=24484\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130234 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "map",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "str",
                        "index"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "testMaxLength",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMaxLength"
                },
                {
                    "function name": "testMaxLengthLessThan3Fix",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"
                }
            ],
            "date": "2003-11-07"
        },
        {
            "commit_id": 62,
            "hash": "6e2fc7d9aedf30bebd7f9be6e95aa8a0bd3c5493",
            "commit_summary": "Wrong header comment.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130235 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/AllTests.java"
            ],
            "functions": [],
            "date": "2003-11-07"
        },
        {
            "commit_id": 63,
            "hash": "5bc006005c55912b9c94b9c8273727a7af45f0f0",
            "commit_summary": "Improve code coverge as reported by clover from ~45% to ~85% with more test data.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130236 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "doubleMetaphoneNotEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended2",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"
                },
                {
                    "function name": "DoubleMetaphoneTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.DoubleMetaphoneTest"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.tearDown"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualBasic",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.suite"
                },
                {
                    "function name": "testEmpty",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"
                },
                {
                    "function name": "setDoubleMetaphone",
                    "function params": [
                        "doubleMetaphone"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.setDoubleMetaphone"
                },
                {
                    "function name": "testDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended1",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended1"
                },
                {
                    "function name": "getDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.getDoubleMetaphone"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.setUp"
                },
                {
                    "function name": "validateFixture",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture"
                },
                {
                    "function name": "assertDoubleMetaphone",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.makeEncoder"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualWithMATCHES",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"
                },
                {
                    "function name": "testIsDoubleMetaphoneNotEqual",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual"
                },
                {
                    "function name": "assertDoubleMetaphoneAlt",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                }
            ],
            "date": "2003-11-07"
        },
        {
            "commit_id": 64,
            "hash": "9a0aebb8790cfa3dc6bd236d6e25b78f7eb87425",
            "commit_summary": "Clean ups along with improving code coverge as reported by clover from ~45% to ~85% with more test data.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130237 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "getMaxCodeLen",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.getMaxCodeLen"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                }
            ],
            "date": "2003-11-07"
        },
        {
            "commit_id": 65,
            "hash": "36fb76122133d84a2cab218dbddc9b6952f59ab7",
            "commit_summary": "Improve code coverge as reported by clover from ~61% to ~80% with more test data.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130238 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsMetaphoneEqualMary",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary"
                },
                {
                    "function name": "testIsMetaphoneEqualAlbert",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert"
                },
                {
                    "function name": "testIsMetaphoneEqualSusan",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan"
                },
                {
                    "function name": "testIsMetaphoneEqualRay",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.suite"
                },
                {
                    "function name": "validateFixture",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.validateFixture"
                },
                {
                    "function name": "getMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.getMetaphone"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.makeEncoder"
                },
                {
                    "function name": "testIsMetaphoneEqualWhite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "testIsMetaphoneEqualAero",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero"
                },
                {
                    "function name": "testIsMetaphoneEqualPeter",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter"
                },
                {
                    "function name": "testIsMetaphoneEqualXalan",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan"
                },
                {
                    "function name": "testIsMetaphoneEqualGary",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary"
                },
                {
                    "function name": "setMetaphone",
                    "function params": [
                        "metaphone"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.setMetaphone"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                },
                {
                    "function name": "testIsMetaphoneEqualJohn",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn"
                },
                {
                    "function name": "testIsMetaphoneEqualWright",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.tearDown"
                },
                {
                    "function name": "testMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testMetaphone"
                },
                {
                    "function name": "testIsMetaphoneEqualParis",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.setUp"
                },
                {
                    "function name": "testIsMetaphoneEqual1",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1"
                },
                {
                    "function name": "testIsMetaphoneEqual2",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2"
                },
                {
                    "function name": "testIsMetaphoneEqualKnight",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight"
                }
            ],
            "date": "2003-11-07"
        },
        {
            "commit_id": 66,
            "hash": "106f454b4a8c0c7c9a2707858cd07990064c84c1",
            "commit_summary": "Minor clean ups along with improving code coverge as reported by clover from ~61% to ~80% with more test data.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130239 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "getMaxCodeLen",
                    "function params": [],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.getMaxCodeLen"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2003-11-07"
        },
        {
            "commit_id": 67,
            "hash": "ee0335a99e62b5c61e313a7b290fd8f18cc0fd71",
            "commit_summary": "Minor cleanup.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130240 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                }
            ],
            "date": "2003-11-07"
        },
        {
            "commit_id": 68,
            "hash": "e0ee3930349ed31b7e69c987380ee5edaa501602",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130241 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2003-11-07"
        },
        {
            "commit_id": 69,
            "hash": "63a28b8f0c1936d502d88614a99abf0aac65b49a",
            "commit_summary": "Prep for version 1.2-rc1\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130244 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2003-11-08"
        },
        {
            "commit_id": 70,
            "hash": "306d24046c948f39f3432fe204764dde130155d8",
            "commit_summary": "Redo license header.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130247 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2003-11-12"
        },
        {
            "commit_id": 71,
            "hash": "eed8afb96bb1858d410bd3cafd01f815deb672d4",
            "commit_summary": "Redo license header.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130248 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2003-11-12"
        },
        {
            "commit_id": 72,
            "hash": "e0e3ef2ae7a2682d488a4141a0ecafd22a20967e",
            "commit_summary": "Javadoc typos.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130254 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java"
            ],
            "functions": [],
            "date": "2003-11-13"
        },
        {
            "commit_id": 73,
            "hash": "9d632c2f513e3b519a4c10a3ba6ad3652cd04b20",
            "commit_summary": "Use 'this.' consistently.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130255 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.compare"
                }
            ],
            "date": "2003-11-13"
        },
        {
            "commit_id": 74,
            "hash": "598c411603b7e1746771f3f536b06593e8b82291",
            "commit_summary": "Fix Javadoc nits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130260 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [
                        "stringEncoder"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "StringEncoderComparator",
                    "function params": [
                        "en"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                }
            ],
            "date": "2003-11-24"
        },
        {
            "commit_id": 75,
            "hash": "5563aa731f93b0c3c2dd69fc104164eb4cf025df",
            "commit_summary": "Add missing Javadoc tags on public methods. Compiler warnings WRT unqualified instance variable access (added \"this.\").\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130264 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2003-12-04"
        },
        {
            "commit_id": 76,
            "hash": "13672e9f995249fb84f532144f5687df424d39a8",
            "commit_summary": "Added test methods to cover MS SQL Server examples inpired by the mention of SQL Server on commons-dev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130265 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testMsSqlServer3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"
                },
                {
                    "function name": "testMsSqlServer2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"
                },
                {
                    "function name": "testMsSqlServer1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"
                }
            ],
            "date": "2003-12-04"
        },
        {
            "commit_id": 77,
            "hash": "af5537c33bbb27c5f577ef5d7c2b8478ceaaefa5",
            "commit_summary": "Added an implementation of the Soundex DIFFERENCE algorithm, a feature requested in http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25243.\nNote that this commit only covers adding the difference API to the Soundex class. See the ticket for comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130267 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "differenceEncoded",
                    "function params": [
                        "es1",
                        "es2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.differenceEncoded"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "encoder",
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testDifference"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.encodeAll"
                }
            ],
            "date": "2003-12-10"
        },
        {
            "commit_id": 78,
            "hash": "18bfd075f26b5377c8cd3a05d954952daf77ba28",
            "commit_summary": "Slightly better javadocs for the difference() APIs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130268 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2003-12-10"
        },
        {
            "commit_id": 79,
            "hash": "1f85bc361c53b25fdcc0cdea80e84b4424c77ac7",
            "commit_summary": "Assert API parameters for testDifference() were reversed.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130269 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testDifference"
                }
            ],
            "date": "2003-12-10"
        },
        {
            "commit_id": 80,
            "hash": "8d85bf94d9c4d8de84d5655dfbec369f5759bf8e",
            "commit_summary": "Use same license format as http://jakarta.apache.org/commons/license.html\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130270 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2003-12-11"
        },
        {
            "commit_id": 81,
            "hash": "899036a36138ab7ae810ec2b351d8226c66908bc",
            "commit_summary": "Refactor for implementing difference() API in both Soundex and RefinedSoundex.\nhttp://nagoya.apache.org/bugzilla/show_bug.cgi?id=25243\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130271 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.difference"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "encoder",
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "differenceEncoded",
                    "function params": [
                        "es1",
                        "es2"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.java.org.apache.commons.codec.language.SoundexUtils.differenceEncoded"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "encoder",
                        "s1",
                        "s2"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.java.org.apache.commons.codec.language.SoundexUtils.difference"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.java.org.apache.commons.codec.language.SoundexUtils.clean"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                },
                {
                    "function name": "getEncoder",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.getEncoder"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.tearDown"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.makeEncoder"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.suite"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testDifference"
                },
                {
                    "function name": "setEncoder",
                    "function params": [
                        "encoder"
                    ],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.setEncoder"
                }
            ],
            "date": "2003-12-11"
        },
        {
            "commit_id": 82,
            "hash": "04d863b6e0f2a32e8553db67b08e8513fa403321",
            "commit_summary": "Fix license typo: \n\nProducts derived from this software may not be called \"Apache\",\n *    \"Apache\" nor may \"Apache\" appear in their name  [...]\n\nThere is a double word in there. This LICENSE FILE is from the main Jakata Commons page.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130278 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2004-01-02"
        },
        {
            "commit_id": 83,
            "hash": "cb74b50ffe49e3b792773258a9ba3af3b5d6577e",
            "commit_summary": "Qualify inst var access with this.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130280 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                }
            ],
            "date": "2004-01-08"
        },
        {
            "commit_id": 84,
            "hash": "fb24a15f937b40d0c890cb6bdba2290debd6aeb1",
            "commit_summary": "PR: 25995\nObtained from: http://nagoya.apache.org/bugzilla/show_bug.cgi?id=25995\nSubmitted by:\tolegk@apache.org (Oleg Kalnichevski)\nReviewed by:\tGary D. Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130281 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"
                }
            ],
            "date": "2004-01-09"
        },
        {
            "commit_id": 85,
            "hash": "f023dc16c9bd83cc76bb3864b4883f37b6ea712b",
            "commit_summary": "A couple of comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130282 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2004-01-09"
        },
        {
            "commit_id": 86,
            "hash": "f6667a69015121a5ddea479d33702273cc96a623",
            "commit_summary": "Use getEncoding().\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130285 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2004-01-09"
        },
        {
            "commit_id": 87,
            "hash": "c23fdd2c3f0bec540bee78c1d292d4c33a588d82",
            "commit_summary": "Added Binary encoder/decoder plus exhaustive test case from Alex Karasulu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130294 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.encode"
                },
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiChars"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiBytes"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.encode"
                },
                {
                    "function name": "toAsciiString",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiString"
                },
                {
                    "function name": "BinaryTest",
                    "function params": [
                        "arg0"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.BinaryTest"
                },
                {
                    "function name": "testFromAsciibyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciibyteArray"
                },
                {
                    "function name": "testFromAsciicharArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciicharArray"
                },
                {
                    "function name": "testToAsciiString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiString"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.tearDown"
                },
                {
                    "function name": "testDecodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodebyteArray"
                },
                {
                    "function name": "testToAsciiChars",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiChars"
                },
                {
                    "function name": "testToAsciiBytes",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiBytes"
                },
                {
                    "function name": "testEncodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodebyteArray"
                },
                {
                    "function name": "testDecodeString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeString"
                },
                {
                    "function name": "testEncodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObject"
                },
                {
                    "function name": "testDecodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObject"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.setUp"
                }
            ],
            "date": "2004-01-22"
        },
        {
            "commit_id": 88,
            "hash": "c8b8dd8771cca2b5af498d540fc44806ad40637d",
            "commit_summary": "Organize Imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130302 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Binary.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiChars"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.encode"
                },
                {
                    "function name": "toAsciiString",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiString"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiBytes"
                },
                {
                    "function name": "BinaryTest",
                    "function params": [
                        "arg0"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.BinaryTest"
                },
                {
                    "function name": "testFromAsciicharArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciicharArray"
                },
                {
                    "function name": "testDecodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodebyteArray"
                },
                {
                    "function name": "testToAsciiChars",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiChars"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.setUp"
                },
                {
                    "function name": "testFromAsciibyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciibyteArray"
                },
                {
                    "function name": "testToAsciiString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiString"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.tearDown"
                },
                {
                    "function name": "testToAsciiBytes",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiBytes"
                },
                {
                    "function name": "testEncodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodebyteArray"
                },
                {
                    "function name": "testDecodeString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeString"
                },
                {
                    "function name": "testEncodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObject"
                },
                {
                    "function name": "testDecodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObject"
                }
            ],
            "date": "2004-02-19"
        },
        {
            "commit_id": 89,
            "hash": "c1b1a1ffca322edf9af7689f40d5ae3e0e889661",
            "commit_summary": "Apply Apache License Version 2.0. \nFYI: The instructions are here: http://www.apache.org/dev/apply-license.html.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130303 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Binary.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2004-02-23"
        },
        {
            "commit_id": 90,
            "hash": "b84516bd74a25a66c1d7d754c0df66d138b566e7",
            "commit_summary": "Following Board recommendation to remove author tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130304 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Binary.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2004-02-29"
        },
        {
            "commit_id": 91,
            "hash": "90cb58217ebc628734ebbd4ca84e9eea9305dd77",
            "commit_summary": "removing tabs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130306 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                }
            ],
            "date": "2004-03-12"
        },
        {
            "commit_id": 92,
            "hash": "0305a10301656d73ed010d3443256cc003cf0018",
            "commit_summary": "Minor Javadoc fixes.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130307 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Binary.java"
            ],
            "functions": [],
            "date": "2004-03-12"
        },
        {
            "commit_id": 93,
            "hash": "6fc9947c7d2b10c066a22a0edfa884832bba3e69",
            "commit_summary": "Added @since tag.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130308 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Binary.java"
            ],
            "functions": [],
            "date": "2004-03-12"
        },
        {
            "commit_id": 94,
            "hash": "166c9edc5e314ba401e35ae3b50090762a86af9d",
            "commit_summary": "Added @since 1.3 to difference() methods.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130311 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java"
            ],
            "functions": [],
            "date": "2004-03-17"
        },
        {
            "commit_id": 95,
            "hash": "6a965e8d892f26a5aaa38d9ed0cfec7783208319",
            "commit_summary": "Following Board recommendation to remove author tags\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130314 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2004-03-17"
        },
        {
            "commit_id": 96,
            "hash": "d14d17299d655e7556b8da96e86f301068b4af0f",
            "commit_summary": "Fix comment nits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130315 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/BinaryTest.java"
            ],
            "functions": [],
            "date": "2004-03-17"
        },
        {
            "commit_id": 97,
            "hash": "98b5bc5c91679d112be69caf365310ae6b3a0f32",
            "commit_summary": "Get 100% code coverage (as reported by Clover).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130316 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/BinaryTest.java"
            ],
            "functions": [
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.assertDecodeObject"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.tearDown"
                },
                {
                    "function name": "testEncodeObjectException",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObjectException"
                },
                {
                    "function name": "testDecodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObject"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.setUp"
                },
                {
                    "function name": "testDecodeObjectException",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObjectException"
                }
            ],
            "date": "2004-03-17"
        },
        {
            "commit_id": 98,
            "hash": "c6812d686674e7006b8de12a9a5ba0f69b10fa98",
            "commit_summary": "- Javadoc.\n- Remove extraneous () in return statements.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130317 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64Chunked",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64Chunked"
                },
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                }
            ],
            "date": "2004-03-18"
        },
        {
            "commit_id": 99,
            "hash": "68e73bed684f9fc16e9ed2b4c1e6bdad97071ea5",
            "commit_summary": "PR: Bugzilla Bug 27813 Alterations to Binary.java and its unit test for 1.3 release\nSubmitted by:\tAlex Karasulu\nReviewed by:\tGary Gregory\nPatch partially applied and modified:\n\n(1) The bitset methods and tests do not compile on <1.4. I've fixed that in another patch attached to this ticket if/when we want to use it here.\n\n(2) I did not include the bit set methods in this pass as they seem to be out of context for this class but would like to discuss this. The Binary codec as is today converts between byte arrays and \"0/1\" strings. If we want to convert to and from BitSet objects, maybe this is another codec or a BitSetUtils class in [lang]?\n\n(3) All Java strings are Unicode, so the use of \"ASCII\" in comments and method names is misleading IMO, especially when what is meant are \"Strings of 0s and 1s\" so I'd like to not use \"Ascii\" in method names. I'll try to address that on commons-dev.\n\n(4) I've also renamed the instance method \"byte[] decode(Object)\" to \"toByteArray\" because the name \"decode\" was being overloaded but not overriden, which to makes the class more confusing to understand IMHO considering the codec interfaces Decoder, StringDecoder, and BinaryDecoder. I found this tricky since Binary is NOT a StringDecoder but a BinaryDecoder. Using \"decode\" the method look like a framework implementation method when it is not. This is all I suppose a reflection on how truly useful these interfaces are in the first place, a different topic I know.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130319 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Binary.java",
                "src/test/org/apache/commons/codec/binary/BinaryTest.java"
            ],
            "functions": [
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiChars"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toByteArray"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiBytes"
                },
                {
                    "function name": "testFromAsciicharArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciicharArray"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.assertDecodeObject"
                },
                {
                    "function name": "testDecodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodebyteArray"
                },
                {
                    "function name": "testToAsciiChars",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiChars"
                },
                {
                    "function name": "testToByteArrayFromString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToByteArrayFromString"
                },
                {
                    "function name": "testFromAsciibyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciibyteArray"
                },
                {
                    "function name": "testToAsciiString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiString"
                },
                {
                    "function name": "testToAsciiBytes",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiBytes"
                },
                {
                    "function name": "testEncodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodebyteArray"
                },
                {
                    "function name": "testEncodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObject"
                },
                {
                    "function name": "testDecodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObject"
                },
                {
                    "function name": "testEncodeObjectNull",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObjectNull"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 100,
            "hash": "e988be3476413d6b12e9fce379fafd4967bf73a2",
            "commit_summary": "Format source to match classes in this package. In particular, \"foo ( bar)\" replaced with \"foo(bar)\". Etc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130320 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Binary.java",
                "src/test/org/apache/commons/codec/binary/BinaryTest.java"
            ],
            "functions": [
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiChars"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.encode"
                },
                {
                    "function name": "toAsciiString",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiString"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.encode"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toByteArray"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.decode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.fromAscii"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "Binary.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Binary.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Binary.toAsciiBytes"
                },
                {
                    "function name": "BinaryTest",
                    "function params": [
                        "arg0"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.BinaryTest"
                },
                {
                    "function name": "testFromAsciicharArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciicharArray"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.assertDecodeObject"
                },
                {
                    "function name": "testDecodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodebyteArray"
                },
                {
                    "function name": "testToAsciiChars",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiChars"
                },
                {
                    "function name": "testToByteArrayFromString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToByteArrayFromString"
                },
                {
                    "function name": "testEncodeObjectException",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObjectException"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.setUp"
                },
                {
                    "function name": "testFromAsciibyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testFromAsciibyteArray"
                },
                {
                    "function name": "testToAsciiString",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiString"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.tearDown"
                },
                {
                    "function name": "testToAsciiBytes",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testToAsciiBytes"
                },
                {
                    "function name": "testEncodebyteArray",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodebyteArray"
                },
                {
                    "function name": "testEncodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObject"
                },
                {
                    "function name": "testDecodeObject",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObject"
                },
                {
                    "function name": "testDecodeObjectException",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testDecodeObjectException"
                },
                {
                    "function name": "testEncodeObjectNull",
                    "function params": [],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.testEncodeObjectNull"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 101,
            "hash": "588d1475c74314803eec9410b2d94be27cb6036c",
            "commit_summary": "Removed unnecessary type casts.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130321 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/BinaryTest.java"
            ],
            "functions": [
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryTest.assertDecodeObject"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 102,
            "hash": "2619aba78ddf1e3e0a38f7b7c9cccbce225ce864",
            "commit_summary": "Removed unnecessary throws clause.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130322 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 103,
            "hash": "d308d513e2cfb26ae2218c51e3c482eded08ff9d",
            "commit_summary": "PR: Bugzilla Bug 27788\n\t  \t[Codec][PATCH] Inconsistent use of the word 'encodning' in the URLCodec API\nSubmitted by:\tOleg Kalnichevski\nReviewed by:\tGary Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130323 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "URLCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.getEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "URLCodec",
                    "function params": [
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "encoding"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.getDefaultCharset"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 104,
            "hash": "d99d0bd4700b43aadbffd159918fb58c7feb52a8",
            "commit_summary": "Add a test to make sure getEncoding and getDefaultChar set match.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130324 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "validateState",
                    "function params": [
                        "urlCodec"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.validateState"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 105,
            "hash": "765445394812db1c3dedd22cce7749dfb7713971",
            "commit_summary": "PR: Bugzilla Bug 27789\n\t  \t[Codec][PATCH] Quoted-printable codec (partial implementation)\nSubmitted by:\tOleg Kalnichevski\nReviewed by:\tGary Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130325 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.for"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.for"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "QuotedPrintableCodecTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.QuotedPrintableCodecTest"
                }
            ],
            "date": "2004-03-21"
        },
        {
            "commit_id": 106,
            "hash": "c6a5b2d5619b3bd7f785a71bdf075c41a0101f1e",
            "commit_summary": "javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130326 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2004-03-23"
        },
        {
            "commit_id": 107,
            "hash": "01ca21405950e0fcc2a724cb34885f930c86c5e2",
            "commit_summary": "Bugzilla Bug 27781\n\t  \tBase64 chunked encoding not compliant with RFC 2045 section 2.1 CRLF\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130329 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testTripletsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTripletsChunked"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testSingletonsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"
                },
                {
                    "function name": "testRfc2045Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"
                }
            ],
            "date": "2004-03-24"
        },
        {
            "commit_id": 108,
            "hash": "f70672ad23482f620b4caff5aea6c9271138d8cf",
            "commit_summary": "Javadoc typo.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130332 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2004-03-28"
        },
        {
            "commit_id": 109,
            "hash": "11ba9aed65ce83f7394755fdfc406104177e55d9",
            "commit_summary": "Fix Copyright date. This file was added in 2004, not 2001.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130333 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2004-03-28"
        },
        {
            "commit_id": 110,
            "hash": "3f17959da84c68bb15d0eeaa1fb01dd2243cc374",
            "commit_summary": "Javadoc tweak.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130336 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2004-03-29"
        },
        {
            "commit_id": 111,
            "hash": "8fe42694a202433d1ce48e4804162d789d2091af",
            "commit_summary": "- Refactor String encoding names for reuse. \n- Javadoc\n- Format.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130337 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2004-03-29"
        },
        {
            "commit_id": 112,
            "hash": "2d72fe3f3bbfaef98d3cd32c8aeb9870ddfd079d",
            "commit_summary": "PR: Bugzilla Bug 28002 [Codec][Patch] RFC 1522 codecs (Q-codec & B-codec)\nSubmitted by:\tOleg Kalnichevski\nReviewed by:\tGary Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130338 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.doEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.getEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "BCodec",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.getDefaultCharset"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.doDecoding"
                },
                {
                    "function name": "QCodec",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.for"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "setEncodeBlanks",
                    "function params": [
                        "b"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.setEncodeBlanks"
                },
                {
                    "function name": "isEncodeBlanks",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.isEncodeBlanks"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.for"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.getEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.doEncoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.doDecoding"
                },
                {
                    "function name": "for",
                    "function params": [
                        "i"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.for"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.getDefaultCharset"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "QCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                }
            ],
            "date": "2004-03-29"
        },
        {
            "commit_id": 113,
            "hash": "f57037a7dba457822e233129408b4d71353c0b99",
            "commit_summary": "PR: Bugzilla Bug 28002 [Codec][Patch] RFC 1522 codecs (Q-codec & B-codec)\nSubmitted by:\tOleg Kalnichevski\nReviewed by:\tGary Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130342 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "BCodecTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.BCodecTest"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.constructString"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "QCodecTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.QCodecTest"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testEncodeDecodeBlanks",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"
                }
            ],
            "date": "2004-03-29"
        },
        {
            "commit_id": 114,
            "hash": "e38b781e13aafdcd2ac5b9c4353b305450628980",
            "commit_summary": "Renamed Binary to BinaryCodec.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130343 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testToAsciiBytes",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes"
                },
                {
                    "function name": "BinaryCodecTest",
                    "function params": [
                        "arg0"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.BinaryCodecTest"
                },
                {
                    "function name": "testToAsciiString",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString"
                },
                {
                    "function name": "testFromAsciibyteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciibyteArray"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.setUp"
                },
                {
                    "function name": "testToAsciiChars",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars"
                },
                {
                    "function name": "testFromAsciicharArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciicharArray"
                }
            ],
            "date": "2004-03-29"
        },
        {
            "commit_id": 115,
            "hash": "a960c131869fd549e686c7443f7ee11f57607592",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130344 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2004-03-30"
        },
        {
            "commit_id": 116,
            "hash": "c10a2d739970c3dd19409e958fb4479135a821b9",
            "commit_summary": "PR: [Codec][Patch] RFC 1522 codecs: Q-codec & B-codec\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=28002\nSubmitted by:\tOleg Kalnichevski\nReviewed by:\tGary Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130349 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testNullInput"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testNullInput"
                },
                {
                    "function name": "testLetUsMakeCloverHappy",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "RFC1522CodecTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522CodecTest"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"
                }
            ],
            "date": "2004-04-09"
        },
        {
            "commit_id": 117,
            "hash": "ee113eb4fbe9a51a7a834f6ac9aafda8238be725",
            "commit_summary": "Javadoc\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130350 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2004-04-09"
        },
        {
            "commit_id": 118,
            "hash": "e133c23d6b8eb548fa3852b52740b523dfa2bad3",
            "commit_summary": "Fix headers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130351 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/StringEncodings.java"
            ],
            "functions": [],
            "date": "2004-04-09"
        },
        {
            "commit_id": 119,
            "hash": "79ba87de2c46978b3066b97b62e23d53b14aefac",
            "commit_summary": "Make this class package private for now.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130352 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                }
            ],
            "date": "2004-04-09"
        },
        {
            "commit_id": 120,
            "hash": "dceaa6745c0e1a96a0f2938e47938c7615f69ae8",
            "commit_summary": "Broken link has no new equivalent on new site.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130354 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2004-04-09"
        },
        {
            "commit_id": 121,
            "hash": "a4894c0c87cf8651b23b4128c438e4dd640acbe9",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130355 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2004-04-13"
        },
        {
            "commit_id": 122,
            "hash": "f2786e4010e772932d433fba8f873ab552ba2092",
            "commit_summary": "Add B and Q codecs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130357 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2004-04-13"
        },
        {
            "commit_id": 123,
            "hash": "94c6cc1a69c575aca1bde1b6efef50cb4c1fe0ee",
            "commit_summary": "A couple more tests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130358 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                }
            ],
            "date": "2004-04-13"
        },
        {
            "commit_id": 124,
            "hash": "e203e82bad91eeff6c9f0dda1ddc779f4fa4d14a",
            "commit_summary": "Bugzilla Bug 28455: Hex converts illegal characters to 255.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130359 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "toDigit",
                    "function params": [
                        "ch",
                        "index"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.toDigit"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "testDecodeBadCharacterPos0",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"
                },
                {
                    "function name": "testDecodeBadCharacterPos1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"
                }
            ],
            "date": "2004-04-18"
        },
        {
            "commit_id": 125,
            "hash": "9897dac93ab98edf73a897443243b98ea6f0eb8f",
            "commit_summary": "Made a functioni n RefinedSoundex package instead of private to allow us to write unit test around this particular function\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130361 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                }
            ],
            "date": "2004-04-18"
        },
        {
            "commit_id": 126,
            "hash": "ac23124f18d996dbaf32617e2af3209d141274bc",
            "commit_summary": "Fixed the ending-MB bug - Bugzilla #28457 - also refactored some of the index arithmetic and content tests into functions for readability.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130362 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "isLastChar",
                    "function params": [
                        "wdsz",
                        "n"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isLastChar"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                }
            ],
            "date": "2004-04-18"
        },
        {
            "commit_id": 127,
            "hash": "e8b045b0218f9bf6fca68e088096194c7d17f4e3",
            "commit_summary": "Increased unit test coverage on Metaphone and RefinedSoundex\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130363 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testTranslateOfSCHAndCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"
                },
                {
                    "function name": "testWordsWithCIA",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"
                },
                {
                    "function name": "testSetMaxLengthWithTruncation",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"
                },
                {
                    "function name": "testDiscardOfSilentHAfterG",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"
                },
                {
                    "function name": "testTCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTCH"
                },
                {
                    "function name": "testMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testMetaphone"
                },
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "testTranslateToJOfDGEOrDGIOrDGY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "testPHTOF",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testPHTOF"
                },
                {
                    "function name": "testSHAndSIOAndSIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"
                },
                {
                    "function name": "testDiscardOfSCEOrSCIOrSCY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"
                },
                {
                    "function name": "testWordEndingInMB",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"
                },
                {
                    "function name": "testTIOAndTIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                },
                {
                    "function name": "testBadCharacters",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testBadCharacters"
                }
            ],
            "date": "2004-04-18"
        },
        {
            "commit_id": 128,
            "hash": "ee24bba63143009029408053d153e5cb3cf877a3",
            "commit_summary": "Use @version CVS Id instead of Revision.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130364 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2004-04-19"
        },
        {
            "commit_id": 129,
            "hash": "625914d5fc719c13e3dbba53dabe113486c6986c",
            "commit_summary": "Remove unnecessary cast.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130368 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                }
            ],
            "date": "2004-05-24"
        },
        {
            "commit_id": 130,
            "hash": "12cb31c3fe59c7893bae91523e664c84abca93c7",
            "commit_summary": "The local variable tmpS is never read.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130369 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2004-05-24"
        },
        {
            "commit_id": 131,
            "hash": "0e82d923ac13eda54842c0039777c8e99ad8026d",
            "commit_summary": "Make code less twisty.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130370 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.doDecoding"
                }
            ],
            "date": "2004-05-24"
        },
        {
            "commit_id": 132,
            "hash": "a175e52e191e5380751be4da52fca26122cf8055",
            "commit_summary": "Make code less twisty.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130371 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                }
            ],
            "date": "2004-05-24"
        },
        {
            "commit_id": 133,
            "hash": "3ac057145c42528773c456dc6d622b6aabf26e41",
            "commit_summary": "Make code less twisty.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130372 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "cleanInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.cleanInput"
                },
                {
                    "function name": "charAt",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.charAt"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                }
            ],
            "date": "2004-05-24"
        },
        {
            "commit_id": 134,
            "hash": "e398498388fe995b20a3fd84a9c359039ec82466",
            "commit_summary": "http://nagoya.apache.org/bugzilla/show_bug.cgi?id=29080\nThrow an exception with a clear message.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130373 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "map",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                }
            ],
            "date": "2004-06-02"
        },
        {
            "commit_id": 135,
            "hash": "57d131714a8b0628e7c85c95589bebabb5a5ca22",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130374 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "map",
                    "function params": [
                        "ch"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "map",
                    "function params": [
                        "c"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.encode"
                }
            ],
            "date": "2004-06-05"
        },
        {
            "commit_id": 136,
            "hash": "ed9becff200badd785e0d7780c73b3af22a5e0ce",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130375 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2004-06-05"
        },
        {
            "commit_id": 137,
            "hash": "08a3ed259baa23f4320a2b3abf26ed6a09f3dc05",
            "commit_summary": "Checkstyle on header fix.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130377 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2004-06-13"
        },
        {
            "commit_id": 138,
            "hash": "93691a5572245cde0526b175960d5cfbe331395a",
            "commit_summary": "Replace custom author tags with @author Apache Software Foundation.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130378 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java"
            ],
            "functions": [],
            "date": "2004-06-15"
        },
        {
            "commit_id": 139,
            "hash": "d577580efc0f1f0eed5edfc7de22ecdd97c8111c",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130381 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [],
            "date": "2004-06-21"
        },
        {
            "commit_id": 140,
            "hash": "34257eff5201e50739d1387caeb2ec5c5561984d",
            "commit_summary": "Javadoc of deprecated items now also state:  \"Will be removed in 2.0.\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130399 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2004-07-07"
        },
        {
            "commit_id": 141,
            "hash": "6d998a12c101a31048fd175e36c5e5ac56dccda9",
            "commit_summary": "Renamed the package private interface StringEncodings to CharacterEncodingNames and added more Javadocs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130407 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                }
            ],
            "date": "2004-07-26"
        },
        {
            "commit_id": 142,
            "hash": "8548bab17a99cd737133160fc6032b1587335ffe",
            "commit_summary": "Should be class, not an interface.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130408 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/CharacterEncodingNames.java"
            ],
            "functions": [],
            "date": "2004-07-27"
        },
        {
            "commit_id": 143,
            "hash": "83b64a2b5acb327a9a37016b107ababe7244c6da",
            "commit_summary": "Javadoc tweak.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130409 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2004-07-28"
        },
        {
            "commit_id": 144,
            "hash": "63ff02e53e5bddd77b8c22af583f2fd0e2bd0c8e",
            "commit_summary": "Organize imports.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130410 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2004-08-05"
        },
        {
            "commit_id": 145,
            "hash": "82e6bf9700970395ef234de1609e7e93b20e1a94",
            "commit_summary": "Bugzilla Bug 30864\n[codec] Document how to print a QPDecoderStream with QCodec?\nAdded Javadoc noting that arguments are expected to be String (and byte[] sometimes).\nCodec does not do Stream (yet).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130412 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                }
            ],
            "date": "2004-08-27"
        },
        {
            "commit_id": 146,
            "hash": "6257f83a1fce4c2addba7e3e5c7bcc49d8006897",
            "commit_summary": "Bugzilla Bug 30864\n[codec] Document how to print a QPDecoderStream with QCodec?\nAdded Javadoc noting that arguments are expected to be String (and byte[] sometimes).\nCodec does not do Stream (yet).\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130413 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2004-08-27"
        },
        {
            "commit_id": 147,
            "hash": "e57f11af8917edbab47c7cecf55ff1d1f07dd56a",
            "commit_summary": "Declared exception was never thrown.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130414 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java"
            ],
            "functions": [
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.doDecoding"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.doEncoding"
                }
            ],
            "date": "2004-09-01"
        },
        {
            "commit_id": 148,
            "hash": "c7e8f03539089ff0cc637756aaf01316c6e9a4f4",
            "commit_summary": "The declared exception EncoderException is not actually thrown by the method doEncoding(byte[]) from type QCodec, QCodec.java, line 132.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130415 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.doEncoding"
                }
            ],
            "date": "2004-09-01"
        },
        {
            "commit_id": 149,
            "hash": "519cfe52d88d642c0910b8ea74303130c2348864",
            "commit_summary": "// comments.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130416 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "str",
                        "index"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.soundex"
                }
            ],
            "date": "2004-09-08"
        },
        {
            "commit_id": 150,
            "hash": "bbeb0c0754bbbde313c44d6843cfa5aae0fe4220",
            "commit_summary": "Declares the Serial Version Uid for exceptions.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130417 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/EncoderException.java"
            ],
            "functions": [],
            "date": "2004-09-08"
        },
        {
            "commit_id": 151,
            "hash": "79543da9d084c90e29643c6d47e782ae69a2f314",
            "commit_summary": "The declared exception DecoderException is not actually thrown by the method doDecoding(byte[]) from type RFC1522CodecTest.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130418 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                }
            ],
            "date": "2004-09-08"
        },
        {
            "commit_id": 152,
            "hash": "035f5283ab5c6e6885610651166631d3461d8a8c",
            "commit_summary": "Javadoc nits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130419 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/EncoderException.java"
            ],
            "functions": [],
            "date": "2004-09-09"
        },
        {
            "commit_id": 153,
            "hash": "ac731fb44d6a6c6ba33702887a8e8cef43ca9cb7",
            "commit_summary": "Javadoc nits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130420 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/DecoderException.java"
            ],
            "functions": [],
            "date": "2004-09-09"
        },
        {
            "commit_id": 154,
            "hash": "2748aabedbe18790eccf548f738f188c3c88f446",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130421 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2004-09-09"
        },
        {
            "commit_id": 155,
            "hash": "d1c7c8d5ecbf919f9f9a5d69faefa2e37f140332",
            "commit_summary": "PR: Bugzilla Bug 31161\n\t  \tURLCodec.decode() corrupts characters > 127 in unencoded strings\nObtained from: Bugzilla Bug 31161\nSubmitted by:\tOleg Kalnichevski\nReviewed by:\tGary Gregory\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130422 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeInvalidContent",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"
                }
            ],
            "date": "2004-09-21"
        },
        {
            "commit_id": 156,
            "hash": "356db13229632472d341d52c02b0f8bf0f267458",
            "commit_summary": "Remove extraneous parentheses such that \"return (expr);\" becomes \"return expr;\"\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130423 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.suite"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.suite"
                }
            ],
            "date": "2004-10-08"
        },
        {
            "commit_id": 157,
            "hash": "39452a47b21cbd323a7614b70fadfc55b83007d8",
            "commit_summary": "Add missing Javadoc @return.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130424 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2004-10-14"
        },
        {
            "commit_id": 158,
            "hash": "fe62254726b67900a16fed2e5ae4206ff96a85cb",
            "commit_summary": "Javadoc nits.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130427 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2004-10-20"
        },
        {
            "commit_id": 159,
            "hash": "3f4e9262e796fc78dfc042766ae7b9c54a20150d",
            "commit_summary": "Javadoc.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130428 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2004-10-30"
        },
        {
            "commit_id": 160,
            "hash": "3e7120c8fa69249a264face69d3f69e57b8e9c2b",
            "commit_summary": "ASF Bugzilla Bug 30825\n[codec] Under some circumstances Base64.isArrayByteBase64() throws a ArrayIndexOutOfBoundsException.\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=30825\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@130429 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                }
            ],
            "date": "2004-11-24"
        },
        {
            "commit_id": 161,
            "hash": "31d080c31f10e40952a113b2cb656a6f5d631dbe",
            "commit_summary": "change http://nagoya.apache.org/bugzilla\nto http://issues.apache.org/bugzilla\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@149300 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testDifference"
                }
            ],
            "date": "2005-01-31"
        },
        {
            "commit_id": 162,
            "hash": "b42d42b64c36a2e16beb80ef89e07b7c8315fe64",
            "commit_summary": "svn:keywords correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@155405 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/CharacterEncodingNames.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [],
            "date": "2005-02-26"
        },
        {
            "commit_id": 163,
            "hash": "13a457cc88731927abc43564abd4e2f6c388a6db",
            "commit_summary": "[codec] Add methods for SHA-256, SHA-384, and SHA-512 to DigestUtils.\nhttp://issues.apache.org/bugzilla/show_bug.cgi?id=34157.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@161335 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "getSha512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getSha512Digest"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "getSha256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getSha256Digest"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "getSha384Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getSha384Digest"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                }
            ],
            "date": "2005-04-14"
        },
        {
            "commit_id": 164,
            "hash": "0f9ad2ebc9f566960829716fde8953acae5993f1",
            "commit_summary": "Updated copyright statements for 2005.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@161350 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/CharacterEncodingNames.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2005-04-14"
        },
        {
            "commit_id": 165,
            "hash": "7932bdb3b8dd51080c252ca5af50cb5b1d19c1b9",
            "commit_summary": "@version $Id: $\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@165706 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2005-05-02"
        },
        {
            "commit_id": 166,
            "hash": "3efc1d8ea4e1eb677b036e34cc9fe1bc698c0178",
            "commit_summary": "Normalize @author and @version tag order and add missing @version tags.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@165708 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2005-05-02"
        },
        {
            "commit_id": 167,
            "hash": "5d856dd285cad2a89b6e33f9e93092eab45872c2",
            "commit_summary": "Addresses issue 37894.  Order of static initialization causes\nan NPE when trying to use static US_ENGLISH in Soundex.\nIssue was found by Reggie Riser.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@366897 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testNewInstance",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance"
                },
                {
                    "function name": "testUsEnglishStatic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"
                }
            ],
            "date": "2006-01-07"
        },
        {
            "commit_id": 168,
            "hash": "dac3995e46f798ea7256ad940cfd8fcf7c578b5b",
            "commit_summary": "Javadoc: Changed 'ascii' to 'ASCII', since it is an acronym for American Standard Code for Information Interchange.\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@368768 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2006-01-13"
        },
        {
            "commit_id": 169,
            "hash": "735582af110b5939844936ee63b2eef9c5c321ea",
            "commit_summary": "Change \"Copyright 2001-2005\" to \"Copyright 2001-2006\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@437231 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [],
            "date": "2006-08-26"
        },
        {
            "commit_id": 170,
            "hash": "b5525f4f214b42c0fb3fb4377aaf07342821a704",
            "commit_summary": "Change \"Copyright 2001-2005\" to \"Copyright 2001-2006\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@437232 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/CharacterEncodingNames.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2006-08-26"
        },
        {
            "commit_id": 171,
            "hash": "c50e0968c219085d042c8d64d30c716830a3622c",
            "commit_summary": "Modified the test to expect an empty string if the 'fancy' character passed in is not considered a letter by the JVM. See Issue CODEC-51\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@476031 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                }
            ],
            "date": "2006-11-17"
        },
        {
            "commit_id": 172,
            "hash": "15194a9e772c4929ff008333d3537221095d6237",
            "commit_summary": "Fixed the copyright header\n\ngit-svn-id: https://svn.apache.org/repos/asf/jakarta/commons/proper/codec/trunk@480406 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/CharacterEncodingNames.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2006-11-29"
        },
        {
            "commit_id": 173,
            "hash": "71e7260746a902d1070a190fd78bd560464860b9",
            "commit_summary": "stringEncoder variable is now final to tighten it up, the empty constructor is deprecated as it will only lead to a broken NPE producing comparator and I've removed the unnecessary casting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@582444 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.compare"
                }
            ],
            "date": "2007-10-06"
        },
        {
            "commit_id": 174,
            "hash": "f06489969a4cdf9578cf5599d4c72c2eae74d40f",
            "commit_summary": "Privatised a bunch of static variables that are not used anywhere else in the package\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@582445 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2007-10-06"
        },
        {
            "commit_id": 175,
            "hash": "bf82e029a98865bf4228c6f4dc091bd5deb69f3c",
            "commit_summary": "Made a bunch of constants final\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@582446 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2007-10-06"
        },
        {
            "commit_id": 176,
            "hash": "99776883a5b3ed57538302a0de1cc5d238a5afbf",
            "commit_summary": "Turned some variables that were effectively constants into private-static-finals\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@582447 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isVowel"
                }
            ],
            "date": "2007-10-06"
        },
        {
            "commit_id": 177,
            "hash": "fb5e3f403b8483627d9661fcf2985e78c8640c83",
            "commit_summary": "Made the soundexMapping variable final as it's only ever set once\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@582448 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [],
            "date": "2007-10-06"
        },
        {
            "commit_id": 178,
            "hash": "e65d67e1c41746e811503255fadacef6de645eec",
            "commit_summary": "[#CODEC-57] Metaphone.metaphone(String) returns an empty string when passed the word \"why\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@588074 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testWhy",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testWhy"
                },
                {
                    "function name": "testWordsWithCIA",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"
                }
            ],
            "date": "2007-10-24"
        },
        {
            "commit_id": 179,
            "hash": "a50a203248662d2b4fe6f5b6952d3066ab3ab8ba",
            "commit_summary": "Applying Sebb's fix from CODEC-56, along with a test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@589052 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                }
            ],
            "date": "2007-10-27"
        },
        {
            "commit_id": 180,
            "hash": "7c80e367cb599ec813f3d9bb42a6d2b36b75644c",
            "commit_summary": "Add JIRA links to Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@589423 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testNewInstance",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance"
                },
                {
                    "function name": "testUsEnglishStatic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"
                }
            ],
            "date": "2007-10-28"
        },
        {
            "commit_id": 181,
            "hash": "f5185b0229f93097be2433386c2d4022e70545d1",
            "commit_summary": "[CODEC-61] Base64.EncodeBase64() throws NegativeArraySizeException on large files.\nThrows IllegalArgumentException when the input array needs an output array bigger than Integer.MAX_VALUE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@618419 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "discardWhitespace",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardWhitespace"
                }
            ],
            "date": "2008-02-04"
        },
        {
            "commit_id": 182,
            "hash": "fd997bab3ba6b3599d9236dfbfa6f0bc80b4c3b0",
            "commit_summary": "Removing tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@618557 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                }
            ],
            "date": "2008-02-05"
        },
        {
            "commit_id": 183,
            "hash": "0752e9ac06e72b67554450877251e2eca87c504f",
            "commit_summary": "Applying CODEC-52; Niklas Gustavsson's enhancement to have InputStream variants for DigestUtil's digest methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634903 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.setUp"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testMd5Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex"
                }
            ],
            "date": "2008-03-08"
        },
        {
            "commit_id": 184,
            "hash": "f6336648d893f0ad455d53ab85f82128937fa41c",
            "commit_summary": "Adding Chris Black's patch from CODEC-40 adding BigInteger support to Base64. Still needs edge case testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634904 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encodeInteger",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "decodeInteger",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeInteger"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "testCodeIntegerEdgeCases",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                }
            ],
            "date": "2008-03-08"
        },
        {
            "commit_id": 185,
            "hash": "66555de56715ccb185dee4dd2b25b1e93cc5c73e",
            "commit_summary": "Applying my second patch from CODEC-60; adding the Caverphone 2.0 algorithm\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634911 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "caverphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "Caverphone",
                    "function params": [],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.Caverphone"
                },
                {
                    "function name": "CaverphoneTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "CaverphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.CaverphoneTest"
                },
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testWikipediaExamples"
                },
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.suite"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.makeEncoder"
                }
            ],
            "date": "2008-03-08"
        },
        {
            "commit_id": 186,
            "hash": "10dc7484de512026681252138023e017eeba87f9",
            "commit_summary": "Examples for 2.0 are from the spec, not wikipedia\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634912 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpecificationExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"
                }
            ],
            "date": "2008-03-08"
        },
        {
            "commit_id": 187,
            "hash": "751061272644721cd1f27fc6ca2ec3acef36bd47",
            "commit_summary": "Fixing license header to not have a trailing space on the last line [checkstyle was warning about it as a few didn't have said trailing space\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634915 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/AllTests.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [],
            "date": "2008-03-08"
        },
        {
            "commit_id": 188,
            "hash": "de10106801ea43d169a5b58285a9235ff382981c",
            "commit_summary": "Checkstyle fixes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634916 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "toIntegerBytes",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                }
            ],
            "date": "2008-03-08"
        },
        {
            "commit_id": 189,
            "hash": "7882213ce2fde3ef9b990c494f47aeae7b6f6946",
            "commit_summary": "Oops; use replaceAll, not replace - stop trying to optimize for ^\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634917 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java"
            ],
            "functions": [
                {
                    "function name": "caverphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.caverphone"
                }
            ],
            "date": "2008-03-08"
        },
        {
            "commit_id": 190,
            "hash": "65216aecdc6a6a69f3afdd424f60d6617b7089ec",
            "commit_summary": "Stop the javadoc warning from @todo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@634918 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2008-03-08"
        },
        {
            "commit_id": 191,
            "hash": "628ece3a5b40c65bc114cb2ffb219599b19db380",
            "commit_summary": "CODEC-64 set svn:eol-style to native and remove svn:executable property - thanks to Benjamin Bentmann for the patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@651573 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [],
            "date": "2008-04-25"
        },
        {
            "commit_id": 192,
            "hash": "9c0cabead7cf075308b11362172ae1a48d41321c",
            "commit_summary": "Modifying the unit test for CODEC-57 to test for empty string, and added a note to the Metaphone javadoc that it does not match the PHP or Perl variants\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@651873 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testWhy",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testWhy"
                }
            ],
            "date": "2008-04-27"
        },
        {
            "commit_id": 193,
            "hash": "52d82d1dfff8c2b2ded9d843e0b03017af6d747c",
            "commit_summary": "Applying Benjamin Bentmann's patch from CODEC-65, which changes the various encoders to use a locale when lowercasing. The encoders all assume the English locale, so when running in non English locales the default toLowerCase sometimes does not work as the encoder expects. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@651874 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java"
            ],
            "functions": [
                {
                    "function name": "caverphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "cleanInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.cleanInput"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.java.org.apache.commons.codec.language.SoundexUtils.clean"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence"
                }
            ],
            "date": "2008-04-27"
        },
        {
            "commit_id": 194,
            "hash": "dce4ad64d1a0b9b62eea667ba4c7c58cea435d2d",
            "commit_summary": "Added a link to CODEC-57 in the javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@651875 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2008-04-27"
        },
        {
            "commit_id": 195,
            "hash": "0148ae493e7a0462e13ea595f2be1dfcc819adba",
            "commit_summary": "Adding unit test for CODEC-68. Passes. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@653098 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodec68"
                }
            ],
            "date": "2008-05-03"
        },
        {
            "commit_id": 196,
            "hash": "d911f5f22724170639c9968581764b1a84017b52",
            "commit_summary": "Remove tabs\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@658834 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "cleanInput",
                    "function params": [
                        "input"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.cleanInput"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "isLastChar",
                    "function params": [
                        "wdsz",
                        "n"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.isLastChar"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testSetMaxLengthWithTruncation",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"
                },
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "testDiscardOfSCEOrSCIOrSCY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"
                },
                {
                    "function name": "testTIOAndTIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"
                },
                {
                    "function name": "testTranslateOfSCHAndCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"
                },
                {
                    "function name": "testDiscardOfSilentHAfterG",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"
                },
                {
                    "function name": "testTCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTCH"
                },
                {
                    "function name": "testMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testMetaphone"
                },
                {
                    "function name": "testTranslateToJOfDGEOrDGIOrDGY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"
                },
                {
                    "function name": "testPHTOF",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testPHTOF"
                },
                {
                    "function name": "testSHAndSIOAndSIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"
                },
                {
                    "function name": "testWordEndingInMB",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testDifference"
                },
                {
                    "function name": "testBadCharacters",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testBadCharacters"
                }
            ],
            "date": "2008-05-21"
        },
        {
            "commit_id": 197,
            "hash": "e2df85024e2ab99645a788b4b2836ba1cfdb87f5",
            "commit_summary": "PR: CODED-69\nSubmitted-By: Julius Davies <juliusdavies@gmail.com>\nAdded the Base64InputStream and the Base64OutputStream.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669256 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "resizeBuf",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.resizeBuf"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "avail",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.avail"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "isBase64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "setInitialBuffer",
                    "function params": [
                        "out",
                        "outPos",
                        "outAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.setInitialBuffer"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.hasData"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.readResults"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octect"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "Base64InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "i"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.write"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.close"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "Base64InputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.Base64InputStreamTest"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "Base64OutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.Base64OutputStreamTest"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.streamToBytes"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.resizeArray"
                },
                {
                    "function name": "fill",
                    "function params": [
                        "buf",
                        "offset",
                        "in"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.fill"
                }
            ],
            "date": "2008-06-18"
        },
        {
            "commit_id": 198,
            "hash": "fa0f64dfc26fc48d99a67cb74f641198178dfbc3",
            "commit_summary": "Unnecessary cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669572 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2008-06-19"
        },
        {
            "commit_id": 199,
            "hash": "ce8a31b1ce8a1a555642b4e05387a5b6b414a688",
            "commit_summary": "CODEC-69 (part) - make Base64 constructors public\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669616 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2008-06-19"
        },
        {
            "commit_id": 200,
            "hash": "16541c65bc50f8f303000c727469af7121df2237",
            "commit_summary": "Remove some more unnecessary casts\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669667 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "discardWhitespace",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardWhitespace"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2008-06-19"
        },
        {
            "commit_id": 201,
            "hash": "6f16107c7ebfdaeb23d6bc7a0f01bdc992557074",
            "commit_summary": "Make the private variable final (thread safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669668 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                }
            ],
            "date": "2008-06-19"
        },
        {
            "commit_id": 202,
            "hash": "40446e524e0fc7591f0f9879ab8c994827175075",
            "commit_summary": "A few more tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669672 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testDiscardWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                }
            ],
            "date": "2008-06-19"
        },
        {
            "commit_id": 203,
            "hash": "33f9ab90afd763002d61f96961d18641b2931f9f",
            "commit_summary": "Clarify use of lineLength <=0\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669680 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2008-06-19"
        },
        {
            "commit_id": 204,
            "hash": "6bc22c07f7036d3bf8031aabf3ed3ac7dbb17e3f",
            "commit_summary": "No need for the test data to be public (so reduce chances of damage to it)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669686 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [],
            "date": "2008-06-19"
        },
        {
            "commit_id": 205,
            "hash": "a0c1b191fa653c664f966bd12bf2fb929a382a53",
            "commit_summary": "Fix some typos. Tidy test cases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669695 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                }
            ],
            "date": "2008-06-19"
        },
        {
            "commit_id": 206,
            "hash": "38dfda04ba5985e228d3f9be61bf9a1fb9481b35",
            "commit_summary": "Add constructor test. \n[This will fail currently]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669748 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 207,
            "hash": "a9f3aedce1578a6b5d8831718ca218a5e9b38770",
            "commit_summary": "Some more lineSeparator tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669749 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 208,
            "hash": "d3dee54746095efd4a5e15fdc0bbd066c357aed2",
            "commit_summary": "Fix lineSeparator check\nOctect => Octet\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669751 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctect"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "containsBase64Byte",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.containsBase64Byte"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octect"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 209,
            "hash": "d0d8b84cf19eda43894eebf899db6861de852786",
            "commit_summary": "Make private fields final (thread safety)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669755 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "BCodec",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "QCodec",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.QCodec"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 210,
            "hash": "5e2c0d15f5960a509275a5cb13a49f356e41a02b",
            "commit_summary": "Might as well make the isBase64(byte) method public - it may be useful\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669759 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 211,
            "hash": "d0ff33a67f6393e4d50d82c5f4db8506a622bd47",
            "commit_summary": "We don't (yet) support marking the Base64 stream\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@669993 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java"
            ],
            "functions": [
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.markSupported"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 212,
            "hash": "a8502b5f546eddda66cc5d75c3c4552ea81c9ef5",
            "commit_summary": "Move private static data to start of module.\nUse constants for masks\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@670039 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2008-06-20"
        },
        {
            "commit_id": 213,
            "hash": "8494bec8ef46972ddd7f7fcfc488592380550b03",
            "commit_summary": "Update the Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@670113 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                }
            ],
            "date": "2008-06-21"
        },
        {
            "commit_id": 214,
            "hash": "98a85c3bfd859e3bcb6670398f3169ff16edcf4e",
            "commit_summary": "Some more Base64 tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@670116 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testPairs"
                }
            ],
            "date": "2008-06-21"
        },
        {
            "commit_id": 215,
            "hash": "5b74e6da63b1f0ad9972c2ca3f85abcb1080fb53",
            "commit_summary": "Test truncated padding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@670118 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                }
            ],
            "date": "2008-06-21"
        },
        {
            "commit_id": 216,
            "hash": "d09530a36ddb367da4d47c487496b68d999f7837",
            "commit_summary": "Applying Sebb's patch - CODEC-70 - to improve thread safety\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@672992 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "URLCodec",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                }
            ],
            "date": "2008-07-01"
        },
        {
            "commit_id": 217,
            "hash": "b7832d438495a0cd2c14ccf663f6f1d465fc1551",
            "commit_summary": "Applying Sebb's patch from CODEC-71, improving the memory consumption of isArrayByteBase64(). I've also deprecated the discardWhitespace method as nothing uses it now\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@672993 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isWhiteSpace"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                }
            ],
            "date": "2008-07-01"
        },
        {
            "commit_id": 218,
            "hash": "2d1d34cc11798e71ebb1ce1869a30ece43ff1a47",
            "commit_summary": "Fixing typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@674260 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2008-07-06"
        },
        {
            "commit_id": 219,
            "hash": "1b5b070a266b0e1f70302a8d4448d318d7a39a8e",
            "commit_summary": "Another typo ;-)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@674285 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2008-07-06"
        },
        {
            "commit_id": 220,
            "hash": "df9d1bbcdf99349c471d934ab9df4cc7eae58c59",
            "commit_summary": "Simplify case statement and avoid drop thru\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@674288 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2008-07-06"
        },
        {
            "commit_id": 221,
            "hash": "cad66447478d7d29bc04b3ce6a9049d6912c11b4",
            "commit_summary": "Copy input byte array to prevent subsequent external changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@674294 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                }
            ],
            "date": "2008-07-06"
        },
        {
            "commit_id": 222,
            "hash": "a3fbcb04e2c9f0f21ce4caeb68cfab570be6b6c0",
            "commit_summary": "Inner class can be static\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@674297 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [],
            "date": "2008-07-06"
        },
        {
            "commit_id": 223,
            "hash": "94a4db4fef14db8f1b92dc5191cbdd8c2c1b2101",
            "commit_summary": "Misspelling in comments 'hexidecimal' -> 'hexadecimal'\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@736096 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2009-01-20"
        },
        {
            "commit_id": 224,
            "hash": "981c0002d5accb9ebc056b7a34025fd814c4e17f",
            "commit_summary": "[CODEC-74] Allow for uppercase letters as the output of Hex.encodeHex()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@736102 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "testHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"
                }
            ],
            "date": "2009-01-20"
        },
        {
            "commit_id": 225,
            "hash": "cb63f4a959e30de6882b20af10d189c7307a6da2",
            "commit_summary": "Applying sebb's patch from CODEC-72 - fixing the char[] API of Soundex/RefinedSoundex, which shouldn't be used externally as they are the defaults. He's replaced them with Strings for the external use and copying of inputted char[]s\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@757676 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "testNewInstance2",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2"
                },
                {
                    "function name": "testNewInstance3",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3"
                },
                {
                    "function name": "testNewInstance",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance"
                },
                {
                    "function name": "testNewInstance3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance3"
                },
                {
                    "function name": "testNewInstance",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance"
                },
                {
                    "function name": "testNewInstance2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance2"
                },
                {
                    "function name": "testUsEnglishStatic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"
                }
            ],
            "date": "2009-03-24"
        },
        {
            "commit_id": 226,
            "hash": "cdcca2e6c4ee0d8d7aa92163cac6aa4b551ef184",
            "commit_summary": "Adding null test for CODEC-40\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@766213 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                }
            ],
            "date": "2009-04-18"
        },
        {
            "commit_id": 227,
            "hash": "dbf200d03744364dedd37de6437e06db48189d9c",
            "commit_summary": "Missing 'this.' qualifier to match the file.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793391 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                }
            ],
            "date": "2009-07-12"
        },
        {
            "commit_id": 228,
            "hash": "6520641c1051abe4c7ca9f87068be8832ae61a56",
            "commit_summary": "Fix javadoc warning for Java 1.4.2 developers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793396 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2009-07-12"
        },
        {
            "commit_id": 229,
            "hash": "f447e02651e5d68166f5be85751d41faddfa72c6",
            "commit_summary": "Fix issue reported by (Maven) CheckStyle: Line does not match expected header line of ' * '.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793673 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [],
            "date": "2009-07-13"
        },
        {
            "commit_id": 230,
            "hash": "875e5cfbc1a13550387262293ccdf450bded8b56",
            "commit_summary": "Clean up: Unnecessarily nested statement.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793703 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                }
            ],
            "date": "2009-07-13"
        },
        {
            "commit_id": 231,
            "hash": "2f7454a01e4c2992bffc3d86137e632e80c5027f",
            "commit_summary": "[#CODEC-75] Make Base64 URL-safe. Applied patch (https://issues.apache.org/jira/secure/attachment/12408898/codec75.patch) and make other clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793704 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isWhiteSpace"
                },
                {
                    "function name": "avail",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.avail"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "isUrlSafe",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isUrlSafe"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64URLSafe",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafe"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "discardWhitespace",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardWhitespace"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "discardNonBase64",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.discardNonBase64"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.hasData"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.readResults"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUUID"
                }
            ],
            "date": "2009-07-13"
        },
        {
            "commit_id": 232,
            "hash": "b8c2d9d9dc9aab45f83cf49ac93cfa8546e4c08e",
            "commit_summary": "[CODEC-77] Base64 bug with empty input (new byte[0])\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793734 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                }
            ],
            "date": "2009-07-13"
        },
        {
            "commit_id": 233,
            "hash": "4449af5be0d81e35daef251055eca4cbfffd1d5c",
            "commit_summary": "[CODEC-77] Base64 bug with empty input (new byte[0])\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793736 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [],
            "date": "2009-07-13"
        },
        {
            "commit_id": 234,
            "hash": "21a3b8795df1ac6008a592911afaa5118ad3061a",
            "commit_summary": "Added @since 1.4 tags.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793742 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2009-07-13"
        },
        {
            "commit_id": 235,
            "hash": "100d531386e69f70bc73a039b4a5776e4ab36cbf",
            "commit_summary": "Added @since 1.4 tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793770 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [],
            "date": "2009-07-14"
        },
        {
            "commit_id": 236,
            "hash": "356aee756a4b13c717392032cc70ebfeba2ee0e6",
            "commit_summary": "Added @since 1.4 tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@793772 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                }
            ],
            "date": "2009-07-14"
        },
        {
            "commit_id": 237,
            "hash": "eda7f6f9611bd8cf4c1e71f1e16c44611cbfbe7b",
            "commit_summary": "Clirr detected change from public to private. Revert in preparation for 1.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794025 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [],
            "date": "2009-07-14"
        },
        {
            "commit_id": 238,
            "hash": "ee2d79cddbace4618e7ae31f07343f804d800962",
            "commit_summary": "Clirr detected change from public to private. Revert in preparation for 1.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794026 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2009-07-14"
        },
        {
            "commit_id": 239,
            "hash": "b40cb99ccd4407f03d5b8bdf818069c57495b846",
            "commit_summary": "Fix Clirr issues. The next major release may break compatibility and make the changed fields final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794341 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2009-07-15"
        },
        {
            "commit_id": 240,
            "hash": "8c6b42a65d989469b6e49aeabb1877bae1dc0fd1",
            "commit_summary": "[#CODEC-75] Make Base64 URL-safe. Remove unused method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794480 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2009-07-16"
        },
        {
            "commit_id": 241,
            "hash": "2f76d9d334ac7470d908ab59feab58249f6ea8ac",
            "commit_summary": "[CODEC-78] Base64: Improve Code Coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794515 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "urlSafe"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.randomData"
                }
            ],
            "date": "2009-07-16"
        },
        {
            "commit_id": 242,
            "hash": "584394545559a895bdfe127f3d729eb4841994c6",
            "commit_summary": "Improving code coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794525 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testConstructable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"
                },
                {
                    "function name": "testSoundexUtilsNullBehaviour",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"
                },
                {
                    "function name": "testSoundexUtilsConstructable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"
                }
            ],
            "date": "2009-07-16"
        },
        {
            "commit_id": 243,
            "hash": "5b95cdf05da5461c7532f4ba4fcf0b6db488b26d",
            "commit_summary": "Adding note on unexecutable code\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794528 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2009-07-16"
        },
        {
            "commit_id": 244,
            "hash": "2a29c1fe3ed16cdda533ca23dbe4f350ab6801c0",
            "commit_summary": "Adding a pair of notes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@794532 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                }
            ],
            "date": "2009-07-16"
        },
        {
            "commit_id": 245,
            "hash": "6a43ce7aa8fb6be26fd0559b189dce704a0a32f5",
            "commit_summary": "[CODEC-78] Base64 classes: Improve Code Coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@795228 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.write"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.bytesContain"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "urlSafe"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.randomData"
                }
            ],
            "date": "2009-07-17"
        },
        {
            "commit_id": 246,
            "hash": "93333139710428b579e9b9bfb22a431028df4feb",
            "commit_summary": "[CODEC-58] Character set used by Base64 not documented. Apply modified patch. Better Javadocs. Changes to private field \"buf\" rename to \"buffer\". Rename private method \"resizeBuf\" to \"resizeBuffer\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@795284 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [
                {
                    "function name": "avail",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.avail"
                },
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "setInitialBuffer",
                    "function params": [
                        "out",
                        "outPos",
                        "outAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.setInitialBuffer"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.hasData"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.resizeBuffer"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.readResults"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                }
            ],
            "date": "2009-07-18"
        },
        {
            "commit_id": 247,
            "hash": "4d67ff229be56b150180cd6652d118075d171e05",
            "commit_summary": "Moved package private class CharsetEncodingNames to the main package under the name RequiredCharsetNames. \"Charset\" reflects the name used in the JRE instead of \"encoding\". Updated string literals for required charset names (\"UTF-8\", \"US-ASCII\", etc) with references to new class static constants. Also created the new class StringBytesUtils (need a better name?) to wrap calls to String#getBytes(String) and String#String(byte[],String) for required charset names, such that it is not required for call sites to catch or re-throw UnsupportedEncodingException since Java requires 6 charsets to be present.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@796172 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "newIllegalStateException",
                    "function params": [
                        "charsetName",
                        "e"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newIllegalStateException"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16Be"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16Le"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16Le"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charsetName"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newString"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf8"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUsAscii"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf8"
                },
                {
                    "function name": "getSupportedBytes",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getSupportedBytes"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16Be"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringIso8859_1"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUsAscii"
                },
                {
                    "function name": "StringBytesUtils",
                    "function params": [],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.StringBytesUtils"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesIso8859_1"
                },
                {
                    "function name": "BCodec",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "QCodec",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "URLCodec",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUsAscii"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf16"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf16Be"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf8"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf16Le"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testTripletsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTripletsChunked"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTriplets"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testSingletonsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletonsChunked"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodec68"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testDiscardWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetSupportedBytes",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetSupportedBytes"
                },
                {
                    "function name": "testGetSupportedBytesBadEnc",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetSupportedBytesBadEnc"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testNewStringUtf16",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf16"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf16"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testNewStringUsAscii",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUsAscii"
                },
                {
                    "function name": "testNewStringUtf8",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf8"
                },
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testNewString",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewString"
                },
                {
                    "function name": "testNewStringBadEnc",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringBadEnc"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf16Le"
                },
                {
                    "function name": "catch",
                    "function params": [
                        "e"
                    ],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.catch"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                }
            ],
            "date": "2009-07-21"
        },
        {
            "commit_id": 248,
            "hash": "d6ce22b75c7d06e24dc2994529dfa79a09016f04",
            "commit_summary": "set svn:eol-style to native\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@796922 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.markSupported"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "i"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.write"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.close"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "newIllegalStateException",
                    "function params": [
                        "charsetName",
                        "e"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newIllegalStateException"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16Be"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16Le"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16Le"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charsetName"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newString"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf8"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUsAscii"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf8"
                },
                {
                    "function name": "getSupportedBytes",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getSupportedBytes"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16Be"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringIso8859_1"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUsAscii"
                },
                {
                    "function name": "StringBytesUtils",
                    "function params": [],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.StringBytesUtils"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesIso8859_1"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUsAscii"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf16Be"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf16Le"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf16"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testUtf8"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "Base64InputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.Base64InputStreamTest"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "Base64OutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.Base64OutputStreamTest"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "fill",
                    "function params": [
                        "buf",
                        "offset",
                        "in"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.fill"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.resizeArray"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "urlSafe"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.randomData"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.bytesContain"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.streamToBytes"
                },
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetSupportedBytes",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetSupportedBytes"
                },
                {
                    "function name": "testGetSupportedBytesBadEnc",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetSupportedBytesBadEnc"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testNewStringUtf16",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf16"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf16"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testNewStringUsAscii",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUsAscii"
                },
                {
                    "function name": "testNewStringUtf8",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf8"
                },
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testNewString",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewString"
                },
                {
                    "function name": "testNewStringBadEnc",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringBadEnc"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.testNewStringUtf16Le"
                },
                {
                    "function name": "catch",
                    "function params": [
                        "e"
                    ],
                    "file name": "StringBytesUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringBytesUtilsTest.catch"
                }
            ],
            "date": "2009-07-23"
        },
        {
            "commit_id": 249,
            "hash": "0f69bbfd70f349bf2b072b3ff001a47a8eebc0b8",
            "commit_summary": "Add ASF license Headers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@796923 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java"
            ],
            "functions": [],
            "date": "2009-07-23"
        },
        {
            "commit_id": 250,
            "hash": "165d33f8c676d4b5063d1899beab3a352afb7d82",
            "commit_summary": "[#CODEC-80] Regression: Base64.encode(chunk=true) has bug when input length is multiple of 76.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797284 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 251,
            "hash": "fab9e0f107a929697589618995f259992711d263",
            "commit_summary": "Fix some comments and get to 100% line coverage. Branch coverage is still 91%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797293 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testTripletsChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTripletsChunked"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testTriplets",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testTriplets"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodec68"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testRfc2045Section2Dot1CrLfDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section2Dot1CrLfDefinition"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "getRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.getRandom"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testDiscardWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testCodeIntegerEdgeCases",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeIntegerEdgeCases"
                },
                {
                    "function name": "testRfc2045Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 252,
            "hash": "69187b5e3a500878311f2b67ef7385b385845fb6",
            "commit_summary": "Added @since 1.4\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797295 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringBytesUtils.java"
            ],
            "functions": [],
            "date": "2009-07-24"
        },
        {
            "commit_id": 253,
            "hash": "fe76026a9954af5ea91083b3b1b5f05f18fd581b",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797296 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringBytesUtils.java"
            ],
            "functions": [],
            "date": "2009-07-24"
        },
        {
            "commit_id": 254,
            "hash": "7028095497c29edde3c0f320080f7d4aa5b22c98",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797297 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 255,
            "hash": "a07a2f443a5177ad43b3a0e4e803fc55870af13d",
            "commit_summary": "Update Javadoc reference to point to Java 1.4.2 Javadoc on Sun's site (from 1.3.)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797301 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/RequiredCharsetNames.java",
                "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2009-07-24"
        },
        {
            "commit_id": 256,
            "hash": "b42904f491b0f736b112544fa256d7af5955be5a",
            "commit_summary": "Javadoc clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797500 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2009-07-24"
        },
        {
            "commit_id": 257,
            "hash": "372c15eb25b6087d13bc4f107e9a048e69a2a478",
            "commit_summary": "Checkstyle fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797632 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 258,
            "hash": "fdc79f72dd25b7564aa2ba1c4ad69fa51c54f0f8",
            "commit_summary": "Apply consistent format for catch clauses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797664 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 259,
            "hash": "f9867d5a6169931b7c366735dbc219cc44234aff",
            "commit_summary": "Follow Sun's naming, renamed oddly named 'pMessage' to 'message'. C heritage?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797666 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/DecoderException.java"
            ],
            "functions": [
                {
                    "function name": "DecoderException",
                    "function params": [
                        "pMessage"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 260,
            "hash": "26ad9f259e776eb5cea3c283affe385c71ed4486",
            "commit_summary": "Follow Sun's naming, renamed oddly named 'pMessage' to 'message'. C heritage?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797667 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/EncoderException.java"
            ],
            "functions": [
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "pMessage"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 261,
            "hash": "71191d319734c1ddb804a0ffdcb318db41ff619b",
            "commit_summary": "Refactor comoon code. URLCodec test coverage now 100%/100%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797670 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "toCharacterDigit",
                    "function params": [
                        "b"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.toCharacterDigit"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 262,
            "hash": "0f1e8c3acefeaa0d0c0f3e78a1abd7620c9c757f",
            "commit_summary": "Refactor comoon code. URLCodec test coverage now 100%/100%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797671 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 263,
            "hash": "9137228b9ec7e4f166e8940933420fe62071254c",
            "commit_summary": "Since we are using the trick of catching an ArrayIndexOutOfBoundsException instead of checking bounds, let's keep the exception when we rethrow a DecoderException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797672 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 264,
            "hash": "695754bb76162e2349c8a6ebb4b29aef0bd6fe8d",
            "commit_summary": "Now that we are on Java 1.4, we can save the original exception when we rethrow another exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797673 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 265,
            "hash": "91a01c9c6c0078bbc055a1e05b705edcbefb247f",
            "commit_summary": "Refactor common logic between URLCodec and QuotedPrintableCodec. Code coverage 100%/100% for both classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797687 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "digit16",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.java.org.apache.commons.codec.net.Utils.digit16"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 266,
            "hash": "f7e1454b66dfba0a376ad00162eb741db9bfe7a8",
            "commit_summary": "Now that we are on Java 1.4, we can save the original exception when we re-throw another exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797688 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 267,
            "hash": "3210069a57d060b1aaec24af66042798c8942ef4",
            "commit_summary": "The prefix 'java.lang.' is not required to refer to this special package. This is the only package this rule applies to.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797690 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/Decoder.java",
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/java/org/apache/commons/codec/language/Metaphone.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                }
            ],
            "date": "2009-07-24"
        },
        {
            "commit_id": 268,
            "hash": "2eef8dee31bbaa10ffb1264fbbe9aba1bc92c45b",
            "commit_summary": "Javadocs. Make our exceptions fit the Java 1.4 pattern. 100%/100% line/branch code coverage for the main package.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java"
            ],
            "functions": [
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [],
                    "file name": "DecoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "testConstructorThrowable",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"
                },
                {
                    "function name": "testConstructor0",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructor0"
                },
                {
                    "function name": "testConstructorStringThrowable",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"
                },
                {
                    "function name": "testConstructorString",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructorString"
                },
                {
                    "function name": "testConstructorString",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructorString"
                },
                {
                    "function name": "testConstructorStringThrowable",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"
                },
                {
                    "function name": "testConstructorThrowable",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"
                },
                {
                    "function name": "testConstructor0",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructor0"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "RequiredCharsetNamesTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "full name": "src.test.org.apache.commons.codec.RequiredCharsetNamesTest.testConstructor"
                }
            ],
            "date": "2009-07-25"
        },
        {
            "commit_id": 269,
            "hash": "a5973f330ff30773c2101343c3d6144cede156ed",
            "commit_summary": "ASF header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797810 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/org/apache/commons/codec/EncoderExceptionTest.java"
            ],
            "functions": [],
            "date": "2009-07-25"
        },
        {
            "commit_id": 270,
            "hash": "a952f092987217322ceb6ab1d559d0612d02a778",
            "commit_summary": "Renamed RequiredCharsetNames to CharEncoding to match [lang]. Constant name and values are the same.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797857 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16Be"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16Le"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf16Le"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUtf8"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf8"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringUsAscii"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUtf16Be"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.newStringIso8859_1"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesUsAscii"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringBytesUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringBytesUtils.getBytesIso8859_1"
                },
                {
                    "function name": "BCodec",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "QCodec",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "URLCodec",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testConstructor"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testUtf16Le"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testIso8859_1"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testUtf8"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testUtf16"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharEncodingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/RequiredCharsetNamesTest.java",
                    "file new path": "src/test/org/apache/commons/codec/CharEncodingTest.java",
                    "full name": "src.test.org.apache.commons.codec.CharEncodingTest.testUsAscii"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                }
            ],
            "date": "2009-07-25"
        },
        {
            "commit_id": 271,
            "hash": "dd61a2d5258f831bb16a4ef1b94e74048d69058f",
            "commit_summary": "Javadoc correction\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@797938 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2009-07-26"
        },
        {
            "commit_id": 272,
            "hash": "20a88d9b49beda71ddee69af92872716fd00f13a",
            "commit_summary": "- Applied patch for [CODEC-81] production pretty much unchanged. \n- Applied patch for [CODEC-81] tests and split one new unit test method into two tests. One for URL-safe and another for normal processing.\n- Renamed StringBytesUtils to StringUtils\n- Added missing @return tags to StringUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798333 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "getEncodeLength",
                    "function params": [
                        "pArray",
                        "chunkSize",
                        "chunkSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.getEncodeLength"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Be"
                },
                {
                    "function name": "getSupportedBytes",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getSupportedBytes"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newStringUsAscii"
                },
                {
                    "function name": "StringUtils",
                    "function params": [],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.StringUtils"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf8"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newStringIso8859_1"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newStringUtf8"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Le"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringBytesUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testNewStringBadEnc",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"
                },
                {
                    "function name": "testGetSupportedBytes",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytes"
                },
                {
                    "function name": "testNewStringUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testNewStringUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"
                },
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testNewString",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewString"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testGetSupportedBytesBadEnc",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetSupportedBytesBadEnc"
                },
                {
                    "function name": "testNewStringUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"
                },
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringBytesUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"
                }
            ],
            "date": "2009-07-27"
        },
        {
            "commit_id": 273,
            "hash": "31a3522f4eaf9a94e11fba52fab15e34b70906cf",
            "commit_summary": "We could make the constructor private but there does not seem to be a point to jumping through extra code hoops to restrict instantiation right now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798339 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/test/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testConstructor"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 274,
            "hash": "95de62c7b90ad22b4051f3d4f61d99cec59ec487",
            "commit_summary": "Use existing ESCAPE_CHAR instead of magic char.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798416 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 275,
            "hash": "02a1e84c122137ab0ad9a7ffde9525f4822c5c3c",
            "commit_summary": "Use constants instead of literals.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798420 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 276,
            "hash": "81b6c1171a695a42b72220578d50afb3a43dff2b",
            "commit_summary": "Remove unnecessary code. Changed test from:\nif ((to == -1) || (to == termnator)) {\nto:\nif (to == termnator) {\nsince we are guaranteed to find the separator because we have tested for its presence at the begining of the method.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798422 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 277,
            "hash": "00e030595183922b5157358ec502f4ce4f168753",
            "commit_summary": "Remove unnecessary code. Changed test from:\nif ((to == -1) || (to == termnator)) {\nto:\nif (to == termnator) {\nsince we are guaranteed to find the separator because we have tested for its presence at the beginning of the method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798427 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid"
                },
                {
                    "function name": "assertExpectedDecoderException",
                    "function params": [
                        "s"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 278,
            "hash": "85daf8002a25291e798e4fb9e7b6e37c2a2ac4ab",
            "commit_summary": "Fix typo in variable name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798428 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 279,
            "hash": "71a7599e98112c90e3d79518eedf862bd93e4cdd",
            "commit_summary": "Refactor common checks in a method and bring code coverage to 100%/100% line/branch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798433 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "isEmpty",
                    "function params": [
                        "array"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BinaryCodec.isEmpty"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes"
                },
                {
                    "function name": "testFromAsciiByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"
                },
                {
                    "function name": "testDecodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"
                },
                {
                    "function name": "testFromAsciiCharArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray"
                },
                {
                    "function name": "testEncodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 280,
            "hash": "62e27b40aaa8ceade29ef0115c596f534e17ddbe",
            "commit_summary": "Bring code coverage to 100%/100% line/branch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798436 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "UtilsTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/net/UtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.UtilsTest.testConstructor"
                }
            ],
            "date": "2009-07-28"
        },
        {
            "commit_id": 281,
            "hash": "2957b30b297caad22f4fcc3c07cf70368dd1282c",
            "commit_summary": "Oops, forgot to extend TestCase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798449 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 282,
            "hash": "4a2fa90d456a6c6bd1bf4febf4692ead46a38a20",
            "commit_summary": "Small change to kick in SVN auto-props for @version $Id $\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798594 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 283,
            "hash": "bdf8b5662ee5c1c7bc2d1f7cede945709b27a64e",
            "commit_summary": "Javadoc. SVN auto-props for @version $Id $\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798595 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/Utils.java",
                "src/test/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 284,
            "hash": "93dcc369bdf4423ec7af521d730ecf05f319d974",
            "commit_summary": "Set SVN property for @version $Id $\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798605 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 285,
            "hash": "1cb3d5a7c83ec4309582ea7c70b783f4b97a71d0",
            "commit_summary": "Set SVN property for @version $Id $\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798607 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/test/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 286,
            "hash": "4ea5032f95075b87cb8bd68681e4182661e303f1",
            "commit_summary": "@since 1.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798611 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 287,
            "hash": "9f243610fca08de0998ae66c55bb79eed3c45720",
            "commit_summary": "@since 1.4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@798613 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2009-07-28"
        },
        {
            "commit_id": 288,
            "hash": "e17d5c54eebc1dace8466d08907995041c30e04e",
            "commit_summary": "[CODEC-59] Add methods to Base64 which work with String instead of byte[]. Patch applied with one added test code line to keep line code coverage at 100%. Branch coverage up to 92% from 91%.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799800 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                },
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.reset"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64String"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeToString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeToString"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "getSupportedBytes",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getSupportedBytes"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "testEmptyBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEmptyBase64"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                }
            ],
            "date": "2009-08-01"
        },
        {
            "commit_id": 289,
            "hash": "9d40f09dfb21f94bf9d058c1b83f46e103984aec",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799802 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2009-08-01"
        },
        {
            "commit_id": 290,
            "hash": "bcbf5d68c9a5499b06f8e4b9dd6db39ee590a54d",
            "commit_summary": "Set SVN keyword Id for @version $Id$ substitution.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java"
            ],
            "functions": [],
            "date": "2009-08-01"
        },
        {
            "commit_id": 291,
            "hash": "60eaf259384a95787e41dc803aee8929c55971b6",
            "commit_summary": "Set SVN keyword Id for @version $Id$ substitution.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799805 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java"
            ],
            "functions": [],
            "date": "2009-08-01"
        },
        {
            "commit_id": 292,
            "hash": "59ebd4d8e3c7bea933ba1ee3a7949468d8619a0f",
            "commit_summary": "Set SVN keyword Id for @version $Id$ substitution.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799806 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [],
            "date": "2009-08-01"
        },
        {
            "commit_id": 293,
            "hash": "ffd08a49645240d4f184f338ecb1175a7b7f0b0c",
            "commit_summary": "[CODEC-78] Base64: Improve Code Coverage. Patch applied: https://issues.apache.org/jira/secure/attachment/12415223/codec78-evenMoreCoverage.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799815 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "getEncodeLength",
                    "function params": [
                        "pArray",
                        "chunkSize",
                        "chunkSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.getEncodeLength"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                }
            ],
            "date": "2009-08-01"
        },
        {
            "commit_id": 294,
            "hash": "3b8cd11d086e4e09e801deb114d34abb80175ac0",
            "commit_summary": "CODEC-83  Improve Double Metaphone test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799961 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "suite",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.suite"
                },
                {
                    "function name": "testDoubleMetaphonePrimary",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.tearDown"
                },
                {
                    "function name": "DoubleMetaphone2Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.DoubleMetaphone2Test"
                },
                {
                    "function name": "testDoubleMetaphoneAlternate",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.setUp"
                },
                {
                    "function name": "testSetMaxCodeLength",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"
                }
            ],
            "date": "2009-08-01"
        },
        {
            "commit_id": 295,
            "hash": "d7b01850ef418b1d261cdb2029f8f85ab4031553",
            "commit_summary": "Increase test coverage slightly - test values generated using http://swoodbridge.com/DoubleMetaPhone/mptest.php3\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@799972 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"
                }
            ],
            "date": "2009-08-02"
        },
        {
            "commit_id": 296,
            "hash": "a5dfe5cbc95d7f3ce0b4829756690c2cb8439f4c",
            "commit_summary": "[CODEC-84] Double Metaphone bugs in alternative encoding. Apply patch. Thank you Niall.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@800153 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java"
            ],
            "functions": [
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                }
            ],
            "date": "2009-08-02"
        },
        {
            "commit_id": 297,
            "hash": "25ad9f824aef478b61a774ed9402068ad215b23b",
            "commit_summary": "[CODEC-73] DigestUtils: Make string2byte conversions indepedent of platform default encoding.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@800270 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.getBytesUtf8"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "testMD5HexLength",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMD5HexLength"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "hashMe"
                    ],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.getBytesUtf8"
                },
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testMD5Length",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testMD5Length"
                },
                {
                    "function name": "testConstructable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"
                }
            ],
            "date": "2009-08-03"
        },
        {
            "commit_id": 298,
            "hash": "60cff9d95843e30169b826bc1a2c1888952937c9",
            "commit_summary": "Add missing @since 1.4 tags\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801105 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2009-08-05"
        },
        {
            "commit_id": 299,
            "hash": "b3607d8b91c7f164cb3b2aa67035bd5c468fcc56",
            "commit_summary": "[CODEC-73] Hex: Make string2byte conversions indepedent of platform default encoding.\nAlso refactor DigestUtils to call a new method on Hex.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801391 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "Hex",
                    "function params": [
                        "csName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "setCharsetName",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.setCharsetName"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.toString"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "getCharsetName",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.getCharsetName"
                },
                {
                    "function name": "toDigit",
                    "function params": [
                        "ch",
                        "index"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.toDigit"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "Hex",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "getBytesUnchecked",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUnchecked"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf8"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testDecodeBadCharacterPos0",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"
                },
                {
                    "function name": "testDencodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDencodeEmpty"
                },
                {
                    "function name": "testHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                },
                {
                    "function name": "testDecodeArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"
                },
                {
                    "function name": "log",
                    "function params": [
                        "s"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "testDecodeBadCharacterPos1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"
                },
                {
                    "function name": "testRequiredCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testRequiredCharset"
                },
                {
                    "function name": "testDecodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"
                },
                {
                    "function name": "testDecodeHexOddCharacters1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters1"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"
                },
                {
                    "function name": "testDecodeHexOddCharacters5",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters5"
                },
                {
                    "function name": "checkDecodeHexOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.checkDecodeHexOddCharacters"
                },
                {
                    "function name": "testEncodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"
                },
                {
                    "function name": "testEncodeZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeZeroes"
                },
                {
                    "function name": "testHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"
                },
                {
                    "function name": "testDecodeStringOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testEncodeEmpty"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testDecodeHexOddCharacters3",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testDecodeHexOddCharacters3"
                },
                {
                    "function name": "testGetBytesUnchecked",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testGetBytesUncheckedBadName",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"
                }
            ],
            "date": "2009-08-05"
        },
        {
            "commit_id": 300,
            "hash": "d89939d5d56b0b2dfabdcf7af2bc83ad32884cce",
            "commit_summary": "[CODEC-73] In-line comments on odd test results with some charsets on different JREs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801396 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "log",
                    "function params": [
                        "s"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "log",
                    "function params": [
                        "t"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                }
            ],
            "date": "2009-08-05"
        },
        {
            "commit_id": 301,
            "hash": "f06bed0901b6faa2ed3a99a5c4a6d44e19b96541",
            "commit_summary": "100/100 code coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801410 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testCustomCharsetToString",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharsetToString"
                },
                {
                    "function name": "testCustomCharsetBadNameDecodeObject",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"
                },
                {
                    "function name": "testCustomCharsetBadNameEncodeByteArray",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"
                },
                {
                    "function name": "testCustomCharsetBadNameEncodeObject",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeObject"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                }
            ],
            "date": "2009-08-05"
        },
        {
            "commit_id": 302,
            "hash": "a9952da76781c43314cc96f11334c7a036706aef",
            "commit_summary": "[CODEC-55] make all \"business\" method implementations of public API thread safe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801488 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "setCharsetName",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.setCharsetName"
                }
            ],
            "date": "2009-08-06"
        },
        {
            "commit_id": 303,
            "hash": "cfe35cfec3cfd092f8580a067a36f5e6f9d04255",
            "commit_summary": "toString() Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801489 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 304,
            "hash": "2f48971db4b1d7b862c820149d2a6a2014f2558f",
            "commit_summary": "toString() Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801490 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 305,
            "hash": "41cb6aaa772b17c942b72a446e3430509a54d012",
            "commit_summary": "No logging by default.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801505 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 306,
            "hash": "4dae15fe9038c2b881436ae338ab1c57f860b58f",
            "commit_summary": "Make new charsetName instance variable thread-safe\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801639 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "Hex",
                    "function params": [
                        "csName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "Hex",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.Hex"
                }
            ],
            "date": "2009-08-06"
        },
        {
            "commit_id": 307,
            "hash": "bdb86efa0ad793b99f680d397a0b168487b5335a",
            "commit_summary": "Add comment indicating CHUNK_SEPARTOR variable may be private in future versions\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801706 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 308,
            "hash": "1bd7cc40cf99af2a44ebebe9eef1a7de32f7031a",
            "commit_summary": "@since 1.4\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801729 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 309,
            "hash": "231e4eb69276bc97c30e90e99fa95e3f966454cf",
            "commit_summary": "DigestUtils.java:68: warning - @param argument \"string\" is not a parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801803 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 310,
            "hash": "5000c189b2893142dc6cdfd5c4e989962b0c3f1f",
            "commit_summary": "@see must use an href for links.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@801812 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java"
            ],
            "functions": [],
            "date": "2009-08-06"
        },
        {
            "commit_id": 311,
            "hash": "5c06c6f24063e7a5f4e2a48b43f6a6edff4efe88",
            "commit_summary": "No point in using getBytes() on \"abc\" - just code the bytes directly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@886286 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [],
            "date": "2009-12-02"
        },
        {
            "commit_id": 312,
            "hash": "f1f905f2903625f59ebaa94587b09b44c7c9ba4a",
            "commit_summary": "Remove AllTests class and suite() methods. See http://mail-archives.apache.org/mod_mbox/commons-dev/201001.mbox/%3C94C476C03BFF5E42AC3518FDAC9643C4E2E27ACD9B@HQMAIL.rocketsoftware.com%3E\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@902029 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [],
            "date": "2010-01-22"
        },
        {
            "commit_id": 313,
            "hash": "0fb00f9d0c2f8d08b8914fcf78fad2995af80454",
            "commit_summary": "No need for suite() methods any more\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@919114 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java"
            ],
            "functions": [],
            "date": "2010-03-04"
        },
        {
            "commit_id": 314,
            "hash": "cbe33f0a85fd9f2c04efb96296a26880995618b0",
            "commit_summary": "JIRA: CODEC-93 Add test(s) to check that encodeBase64() does not chunk output\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928090 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "Base64Codec13Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.Base64Codec13Test"
                },
                {
                    "function name": "testStaticDecodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "initBYTES",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.initBYTES"
                },
                {
                    "function name": "main",
                    "function params": [
                        "args"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.main"
                },
                {
                    "function name": "initSTRINGS",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.initSTRINGS"
                },
                {
                    "function name": "initCHUNKED_STRINGS",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.initCHUNKED_STRINGS"
                },
                {
                    "function name": "testStaticEncode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"
                },
                {
                    "function name": "testStaticEncodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"
                },
                {
                    "function name": "testEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"
                },
                {
                    "function name": "testBinaryDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"
                },
                {
                    "function name": "testDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"
                },
                {
                    "function name": "testStaticDecode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"
                },
                {
                    "function name": "testBinaryEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"
                }
            ],
            "date": "2010-03-26"
        },
        {
            "commit_id": 315,
            "hash": "357223247fb76e442d38353332755305cc9d0c05",
            "commit_summary": "Use a Java 1.4 constructor, not 1.5 (yet)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928099 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java"
            ],
            "functions": [
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                }
            ],
            "date": "2010-03-26"
        },
        {
            "commit_id": 316,
            "hash": "38ba13232cb37374e3c333e2121ebad8a793935c",
            "commit_summary": "Add missing AL header (granted in JIRA)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928106 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java"
            ],
            "functions": [],
            "date": "2010-03-26"
        },
        {
            "commit_id": 317,
            "hash": "bcfef8906931a7929a6db14b9d82d387fd3f17f6",
            "commit_summary": "JIRA: CODEC-89 new Base64().encode() appends a CRLF, and chunks results into 76 character lines\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928107 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 318,
            "hash": "c10f11cf583e8e59bdc146d3a9d25bd53fc97ecc",
            "commit_summary": "JIRA: CODEC-97 Base64 default constructor behaviour changed to enable chunking in 1.4\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928109 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java"
            ],
            "functions": [
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Codec13Test.testObjectEncode"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 319,
            "hash": "9535a94f6934edc9f3cc16d74621ca61429ebf8f",
            "commit_summary": "JIRA: CODEC-97 Base64 default constructor behaviour changed to enable chunking in 1.4\nOops - added to wrong test class\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928110 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 320,
            "hash": "00da5921e530ee96b4a03cb3f085bc292ac675bd",
            "commit_summary": "Use constants in code for MIME and PEM chunk size instead of magic numbers. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928121 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "Base64",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testBase64EmptyInputStreamPemChuckSize",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testBase64EmptyInputStreamMimeChuckSize",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testBase64EmptyOutputStreamPemChunkSize",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"
                },
                {
                    "function name": "testBase64EmptyOutputStreamMimeChunkSize",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"
                },
                {
                    "function name": "testRfc1421Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testRfc2045Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 321,
            "hash": "f63e8e9a4cd509e3073a2db90e39e985ac7bcf67",
            "commit_summary": "New test methods testRfc4648 based on RFC 4648 that show our inconsistent handling of CR LF at the end of data. Failing assertions are //commented out.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928129 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testRfc4648Section10Encode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"
                },
                {
                    "function name": "testRfc4648Section10DecodeWithCrLf",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"
                },
                {
                    "function name": "testRfc4648Section10Decode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 322,
            "hash": "ccafe29e3422fe8986cffd6a8e1fbdfb7ef80c49",
            "commit_summary": "Add missing (successful) test\nFix up Javadoc references\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928137 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testRfc4648Section10Encode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 323,
            "hash": "ed374757af14531ed144fa9bd66364e6933b24aa",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928140 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [],
            "date": "2010-03-27"
        },
        {
            "commit_id": 324,
            "hash": "bbe1346da2c2cf95a1aea114f6116b37f2ad3d95",
            "commit_summary": "Roundtrip tests (some commented out that fail)\nApplied https://issues.apache.org/jira/secure/attachment/12439949/codec-99-test-fixes.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928158 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testRfc4648Section10EncodeDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode"
                },
                {
                    "function name": "testRfc4648Section10DecodeEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"
                },
                {
                    "function name": "testEncodeDecode",
                    "function params": [
                        "plainText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecode"
                },
                {
                    "function name": "testRfc4648Section10DecodeWithCrLf",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"
                },
                {
                    "function name": "testDecodeEncode",
                    "function params": [
                        "encodedText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeEncode"
                }
            ],
            "date": "2010-03-27"
        },
        {
            "commit_id": 325,
            "hash": "c9430c621d98212485230ede8d166fc891cb6747",
            "commit_summary": "Increasing the test branch coverage slightly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928548 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone"
                }
            ],
            "date": "2010-03-29"
        },
        {
            "commit_id": 326,
            "hash": "04fe97fe0a5847ad049b6c2ddb7c6e2697f78f58",
            "commit_summary": "Removing extra 'containing' text\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928549 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2010-03-29"
        },
        {
            "commit_id": 327,
            "hash": "5193321d27aec9d3f26c407dac6d4df9546f9036",
            "commit_summary": "getBytes() relies on the current encoding; use UTF-8 for portability\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@928757 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testDiscardWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testDiscardWhitespace"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject"
                },
                {
                    "function name": "testDecodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"
                },
                {
                    "function name": "testFromAsciiByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"
                },
                {
                    "function name": "testCustomCharsetBadNameEncodeByteArray",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameEncodeByteArray"
                },
                {
                    "function name": "testCustomCharsetBadNameDecodeObject",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadNameDecodeObject"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2010-03-29"
        },
        {
            "commit_id": 328,
            "hash": "800f0531068ebaf2f2d257bb1bd805781ddd4760",
            "commit_summary": "CODEC-98 - Base64InputStream causes NullPointerException on some input - https://issues.apache.org/jira/browse/CODEC-98 \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@950267 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.streamToBytes"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in",
                        "buf"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.streamToBytes"
                }
            ],
            "date": "2010-06-01"
        },
        {
            "commit_id": 329,
            "hash": "db1a9ee77bcd07e49e79a9613778ef253e6791ef",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@950460 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [],
            "date": "2010-06-02"
        },
        {
            "commit_id": 330,
            "hash": "c7d837dc6d545e1f0ba3db5e0ef7e91e07bb7ad4",
            "commit_summary": "Fixing typo in exception text as reported by Eric Fung in CODEC-103\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@966309 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Hex.java"
            ],
            "functions": [
                {
                    "function name": "toDigit",
                    "function params": [
                        "ch",
                        "index"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Hex.toDigit"
                }
            ],
            "date": "2010-07-21"
        },
        {
            "commit_id": 331,
            "hash": "240542361bcfcd2522e60155686709830e98bfd6",
            "commit_summary": "Adding Falk Meyer's Cologne Phonetic implementation, a Soundex like algorithm for German words - CODEC-106\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@997977 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "index"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "arrayContains",
                    "function params": [
                        "arr",
                        "key"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.arrayContains"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "start",
                        "end"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "index"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "isCologneEqual",
                    "function params": [
                        "text1",
                        "text2"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.isCologneEqual"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "start",
                        "end"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "preProcess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.preProcess"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "makeEncoder",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.makeEncoder"
                },
                {
                    "function name": "testIsCologneEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"
                },
                {
                    "function name": "ColognePhoneticTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.ColognePhoneticTest"
                },
                {
                    "function name": "testBorderCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"
                }
            ],
            "date": "2010-09-17"
        },
        {
            "commit_id": 332,
            "hash": "d74fc31604c805a47c44d7853f63a3b06ad6c016",
            "commit_summary": "Fix for CODEC-101:  java.io.InputStreamReader hates it when InputStream.read(byte[]) returns a zero.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1061974 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                }
            ],
            "date": "2011-01-21"
        },
        {
            "commit_id": 333,
            "hash": "b57a1aec395cff5156812295c9dbaf9b7edbddcf",
            "commit_summary": "Fix for CODEC-101:  java.io.InputStreamReader hates it when InputStream.read(byte[]) returns a zero. (Adding an extra JUnit Test for good luck.)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1061980 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                }
            ],
            "date": "2011-01-21"
        },
        {
            "commit_id": 334,
            "hash": "954d995c5603b616c3c4a9ffb1823f36dd7ebcb0",
            "commit_summary": "CODEC-99 - Base64.encodeBase64String() should not chunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062330 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "testRfc4648Section10Encode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                }
            ],
            "date": "2011-01-23"
        },
        {
            "commit_id": 335,
            "hash": "8027ef85a1ca914de336af572c0de9918d5585bb",
            "commit_summary": "@author tag is ASF (like all others)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062570 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-01-23"
        },
        {
            "commit_id": 336,
            "hash": "931e25921dc0ec705a0055655aa2b2237a0888d7",
            "commit_summary": "@version 1.5\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062572 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-01-23"
        },
        {
            "commit_id": 337,
            "hash": "2c13032a16e37b7bc9e0272d25fc185b5c82b42e",
            "commit_summary": "[CODEC-105] ArrayIndexOutOfBoundsException when doing multiple reads() on encoding b64InputStream. https://issues.apache.org/jira/browse/CODEC-105\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062592 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.readResults"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.read"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"
                },
                {
                    "function name": "read",
                    "function params": [
                        "pos",
                        "len"
                    ],
                    "file name": "Codec105ErrorInputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Codec105ErrorInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "Codec105ErrorInputStream.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Codec105ErrorInputStream.read"
                }
            ],
            "date": "2011-01-24"
        },
        {
            "commit_id": 338,
            "hash": "8269f17bdb90ebfbfc498503a601e085c7b458aa",
            "commit_summary": "[CODEC-111] org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR isn't final but should be. https://issues.apache.org/jira/browse/CODEC-111\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062599 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2011-01-24"
        },
        {
            "commit_id": 339,
            "hash": "d8acbb037753e5ee864b11138238b9811c61719e",
            "commit_summary": "Javadoc clean ups (especially @see tags)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1062642 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-01-24"
        },
        {
            "commit_id": 340,
            "hash": "5223a63fa67fddcd092b2ae214b1eff0173a52c2",
            "commit_summary": "CODEC-110 - Add a String version of Base64.isArrayByteBase64()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063091 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "isStringBase64",
                    "function params": [
                        "base64"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isStringBase64"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 341,
            "hash": "eabb90925568f9e4b04754918840db8156e5444a",
            "commit_summary": "CODEC-99 - Oops, I forgot to update the Javadoc. Thanks, Sebb, for pointing that out!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063096 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2011-01-25"
        },
        {
            "commit_id": 342,
            "hash": "9250cf31de34c32ddbab386fb0f8bc41613decba",
            "commit_summary": "[CODEC-110] Add a String version of Base64.isArrayByteBase64(). https://issues.apache.org/jira/browse/CODEC-110\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063100 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [
                        "base64"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 343,
            "hash": "3040f29dc4a84d5ff8e6d743f27240656bfebd82",
            "commit_summary": "Deprecate isArrayByteBase64 in favor of isBase64 to match other method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063336 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 344,
            "hash": "eb8b79300a7ecb3656c476dbac296d25f12cecdc",
            "commit_summary": "Refactor a lot common code in the left and right buffer classes into a new common superclass.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063346 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "start",
                        "end"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "ch"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "arrayContains",
                    "function params": [
                        "arr",
                        "key"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.arrayContains"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 345,
            "hash": "fdd0f9428d092cdadc066abc9ce25d02d337f3ca",
            "commit_summary": "CologneBuffer does not need to implement CharSequence which then does not need to implement charAt and subSequence, which are themselves not used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063350 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 346,
            "hash": "113ff66f220047f228a57b54e74b96d82b80009f",
            "commit_summary": "CologneBuffer does not need to implement CharSequence which then does not need to implement charAt and subSequence, which are themselves not used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063389 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-01-25"
        },
        {
            "commit_id": 347,
            "hash": "727d92236ae9062c77f372aa4e4edd4b7981c363",
            "commit_summary": "CologneBuffer does not need to implement CharSequence which then does not need to implement charAt and subSequence, which are themselves not used.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063390 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 348,
            "hash": "9c9e36e4e03925138de6088681ea647d69b4a4b1",
            "commit_summary": "This refactoring changes method names from \"put\" and \"drop\" to \"add\" and \"remove\". The names \"put\" would have been OK if used with a key like an index or map key. Here we just add one char with one call.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063395 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "CologneLeftBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneLeftBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "CologneRightBuffer",
                    "function params": [
                        "ch"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneRightBuffer"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 349,
            "hash": "a791fb32945054c162624fa1aa45122b4034b6ab",
            "commit_summary": "Don't use the now deprecated isArrayByteBase64 method, use its replacement isBase64\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063421 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isBase64",
                    "function params": [
                        "base64"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 350,
            "hash": "5e52a98fe648d65e10ae4bc71bbf51574edab5e6",
            "commit_summary": "Don't use the now deprecated isArrayByteBase64 method, use its replacement isBase64\n(No need to test the deprecated method as it delegates to the new one anyway)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063422 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testIsArrayByteBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 351,
            "hash": "0582892a7fb2d14f564170607f92ebd909d9b5bd",
            "commit_summary": "Change preProcess to preprocess\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063436 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 352,
            "hash": "6e883fab4dc3b804647e3bec60efd4f00a32594d",
            "commit_summary": "Sort methods AB.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063438 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "isCologneEqual",
                    "function params": [
                        "text1",
                        "text2"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.isCologneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "arrayContains",
                    "function params": [
                        "arr",
                        "key"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.arrayContains"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                }
            ],
            "date": "2011-01-25"
        },
        {
            "commit_id": 353,
            "hash": "3e725d7dd0f9a1369d4c947bebc85daae1aa7e09",
            "commit_summary": "Document (and simplify) code dealing with trailing partial decode input\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063649 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 354,
            "hash": "ad12e19e614e92f824746c199ebfc31228a8c33c",
            "commit_summary": "CODEC-88 Initial implementation of Base32 codec. Derived from Base64 code.\nNot complete: intend to add base64 hex version, and the API may not be final\nTest cases to follow\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063657 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "containsBase32Byte",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.containsBase32Byte"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decodeBase32",
                    "function params": [
                        "base32String"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decodeBase32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isWhiteSpace"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.readResults"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.resizeBuffer"
                },
                {
                    "function name": "encodeBase32",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "maxResultSize"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                },
                {
                    "function name": "avail",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.avail"
                },
                {
                    "function name": "encodeToString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeToString"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encodeBase32",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32"
                },
                {
                    "function name": "encodeBase32String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32String"
                },
                {
                    "function name": "Base32",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encodeBase32Chunked",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32Chunked"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "getEncodeLength",
                    "function params": [
                        "pArray",
                        "chunkSize",
                        "chunkSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.getEncodeLength"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.hasData"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "base32"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                },
                {
                    "function name": "encodeBase32",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32"
                },
                {
                    "function name": "decodeBase32",
                    "function params": [
                        "base32Data"
                    ],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decodeBase32"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.reset"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 355,
            "hash": "03d0f6c305014f5df354851f448b3002533fd235",
            "commit_summary": "Intial Base32 tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063666 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 356,
            "hash": "86db7462a497898e3d18bb3d8403ec3120a3074a",
            "commit_summary": "Added Base32Hex implementation, and enabled the basic tests\nMany more tests needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063670 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/test/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isBase32Hex",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32Hex"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                },
                {
                    "function name": "encodeBase32Hex",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32Hex"
                },
                {
                    "function name": "decodeBase32Hex",
                    "function params": [
                        "base32HexString"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decodeBase32Hex"
                },
                {
                    "function name": "decodeBase32Hex",
                    "function params": [
                        "base32HexData"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decodeBase32Hex"
                },
                {
                    "function name": "encodeBase32HexString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32HexString"
                },
                {
                    "function name": "encodeBase32Hex",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "maxResultSize"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32Hex"
                },
                {
                    "function name": "encodeBase32",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "maxResultSize"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encodeBase32"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 357,
            "hash": "0abbd912f1775a645ea338783b63728ab2a903ea",
            "commit_summary": "Javadoc fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063757 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2011-01-26"
        },
        {
            "commit_id": 358,
            "hash": "ee4b72296556d9d0db07115bbd92cc54f9740395",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063759 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "containsBase32Byte",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.containsBase32Byte"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "isBase32Hex",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32Hex"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "getEncodeLength",
                    "function params": [
                        "pArray",
                        "chunkSize",
                        "chunkSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.getEncodeLength"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "base32"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                },
                {
                    "function name": "isBase32",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isBase32"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 359,
            "hash": "c6fadeeac0487a158234cf5d59a144f67bd68e93",
            "commit_summary": "New classes for Base32 rework\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063760 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.resizeBuffer"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.reset"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.hasData"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.readResults"
                },
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.isWhiteSpace"
                },
                {
                    "function name": "encodeToString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.encodeToString"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.decode"
                },
                {
                    "function name": "avail",
                    "function params": [],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.avail"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.encode"
                },
                {
                    "function name": "BasedCodec",
                    "function params": [],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.BasedCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BasedCodec.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodec.decode"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BasedCodecInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecInputStream.read"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "BasedCodecInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecInputStream.markSupported"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BasedCodecInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecInputStream.read"
                },
                {
                    "function name": "BasedCodecInputStream",
                    "function params": [
                        "in",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BasedCodecInputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecInputStream.BasedCodecInputStream"
                },
                {
                    "function name": "flush",
                    "function params": [],
                    "file name": "BasedCodecOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecOutputStream.flush"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BasedCodecOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecOutputStream.flush"
                },
                {
                    "function name": "BasedCodecOutputStream",
                    "function params": [
                        "out",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BasedCodecOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecOutputStream.BasedCodecOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BasedCodecOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "i"
                    ],
                    "file name": "BasedCodecOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecOutputStream.write"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BasedCodecOutputStream.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BasedCodecOutputStream.close"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 360,
            "hash": "eab29342154e5eb1b9d3ab007ac61d8fe95cf5a3",
            "commit_summary": "Rename BasedCodec => BaseNCodec\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063784 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base32OutputStream.java"
            ],
            "functions": [
                {
                    "function name": "BaseNCodec",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BasedCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "in",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BasedCodecInputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "out",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BasedCodecOutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 361,
            "hash": "4a0babdeb3e17b446f5210467351506aedc3e0c0",
            "commit_summary": "Fix Eclipse warnings:\nunused variable\ndeprecated method - remove test as method no longer needed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063787 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 362,
            "hash": "5bf8d473175680297d1a1262600cd05f07e7aa5d",
            "commit_summary": "Better method name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063789 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "createEncoder",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.createEncoder"
                },
                {
                    "function name": "createEncoder",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.createEncoder"
                },
                {
                    "function name": "createEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.createEncoder"
                },
                {
                    "function name": "createEncoder",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.createEncoder"
                },
                {
                    "function name": "createEncoder",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.createEncoder"
                },
                {
                    "function name": "createEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.createEncoder"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 363,
            "hash": "59c42b102e5396b2ebd4541ed9007f385a00c357",
            "commit_summary": "SOme basic Base32 I/O tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063796 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testBase32EmptyInputStreamMimeChuckSize",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"
                },
                {
                    "function name": "testBase32EmptyInputStreamPemChuckSize",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase32EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream"
                },
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"
                },
                {
                    "function name": "Base32InputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.Base32InputStreamTest"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase32EmptyOutputStreamPemChunkSize",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase32EmptyOutputStreamMimeChunkSize",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"
                },
                {
                    "function name": "Base32OutputStreamTest",
                    "function params": [
                        "name"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.Base32OutputStreamTest"
                },
                {
                    "function name": "testBase32EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.bytesContain"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.streamToBytes"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.resizeArray"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in",
                        "buf"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.streamToBytes"
                },
                {
                    "function name": "fill",
                    "function params": [
                        "buf",
                        "offset",
                        "in"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.fill"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "useHex"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.randomData"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 364,
            "hash": "b396c535ff143cf94ea0d11f50739da1709ec290",
            "commit_summary": "Renamed basedCodec to baseNCodec.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063833 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "in",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "in",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "out",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 365,
            "hash": "c5291ab1ca4d4d7a041874a66b1c05b7d5c02ccb",
            "commit_summary": "CODEC-112 Base64.encodeBase64(byte[] binaryData, boolean isChunked, boolean urlSafe, int maxResultSize) throws IAE for valid maxResultSize if isChunked is false\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1063922 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testCodec112"
                }
            ],
            "date": "2011-01-26"
        },
        {
            "commit_id": 366,
            "hash": "2e022c26f86f1ffdc0c6432874dd804b7a2ab4f2",
            "commit_summary": "Makes more sense to provide the codec externally\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064104 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base32TestData.java"
            ],
            "functions": [
                {
                    "function name": "randomData",
                    "function params": [
                        "codec",
                        "size"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.randomData"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "useHex"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.randomData"
                }
            ],
            "date": "2011-01-27"
        },
        {
            "commit_id": 367,
            "hash": "4cc8b66909d3f530f8509785dfb958d71526f3f0",
            "commit_summary": "Makes more sense to provide the codec externally\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064119 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                }
            ],
            "date": "2011-01-27"
        },
        {
            "commit_id": 368,
            "hash": "872aeff2e5bf911d96ce916234dc50de83abe2e7",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064132 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32OutputStream.java"
            ],
            "functions": [],
            "date": "2011-01-27"
        },
        {
            "commit_id": 369,
            "hash": "e810384bf01c1ea545757b06af73a4bb2b2401ab",
            "commit_summary": "More refactoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064262 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isInAlphabet"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "encodeAsString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.encodeAsString"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "getDefaultBufferSize",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "basen"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "testRandomBytes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testRandomBytes"
                },
                {
                    "function name": "testRandomBytesHex",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "testRandomBytesChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                },
                {
                    "function name": "testBaseNCodec",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec"
                },
                {
                    "function name": "testIsInAlphabetString",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString"
                },
                {
                    "function name": "testIsWhiteSpace",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace"
                },
                {
                    "function name": "testContainsAlphabetOrPad",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"
                },
                {
                    "function name": "testIsInAlphabetByte",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByte"
                },
                {
                    "function name": "testIsInAlphabetByteArrayBoolean",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean"
                }
            ],
            "date": "2011-01-27"
        },
        {
            "commit_id": 370,
            "hash": "e7b46fdf5fc20526e0058946f5d47c0e4c3809ee",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064265 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                }
            ],
            "date": "2011-01-27"
        },
        {
            "commit_id": 371,
            "hash": "c86b5e26e0b9195f4928741b5b7dcd3d857f4de5",
            "commit_summary": "FindBugs detected potential calculation overflow\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064292 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                }
            ],
            "date": "2011-01-27"
        },
        {
            "commit_id": 372,
            "hash": "b0117669677f27a448c8fcafcd1430e2e0a5c3db",
            "commit_summary": "[CODEC-113] org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING should be package protected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064307 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [],
            "date": "2011-01-27"
        },
        {
            "commit_id": 373,
            "hash": "1221af62021d2be25cd161dd8678368b6d785a72",
            "commit_summary": "[CODEC-114] org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING should be package protected MALICIOUS_CODE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064309 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2011-01-27"
        },
        {
            "commit_id": 374,
            "hash": "cffa33ee9cc4a86c4e252016e765f78e64d5067c",
            "commit_summary": "Better name\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064356 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                }
            ],
            "date": "2011-01-27"
        },
        {
            "commit_id": 375,
            "hash": "effccf34b070dafe36e05a181d90d1969443fc0c",
            "commit_summary": "bitWorkArea needs to be in implementation class\nAllow static access to default pad\nFix bug in Base32 chunking and add some tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064407 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/test/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 376,
            "hash": "7b6040c1dd076d8e38349d691ed56f9c6e526771",
            "commit_summary": "Comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064418 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 377,
            "hash": "5e4cef4b366ba808e9ce260278a701d2aea01e84",
            "commit_summary": "Comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064419 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 378,
            "hash": "0309db6bdcc133c4f6ad871c28fbe468df8f6c55",
            "commit_summary": "Refactor Base64 to use new super-class\nMinimal fix to allow Base64OutputStream to compile (refactor to follow)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064420 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isInAlphabet"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.flush"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testConstructors"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 379,
            "hash": "07b5e3001ef13d4eefac863cf6802ab832e73bea",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064423 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 380,
            "hash": "9ac451e968c2e582716af59c3c1a06208a9b213a",
            "commit_summary": "Refactor Base64 I/O streams\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064424 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/java/org/apache/commons/codec/binary/Base64OutputStream.java"
            ],
            "functions": [
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 381,
            "hash": "56730f9160d3917e180dcbdc2cf133e7a5da0b7f",
            "commit_summary": "FindBugs - don't assign modulus twice\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064428 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 382,
            "hash": "758111e834d688dcb18198b2ee2c5a72a955384e",
            "commit_summary": "Fix disable test cases\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064434 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 383,
            "hash": "a544e36f3f938f3be26fe573655c4e9aed89cb98",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064435 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 384,
            "hash": "2af0444758f487699201a2b0e451e83837a5daac",
            "commit_summary": "[CODEC-114] org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING should be package protected MALICIOUS_CODE\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064454 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Soundex.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 385,
            "hash": "395b4d902fe83f39581198ebf276079b07bdd442",
            "commit_summary": "[CODEC-113] org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING should be package protected\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064455 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 386,
            "hash": "fbdf624565c02a0a3266c6b29cdba53c2408c890",
            "commit_summary": "[CODEC-115] DoubleMetaphone.maxCodeLen should probably be private\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064462 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 387,
            "hash": "d6f305d2efd7560634217a25f3bbee59299844dd",
            "commit_summary": "Remove BASE32 and BASE32_ prefixes from private constants. Order members in AB order.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064789 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isInAlphabet"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.decode"
                }
            ],
            "date": "2011-01-28"
        },
        {
            "commit_id": 388,
            "hash": "dc4eb55574e5447fdc08057aa2892c9d509a04e5",
            "commit_summary": "Fix Javadoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064793 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 389,
            "hash": "289a091e100aba125b0dc28e7591f8de023c803f",
            "commit_summary": "Javadoc: This class is not thread-safe. Each thread should use its own instance.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1064797 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2011-01-28"
        },
        {
            "commit_id": 390,
            "hash": "a7cef1ba34b4becf101537c7ba7e614ad25b8750",
            "commit_summary": "The value of the local variable bytes is not used.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072704 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base32Test.java"
            ],
            "functions": [
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 391,
            "hash": "82a0383e1abe57eb0c21b153ca298aa5754612a7",
            "commit_summary": "Fix Checktyle warnings in license headers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072733 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2011-02-20"
        },
        {
            "commit_id": 392,
            "hash": "7d91ab773cbf5b20f1ca9da78510481851d5c00a",
            "commit_summary": "Fix Checktyle warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072734 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 393,
            "hash": "00f3126a0c16f413d86132924314cf55c1e3e9e6",
            "commit_summary": "Clean up return statement.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072735 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 394,
            "hash": "eb237a9d303c4c551345e7ad7795725676a7dfdc",
            "commit_summary": "Clean up array decl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072740 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-02-20"
        },
        {
            "commit_id": 395,
            "hash": "f8c987f27a0d8ffc13f2eb480f84b76a19fe7635",
            "commit_summary": "Fix PMD violation: Avoid unused method parameters such as 'value'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072742 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 396,
            "hash": "e6db01011c62b10f396ec0dc1c40a04be08cb630",
            "commit_summary": "Remove () around return expression.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072756 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.isInAlphabet"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base64.isInAlphabet"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 397,
            "hash": "30bcd86e5338d3bbd721ca9a126b62c0e853b092",
            "commit_summary": "Fix typo in // comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072757 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.java.org.apache.commons.codec.binary.Base32.Base32"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 398,
            "hash": "945ae4b18df50223eba626ca7e52b0a85af9bf8c",
            "commit_summary": "Better test coverage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072761 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testContainsAlphabetOrPad",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad"
                }
            ],
            "date": "2011-02-20"
        },
        {
            "commit_id": 399,
            "hash": "f90324f509ca16e50aabd416be4623c835ba9c1c",
            "commit_summary": "[CODEC-116] Remove deprecated package private method Base64.discardWhitespace(byte[])\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1072769 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2011-02-20"
        },
        {
            "commit_id": 400,
            "hash": "77dd3dc8a870962e167407838acf3469507151aa",
            "commit_summary": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073216 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2011-02-22"
        },
        {
            "commit_id": 401,
            "hash": "cf4568ec581870e36870c41d7254e90b0260cbfb",
            "commit_summary": "Javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073217 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-02-22"
        },
        {
            "commit_id": 402,
            "hash": "c84250ad41a943c2d998f0f774d6044a4a1e1b45",
            "commit_summary": "Sort members.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073218 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 403,
            "hash": "3b0e93adc531b0fbdb6431868ba3e7ab9e609ba9",
            "commit_summary": "Format before adding tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073219 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsCologneEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"
                },
                {
                    "function name": "testBorderCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testBorderCases"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 404,
            "hash": "49e0d8b05af2fc585b75611ece80cc786f3afbfb",
            "commit_summary": "Fix for \"Aabjoe\" test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073220 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "testAabjoe",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 405,
            "hash": "c1f8d1fb80fc408af8788a99a5e48f59caa6ed24",
            "commit_summary": "Order array elements.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073223 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 406,
            "hash": "f1994bd1aebbd9fe53917c67b3b89b6725fec385",
            "commit_summary": "Use test data example from PHP impl http://repo.magdev.de/src/Text_ColognePhonetic-0.2.2/test/Text_ColognePhoneticTest.php\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073434 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsCologneEqualsPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEqualsPhpData"
                },
                {
                    "function name": "testPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testPhpData"
                },
                {
                    "function name": "testIsCologneEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"
                },
                {
                    "function name": "testAabjoe",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"
                },
                {
                    "function name": "testAaclan",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.checkEncoding"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 407,
            "hash": "22a832de477ca450958bfaffcf44c3e7ebe9e6c9",
            "commit_summary": "Add test for the example used in the Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073457 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 408,
            "hash": "82eb1a806285946017580d7923334268254b5a6e",
            "commit_summary": "Test variations that encode to 67: \"Meier\", \"Maier\", \"Mair\", \"Meyer\", \"Meyr\", \"Mejer\", \"Major\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073465 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testPhpData"
                },
                {
                    "function name": "checkEncodings",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.checkEncodings"
                },
                {
                    "function name": "testVariations",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testVariations"
                },
                {
                    "function name": "checkEncodingVariations",
                    "function params": [
                        "expected"
                    ],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.checkEncodingVariations"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 409,
            "hash": "d9ee65ed9be0e537e61324322ad8e1ee522ae064",
            "commit_summary": "deutsch encodes to 28, NOT 288!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073471 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testPhpData"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 410,
            "hash": "b1561e93f4b53cacc2fee7c48750c8882f0b6b93",
            "commit_summary": "Enable more tests, the PHP code used to generate these examples has a multiple digit bug.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073476 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testPhpData"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 411,
            "hash": "1e81451ba622dc1ec8152f457c9c3e798766ee6b",
            "commit_summary": "FIx test fixture: missing leading \"0\". PHP implementation used to generate test data is buggy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073478 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testPhpData"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 412,
            "hash": "546f871580254d4105ad9612398977ba28fd4184",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073480 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-02-22"
        },
        {
            "commit_id": 413,
            "hash": "b9cab09755ac97eee175e7a471e5e18151703b53",
            "commit_summary": "Fix double digit bug.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073481 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "testPhpData",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testPhpData"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 414,
            "hash": "70e7d72322c4888627722baca43d672884d4a532",
            "commit_summary": "Clean up tests after debugging session.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073487 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsCologneEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsCologneEquals"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 415,
            "hash": "84e270e7028695df4bf4725ad4c9997d1a3a0669",
            "commit_summary": "More test data.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073491 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 416,
            "hash": "72c8759a22c6552a2dfcdf61b29729f981752879",
            "commit_summary": "Eberhard -> 01772 (not 0172) because two or more identical consecutive digits can occur if they occur after removing the \"0\" digits last step.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073513 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 417,
            "hash": "11c34fc46b20124f2f23d2503002a6bb3d434a45",
            "commit_summary": "Better class names for internal buffers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073521 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 418,
            "hash": "0be65c011da5c0f2de823ea0d253ca8743689d94",
            "commit_summary": "Change isColognEqual to isEncodeEqual. We can add isEncodeEqual in a superclass later.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073525 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "text1",
                        "text2"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                }
            ],
            "date": "2011-02-22"
        },
        {
            "commit_id": 419,
            "hash": "9cde66d2bba936d26490f157db97f423c5a8b5fa",
            "commit_summary": "Validated remaining tests with German speaker and author of http://sourceforge.net/projects/familynamephon/\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073573 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                }
            ],
            "date": "2011-02-23"
        },
        {
            "commit_id": 420,
            "hash": "1277e6d81f152206394b9f3f3d23034ea6e0f1f5",
            "commit_summary": "Remove blank lines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073575 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                }
            ],
            "date": "2011-02-23"
        },
        {
            "commit_id": 421,
            "hash": "f96c605bcd45b3df0d6d78c7fbef5bf0f8a5c0d3",
            "commit_summary": "Match variable name to other copyData method for consistency.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073778 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                }
            ],
            "date": "2011-02-23"
        },
        {
            "commit_id": 422,
            "hash": "ec9cafdf2ba1872becdd7d1e1870d40e67a83d27",
            "commit_summary": "Better name for internal static variable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1073783 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                }
            ],
            "date": "2011-02-23"
        },
        {
            "commit_id": 423,
            "hash": "0c4dca4e4edc3864b24d8badafddee51d824473c",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075400 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java"
            ],
            "functions": [],
            "date": "2011-02-28"
        },
        {
            "commit_id": 424,
            "hash": "1ed04596253bd33566923b1678599209c8794932",
            "commit_summary": "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075402 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoder.java"
            ],
            "functions": [],
            "date": "2011-02-28"
        },
        {
            "commit_id": 425,
            "hash": "69e1615c4e56ec6fc8d1a702576240a2885d7765",
            "commit_summary": "Fix typos and use a better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075403 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringDecoder.java"
            ],
            "functions": [],
            "date": "2011-02-28"
        },
        {
            "commit_id": 426,
            "hash": "30f915ae2df088dec3caf4045a935794edf53e03",
            "commit_summary": "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075404 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/Decoder.java"
            ],
            "functions": [],
            "date": "2011-02-28"
        },
        {
            "commit_id": 427,
            "hash": "9e2945f38c86df86743b20f1184a576ec2a02e4e",
            "commit_summary": "Better parameter name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075406 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/java/org/apache/commons/codec/Encoder.java"
            ],
            "functions": [],
            "date": "2011-02-28"
        },
        {
            "commit_id": 428,
            "hash": "22b7bd4c39c430ce517a614faf0075008d1c31d9",
            "commit_summary": "Refactor encoding tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075410 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "checkEncodingVariations",
                    "function params": [
                        "expected"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations"
                },
                {
                    "function name": "checkEncodings",
                    "function params": [
                        "data"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding"
                },
                {
                    "function name": "testSpecificationExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testAabjoe",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testAaclan",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testAaclan"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2011-02-28"
        },
        {
            "commit_id": 429,
            "hash": "1a0de7f5b83a7256b86a8ff5ee314b5a8d20f9d8",
            "commit_summary": "Add Wikipedia examples (broken)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075412 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpecificationExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testSpecificationExamples"
                },
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testWikipediaExamples"
                }
            ],
            "date": "2011-02-28"
        },
        {
            "commit_id": 430,
            "hash": "921a97182e6df7b8ee31d142a83f056811cf66c2",
            "commit_summary": "Refactor encoding tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075426 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "checkEncodingVariations",
                    "function params": [
                        "expected"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "getStringEncoder",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.getStringEncoder"
                },
                {
                    "function name": "checkEncodings",
                    "function params": [
                        "data"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.createStringEncoder"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder"
                },
                {
                    "function name": "checkDoubleMetaphone",
                    "function params": [
                        "typeIndex",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone"
                },
                {
                    "function name": "testDoubleMetaphonePrimary",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary"
                },
                {
                    "function name": "getDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.getDoubleMetaphone"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.createStringEncoder"
                },
                {
                    "function name": "testDoubleMetaphoneAlternate",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate"
                },
                {
                    "function name": "getDoubleMetaphone",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.getDoubleMetaphone"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.createStringEncoder"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.createStringEncoder"
                },
                {
                    "function name": "getMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.getMetaphone"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                },
                {
                    "function name": "getRefinedSoundex",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.getRefinedSoundex"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testDifference"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.createStringEncoder"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                },
                {
                    "function name": "testHWRuleEx2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"
                },
                {
                    "function name": "testHWRuleEx3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"
                },
                {
                    "function name": "testEncodeBatch4",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testDifference"
                },
                {
                    "function name": "testSoundexUtilsConstructable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testSoundexUtilsConstructable"
                },
                {
                    "function name": "testMsSqlServer2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"
                },
                {
                    "function name": "testUsEnglishStatic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic"
                },
                {
                    "function name": "getSoundexEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.getSoundexEncoder"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                },
                {
                    "function name": "testNewInstance3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance3"
                },
                {
                    "function name": "testNewInstance2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance2"
                },
                {
                    "function name": "testSoundexUtilsNullBehaviour",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour"
                },
                {
                    "function name": "testMaxLengthLessThan3Fix",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMaxLengthLessThan3Fix"
                },
                {
                    "function name": "testMaxLength",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMaxLength"
                },
                {
                    "function name": "testMsSqlServer3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"
                },
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                },
                {
                    "function name": "testEncodeIgnoreHyphens",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBasic"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.createStringEncoder"
                },
                {
                    "function name": "testEncodeBatch2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"
                },
                {
                    "function name": "testBadCharacters",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testBadCharacters"
                },
                {
                    "function name": "testEncodeIgnoreApostrophes",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testEncodeBatch3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"
                },
                {
                    "function name": "testB650",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testB650"
                },
                {
                    "function name": "testNewInstance",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testNewInstance"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testMsSqlServer1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"
                }
            ],
            "date": "2011-02-28"
        },
        {
            "commit_id": 431,
            "hash": "57381cea8e6287999e996da37f41f20f1d2c220a",
            "commit_summary": "Use test data from http://caversham.otago.ac.nz/files/working/ctp150804.pdf.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075447 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testDavidHoodRevisitedExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedExamples"
                },
                {
                    "function name": "testDavidHoodRevisitedCommonCodeAT11111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedCommonCodeAT11111111"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testIsCaverphoneEquals"
                },
                {
                    "function name": "testDavidHoodRevisitedRandomWords",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomWords"
                },
                {
                    "function name": "testDavidHoodRevisitedRandomNameKLN1111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameKLN1111111"
                },
                {
                    "function name": "testDavidHoodRevisitedRandomNameTTA1111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"
                },
                {
                    "function name": "testDavidHoodRevisitedRandomNameTN11111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTN11111111"
                }
            ],
            "date": "2011-02-28"
        },
        {
            "commit_id": 432,
            "hash": "75152a3d986664601f0b50ac3ac76deee0d80190",
            "commit_summary": "Fix typo in comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075459 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testWikipediaExamples"
                }
            ],
            "date": "2011-02-28"
        },
        {
            "commit_id": 433,
            "hash": "2a8fd84f1f380fc472ecf415b771cb5fd789719b",
            "commit_summary": "Remove disabled Caverphone 1.0 test.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075934 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [],
            "date": "2011-03-01"
        },
        {
            "commit_id": 434,
            "hash": "41c68e9ef470696009d72133c7f05a20e2728e34",
            "commit_summary": "[CODEC-117] Caverphone encodes names starting and ending with \"mb\" incorrectly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1075947 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "caverphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testEndMb"
                },
                {
                    "function name": "testDavidHoodRevisitedRandomNameTTA1111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testDavidHoodRevisitedRandomNameTTA1111111"
                }
            ],
            "date": "2011-03-01"
        },
        {
            "commit_id": 435,
            "hash": "619fbc2d06101090a7b2ddce227cc379a50003fe",
            "commit_summary": "Better test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1078234 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testCaverphoneRevisitedRandomNameKLN1111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testCaverphoneRevisitedRandomNameKLN1111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomWords",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testCaverphoneRevisitedRandomWords"
                },
                {
                    "function name": "testCaverphoneRevisitedCommonCodeAT11111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testCaverphoneRevisitedCommonCodeAT11111111"
                },
                {
                    "function name": "testCaverphoneRevisitedExamples",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testCaverphoneRevisitedExamples"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameTTA1111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testCaverphoneRevisitedRandomNameTTA1111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameTN11111111",
                    "function params": [],
                    "file name": "CaverphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.CaverphoneTest.testCaverphoneRevisitedRandomNameTN11111111"
                }
            ],
            "date": "2011-03-05"
        },
        {
            "commit_id": 436,
            "hash": "7656a09e8587355ee142e730f5df99ce72b382e5",
            "commit_summary": "[CODEC-118] Split Caverphone class into two classes for Caverphone 1.0 and 2.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1078646 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.AbstractCaverphone.encode"
                },
                {
                    "function name": "AbstractCaverphone",
                    "function params": [],
                    "file name": "AbstractCaverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone"
                },
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual"
                },
                {
                    "function name": "caverphone",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "caverphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "testCaverphoneRevisitedCommonCodeAT1111",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"
                },
                {
                    "function name": "testSpecificationV1Examples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"
                },
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.createStringEncoder"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testEndMb"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "Caverphone1Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Caverphone1Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.Caverphone1Test"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.createStringEncoder"
                },
                {
                    "function name": "Caverphone2Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Caverphone2Test.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.Caverphone2Test"
                }
            ],
            "date": "2011-03-07"
        },
        {
            "commit_id": 437,
            "hash": "e24aa373474caa6ea6da7c542cc2575138960fd0",
            "commit_summary": "Better Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1079533 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                }
            ],
            "date": "2011-03-08"
        },
        {
            "commit_id": 438,
            "hash": "ed4889329f9708d52c6d9f96331eb2d415ee4d09",
            "commit_summary": "Better Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1079535 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Caverphone.java"
            ],
            "functions": [],
            "date": "2011-03-08"
        },
        {
            "commit_id": 439,
            "hash": "4d83164dce419ee6afc25d9b9f4252bf88bfdb57",
            "commit_summary": "Better Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1079537 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2011-03-08"
        },
        {
            "commit_id": 440,
            "hash": "3e02155fd255d2840892c3e632ad592cfeceb833",
            "commit_summary": "Adds examples from http://www.windowsitpro.com/Files/23/26094/Table_01.html\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1079549 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java"
            ],
            "functions": [],
            "date": "2011-03-08"
        },
        {
            "commit_id": 441,
            "hash": "48298494ef82deed8e3002ac6696349b146bd77a",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1080408 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-03-11"
        },
        {
            "commit_id": 442,
            "hash": "d6c05294a2b36a1290a8ca65b8ecdbf0261a8bc8",
            "commit_summary": "Keep these files in UTF-8 encoding for proper Javadoc processing.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1080414 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                }
            ],
            "date": "2011-03-11"
        },
        {
            "commit_id": 443,
            "hash": "9f18303420ae4cd2173d41ff47161ddf4ca167d8",
            "commit_summary": "Remove last Javadoc warning.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1080416 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                }
            ],
            "date": "2011-03-11"
        },
        {
            "commit_id": 444,
            "hash": "279577d8501737836ad0241a63755576f6dbc432",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1080701 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/DecoderException.java",
                "src/java/org/apache/commons/codec/EncoderException.java",
                "src/java/org/apache/commons/codec/StringDecoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.compare"
                }
            ],
            "date": "2011-03-11"
        },
        {
            "commit_id": 445,
            "hash": "f7e7db3dcf8d195a225507c841e14821f0d45731",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1080712 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2011-03-11"
        },
        {
            "commit_id": 446,
            "hash": "bde2e23dfe41795425ccd19bd05560ef76cc388f",
            "commit_summary": "Fix typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1080867 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2011-03-12"
        },
        {
            "commit_id": 447,
            "hash": "ec31d79aa96ccd5c9eb193d69b79fbc99c9ec31a",
            "commit_summary": "eol-style\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1085238 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/java/org/apache/commons/codec/net/Utils.java",
                "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.AbstractCaverphone.encode"
                },
                {
                    "function name": "AbstractCaverphone",
                    "function params": [],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.AbstractCaverphone.AbstractCaverphone"
                },
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "digit16",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.java.org.apache.commons.codec.net.Utils.digit16"
                },
                {
                    "function name": "testConstructorStringThrowable",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"
                },
                {
                    "function name": "testConstructorThrowable",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"
                },
                {
                    "function name": "testConstructor0",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructor0"
                },
                {
                    "function name": "testConstructorString",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.DecoderExceptionTest.testConstructorString"
                },
                {
                    "function name": "testConstructorThrowable",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"
                },
                {
                    "function name": "testConstructorStringThrowable",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"
                },
                {
                    "function name": "testConstructor0",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructor0"
                },
                {
                    "function name": "testConstructorString",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.org.apache.commons.codec.EncoderExceptionTest.testConstructorString"
                },
                {
                    "function name": "testCaverphoneRevisitedCommonCodeAT1111",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111"
                },
                {
                    "function name": "testSpecificationV1Examples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"
                },
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "Caverphone1Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.Caverphone1Test"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.testEndMb"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone1Test.createStringEncoder"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.createStringEncoder"
                },
                {
                    "function name": "Caverphone2Test",
                    "function params": [
                        "name"
                    ],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.Caverphone2Test"
                },
                {
                    "function name": "testConstructor",
                    "function params": [],
                    "file name": "UtilsTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/UtilsTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/UtilsTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.UtilsTest.testConstructor"
                }
            ],
            "date": "2011-03-25"
        },
        {
            "commit_id": 448,
            "hash": "c48d20afe7706602bb499aefff82fa975bdcb6c9",
            "commit_summary": "Fix Ant Javadoc warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1086316 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [],
            "date": "2011-03-28"
        },
        {
            "commit_id": 449,
            "hash": "36e7620574736400941c5154bf663b198abafa7c",
            "commit_summary": "https://issues.apache.org/jira/browse/CODEC-119 Migrate to Java 5\nhttps://issues.apache.org/jira/browse/CODEC-120 Migrate to JUnit 4\nNo [codec] code changes yet. This is all set up for 2.0, Java 5 and JUnit 4.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1087590 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/CharEncoding.java",
                "src/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2011-04-01"
        },
        {
            "commit_id": 450,
            "hash": "8ffb4fb5e09446845f520fa8e759e9b8566d633e",
            "commit_summary": "Migrate to JUnit 4 https://issues.apache.org/jira/browse/CODEC-120\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1087894 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java",
                "src/test/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                "src/test/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                },
                {
                    "function name": "tearDown",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.tearDown"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BinaryCodecTest.setUp"
                }
            ],
            "date": "2011-04-01"
        },
        {
            "commit_id": 451,
            "hash": "d15181b53b64a6ea6a305c3be566a2a29d9321cd",
            "commit_summary": "Organize Imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1087895 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2011-04-01"
        },
        {
            "commit_id": 452,
            "hash": "8c8783500792d097e792eb4f4028a6e2830db48d",
            "commit_summary": "Annotate with @Override and @Deprecated.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1087901 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base32.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/java/org/apache/commons/codec/binary/Hex.java",
                "src/java/org/apache/commons/codec/language/Caverphone.java",
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/net/BCodec.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                "src/test/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/org/apache/commons/codec/language/CaverphoneTest.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/RFC1522CodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                }
            ],
            "date": "2011-04-01"
        },
        {
            "commit_id": 453,
            "hash": "a9ec5099cfd269c8530ebbb641d7e3d20eae147c",
            "commit_summary": "Use Generics and Java 5 for loop.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1088463 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                }
            ],
            "date": "2011-04-04"
        },
        {
            "commit_id": 454,
            "hash": "4c24017327dedd6744b308a6ccf6c5903e7dda99",
            "commit_summary": "Fix Javadoc typo.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1099568 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2011-05-04"
        },
        {
            "commit_id": 455,
            "hash": "94a565c045b28e66d8477656f82b55221eb96590",
            "commit_summary": "Document [CODEC-121]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1124218 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testSoftLineBreakEncode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"
                },
                {
                    "function name": "testSoftLineBreakDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"
                }
            ],
            "date": "2011-05-18"
        },
        {
            "commit_id": 456,
            "hash": "10920798d1133fd5a4f89061b679c2eaa6de09cb",
            "commit_summary": "[CODEC-123] ColognePhonetic Javadoc should use HTML entities for special characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1124223 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-05-18"
        },
        {
            "commit_id": 457,
            "hash": "2d76aa8e140c5c5eba12a7513aad7340ec84bf13",
            "commit_summary": "[CODEC-122] Add method testAychlmajrForCodec122.\nAlso fix class Javadoc \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1124236 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testAychlmajrForCodec122",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122"
                }
            ],
            "date": "2011-05-18"
        },
        {
            "commit_id": 458,
            "hash": "0626e9bc6b700b22a8e30066b9998b2d457be213",
            "commit_summary": "Remove duplicate test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1124405 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                }
            ],
            "date": "2011-05-18"
        },
        {
            "commit_id": 459,
            "hash": "608a7d6373e320789aaf7f1b9f91a5cf8af81998",
            "commit_summary": "[CODEC-124] Remove deprecated code for 2.0.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1125236 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/java/org/apache/commons/codec/binary/Base64.java",
                "src/java/org/apache/commons/codec/language/Soundex.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomWords",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords"
                },
                {
                    "function name": "testCaverphoneRevisitedExamples",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "testSpecificationExamples",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"
                },
                {
                    "function name": "testCaverphoneRevisitedCommonCodeAT11111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameKLN1111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameTTA1111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111"
                },
                {
                    "function name": "testCaverphoneRevisitedRandomNameTN11111111",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.org.apache.commons.codec.language.Caverphone2Test.testEndMb"
                },
                {
                    "function name": "validateState",
                    "function params": [
                        "urlCodec"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.validateState"
                }
            ],
            "date": "2011-05-20"
        },
        {
            "commit_id": 460,
            "hash": "1440a376ccd084fa50c7e6f7adf251bb0d489512",
            "commit_summary": "Fix Javadoc typos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1125237 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/Encoder.java"
            ],
            "functions": [],
            "date": "2011-05-20"
        },
        {
            "commit_id": 461,
            "hash": "acf70b38d27bf6063d76cd9897beafef8040ff02",
            "commit_summary": "Convert to Java 5 enhanced loops. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1145000 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "arrayContains",
                    "function params": [
                        "arr",
                        "key"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.arrayContains"
                },
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "isSilentStart",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.java.org.apache.commons.codec.language.DoubleMetaphone.isSilentStart"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QCodec.doDecoding"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence"
                },
                {
                    "function name": "checkEncodingVariations",
                    "function params": [
                        "expected"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations"
                },
                {
                    "function name": "checkEncodings",
                    "function params": [
                        "data"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32TestData.bytesContain"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64TestData.bytesContain"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.BCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.org.apache.commons.codec.net.URLCodecTest.constructString"
                }
            ],
            "date": "2011-07-11"
        },
        {
            "commit_id": 462,
            "hash": "c4d54bc44dd45c38bc44858f54a7e9de8ae2c39b",
            "commit_summary": "Make fields final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1145002 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2011-07-11"
        },
        {
            "commit_id": 463,
            "hash": "5d72a46abc9bfc8f8ed146b5f598106802761e21",
            "commit_summary": "Remove unnecessary cast\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1149651 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                }
            ],
            "date": "2011-07-22"
        },
        {
            "commit_id": 464,
            "hash": "1573a121c4fa7b39f4f49691cc5fde3cccf4c7a1",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. First commit. Thank you to Matthew Pocock for the contribution. TODO: PMD rules show code that needs to be changed to use StringBuffer in PhoneticEngine.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151311 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "isConcat",
                    "function params": [],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.isConcat"
                },
                {
                    "function name": "getNameType",
                    "function params": [],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.getNameType"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode"
                },
                {
                    "function name": "getRuleType",
                    "function params": [],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.getRuleType"
                },
                {
                    "function name": "setRuleType",
                    "function params": [
                        "ruleType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType"
                },
                {
                    "function name": "setNameType",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode"
                },
                {
                    "function name": "setConcat",
                    "function params": [
                        "concat"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat"
                },
                {
                    "function name": "LangRule",
                    "function params": [
                        "pattern",
                        "languages",
                        "acceptOnMatch"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.LangRule"
                },
                {
                    "function name": "Lang",
                    "function params": [
                        "rules",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.Lang"
                },
                {
                    "function name": "LangRule",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.LangRule"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "guessLanguage",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguage"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.instance"
                },
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Lang.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.for"
                },
                {
                    "function name": "Languages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.Languages"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.instance"
                },
                {
                    "function name": "getLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.getLanguages"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.instance"
                },
                {
                    "function name": "langResourceName",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.langResourceName"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Languages.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.for"
                },
                {
                    "function name": "NameType",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameType.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/NameType.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.NameType.NameType"
                },
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "NameType.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/NameType.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.NameType.getName"
                },
                {
                    "function name": "expand",
                    "function params": [
                        "phonetic"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.expand"
                },
                {
                    "function name": "join",
                    "function params": [
                        "strings",
                        "sep"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.join"
                },
                {
                    "function name": "getNameType",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.getNameType"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonetic",
                        "finalRules",
                        "languageArg",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "normalizeLanguageAttributes",
                    "function params": [
                        "text",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.normalizeLanguageAttributes"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "languageArg",
                        "input",
                        "phonetic",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "isConcat",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat"
                },
                {
                    "function name": "removeDuplicateAlternates",
                    "function params": [
                        "phonetic"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.removeDuplicateAlternates"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "getLang",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.getLang"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageArg"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "splitOnPipe",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.splitOnPipe"
                },
                {
                    "function name": "applyRuleIfCompatible",
                    "function params": [
                        "phonetic",
                        "target",
                        "languageArg"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyRuleIfCompatible"
                },
                {
                    "function name": "getRuleType",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.instance"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.instance"
                },
                {
                    "function name": "stripQuotes",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.stripQuotes"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme",
                        "language",
                        "logical"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "languageMatches",
                    "function params": [
                        "languageArg"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.languageMatches"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "mkScanner",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.mkScanner"
                },
                {
                    "function name": "mkScanner",
                    "function params": [
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.mkScanner"
                },
                {
                    "function name": "getPhoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getPhoneme"
                },
                {
                    "function name": "getPattern",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getPattern"
                },
                {
                    "function name": "getLanguage",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getLanguage"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "getRContext",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getRContext"
                },
                {
                    "function name": "getLogical",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getLogical"
                },
                {
                    "function name": "getLContext",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getLContext"
                },
                {
                    "function name": "getName",
                    "function params": [],
                    "file name": "RuleType.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/RuleType.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.RuleType.getName"
                },
                {
                    "function name": "RuleType",
                    "function params": [
                        "name"
                    ],
                    "file name": "RuleType.java",
                    "file old path": null,
                    "file new path": "src/java/org/apache/commons/codec/language/bm/RuleType.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.RuleType.RuleType"
                },
                {
                    "function name": "invalidLanguageResourceShouldRaiseException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.invalidLanguageResourceShouldRaiseException"
                },
                {
                    "function name": "setNameTypeAsh",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.setNameTypeAsh"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createStringEncoder"
                },
                {
                    "function name": "invalidLangResourceShouldRaiseException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.invalidLangResourceShouldRaiseException"
                },
                {
                    "function name": "setRuleTypeExact",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.setRuleTypeExact"
                },
                {
                    "function name": "negativeIndexForRuleMatchShouldRaiseException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.negativeIndexForRuleMatchShouldRaiseException"
                },
                {
                    "function name": "setConcat",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.setConcat"
                },
                {
                    "function name": "setRuleTypeToRulesShouldRaiseException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.setRuleTypeToRulesShouldRaiseException"
                },
                {
                    "function name": "invalidLangShouldRaiseException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.invalidLangShouldRaiseException"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                },
                {
                    "function name": "LanguageGuessingTest",
                    "function params": [
                        "name",
                        "language",
                        "exactness"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticTest.data"
                },
                {
                    "function name": "PhoneticTest",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticTest.PhoneticTest"
                },
                {
                    "function name": "testPhonetic",
                    "function params": [],
                    "file name": "PhoneticTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticTest.testPhonetic"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.data"
                },
                {
                    "function name": "RuleTest",
                    "function params": [
                        "caseName",
                        "rule",
                        "langs",
                        "expected"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.RuleTest"
                },
                {
                    "function name": "rule",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": null,
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.rule"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 465,
            "hash": "479b5d3fbb28f30801807bf3afc29b195e0366dc",
            "commit_summary": "Better names: languageArg -> languageSet\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151318 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageArg"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 466,
            "hash": "ce66f92033c01bcbb8ea2b22f59e1e9a5961e8c7",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Fix test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151455 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSetConcat",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"
                },
                {
                    "function name": "testInvalidLangIllegalStateException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"
                },
                {
                    "function name": "testSetRuleTypeExact",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"
                },
                {
                    "function name": "testInvalidLangIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"
                },
                {
                    "function name": "testSetNameTypeAsh",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"
                },
                {
                    "function name": "testInvalidLanguageIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"
                },
                {
                    "function name": "testSetRuleTypeToRulesIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"
                },
                {
                    "function name": "testNegativeIndexForRuleMatchIndexOutOfBoundsException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"
                },
                {
                    "function name": "PhoneticEngineTest",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 467,
            "hash": "c6c8ae7a68c4c45f25d1fb11ad62171fffedeb6a",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Fix test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151456 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "testRuleLanguageMatches",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.testRuleLanguageMatches"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 468,
            "hash": "16e78c484c6357d288b8f23bad9b038e549cef68",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Fix test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151457 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 469,
            "hash": "5710914d10aa125e6b2d611cc113b04b7fc4ffbd",
            "commit_summary": "@Ignore test for https://issues.apache.org/jira/browse/CODEC-125?focusedCommentId=13071566&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13071566\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151458 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testInvalidLangIllegalStateException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"
                },
                {
                    "function name": "encodeGna",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.encodeGna"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 470,
            "hash": "b90ffb4daae5a1767fc6dc987468d300e5a4bcde",
            "commit_summary": "Do not overwrite input argument.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151539 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 471,
            "hash": "5a9c79f6d7f0c2849320d573fc1f92fd89c570b8",
            "commit_summary": "Make fields final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151540 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2011-07-27"
        },
        {
            "commit_id": 472,
            "hash": "d61d1cf0652ef679bf18e3668ebe99a17a0d0f85",
            "commit_summary": "Rename language to languages (it is a Set.)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151541 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme",
                        "language",
                        "logical"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme",
                        "languages",
                        "logical"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "getLanguages",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getLanguages"
                },
                {
                    "function name": "languageMatches",
                    "function params": [
                        "languageArg"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.languageMatches"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 473,
            "hash": "925e8044356673d0bd6bd5caa8cfabe37c7c1337",
            "commit_summary": "Minor class Javadoc'ing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151544 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2011-07-27"
        },
        {
            "commit_id": 474,
            "hash": "591a2ecaf3fd08b8f77d2f1e2e15f2258b583fae",
            "commit_summary": "Rename test method.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151546 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "testEncodeGna",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 475,
            "hash": "a5faa6d74944aaa8afd245190fa9b8aede6248b1",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151549 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "applyRuleIfCompatible",
                    "function params": [
                        "phonetic",
                        "target",
                        "languageArg"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyRuleIfCompatible"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 476,
            "hash": "567b8e5a9b1ee42e2709ba7d32d452a712564101",
            "commit_summary": "Format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151550 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 477,
            "hash": "87c482725e50eadf01d7312c8eac1be2e7d50ce9",
            "commit_summary": "@Ignore failing test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151551 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2011-07-27"
        },
        {
            "commit_id": 478,
            "hash": "0224a5efcca8f29db7faa71cef90ea5ed543ae46",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151553 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "normalizeLanguageAttributes",
                    "function params": [
                        "input",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.normalizeLanguageAttributes"
                },
                {
                    "function name": "normalizeLanguageAttributes",
                    "function params": [
                        "text",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.normalizeLanguageAttributes"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 479,
            "hash": "d85ae3aaaac18a8f672bab6c1b1acdc3f24ba0a4",
            "commit_summary": "Use Languages.ANY instead of \"any\". Refine temp test output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151556 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "instance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.instance"
                },
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 480,
            "hash": "53f15e128a1b5fd872c68c922ec8aab1b1a8c578",
            "commit_summary": "Remove extra ( )\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151557 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "normalizeLanguageAttributes",
                    "function params": [
                        "input",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.normalizeLanguageAttributes"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 481,
            "hash": "07e106fcd227cb0d5bbac3d18dc7f2ebd3906607",
            "commit_summary": "Add @Ignore testLongestEnglishSurname which takes too long.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151563 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testLongestEnglishSurname",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 482,
            "hash": "437ae4586cadb054e2a7a078578a4213dd45d47e",
            "commit_summary": "Make static final field all caps.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151578 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 483,
            "hash": "bd0a96e8f61c3a5209e60efe2d60962b98735300",
            "commit_summary": "Make fields final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151579 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java"
            ],
            "functions": [],
            "date": "2011-07-27"
        },
        {
            "commit_id": 484,
            "hash": "a72621c3791a66090274bf5ae42e92114babb872",
            "commit_summary": "[CODEC-126] Make org.apache.commons.codec.net.URLCodec charset field final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151583 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2011-07-27"
        },
        {
            "commit_id": 485,
            "hash": "cec801e6b0050ab4d8d94872b92473b1a4cf0f2d",
            "commit_summary": "Fix failing test \"gna\": org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151603 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "expand",
                    "function params": [
                        "phonetic"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.expand"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "createResourceName",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.createResourceName"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "validatePhenome",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.validatePhenome"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                }
            ],
            "date": "2011-07-27"
        },
        {
            "commit_id": 486,
            "hash": "b7d0dab28185046ffc64b8f36d231a2274b839c6",
            "commit_summary": "Fix failing test \"gna\": org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna()\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151604 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2011-07-27"
        },
        {
            "commit_id": 487,
            "hash": "ddc7143ed89a6c92bbafb89bbe8e1fc4937a878c",
            "commit_summary": "Fix all current issues in [CODEC-125] including the big performance issue. Thanks to a patch from Matthew Pocock! Some clean ups and more tests are needed but this is looking much better now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151715 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "guessLanguage",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguage"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "language"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonetic",
                        "finalRules",
                        "languageArg",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "languageArg",
                        "input",
                        "phonetic",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "languages"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules",
                        "languageSet",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "languageSet",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "parsePhonemeExpr",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.instance"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme",
                        "languages",
                        "logical"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.instance"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "getPhoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getPhoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "parsePhoneme",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parsePhoneme"
                },
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "testNegativeIndexForRuleMatchIndexOutOfBoundsException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.data"
                }
            ],
            "date": "2011-07-28"
        },
        {
            "commit_id": 488,
            "hash": "fee232d8cd73010fdcfee15ef1d3cb54a716a437",
            "commit_summary": "Make static fields final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151848 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Languages.java"
            ],
            "functions": [
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                }
            ],
            "date": "2011-07-28"
        },
        {
            "commit_id": 489,
            "hash": "ae537ccef18ed5d78c89a750f99258e87d409948",
            "commit_summary": "Follow FindBugs suggestion and make class inner class static: Should org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication be a _static_ inner class?\tPERFORMANCE\tSIC_INNER_SHOULD_BE_STATIC\t298-344\tMedium.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151850 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2011-07-28"
        },
        {
            "commit_id": 490,
            "hash": "feb22812e14df3863e7b8d3156def7e0379abc01",
            "commit_summary": "Fix Checkstyle issue with license headers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1151868 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/java/org/apache/commons/codec/language/bm/RuleType.java"
            ],
            "functions": [],
            "date": "2011-07-28"
        },
        {
            "commit_id": 491,
            "hash": "40dee74b30d97410fa0e31b08d484be489afa510",
            "commit_summary": "Add @Ignore testEncodeAtz() from https://issues.apache.org/jira/browse/CODEC-125?focusedCommentId=13072496&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13072496\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1152066 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeAtz",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtz"
                }
            ],
            "date": "2011-07-29"
        },
        {
            "commit_id": 492,
            "hash": "cc17109d2cce8ca52f484dde84c38f8ae51a2f63",
            "commit_summary": "languageSet was not read, so removed from private class and callers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1152359 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules",
                        "languageSet",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "languageSet",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                }
            ],
            "date": "2011-07-29"
        },
        {
            "commit_id": 493,
            "hash": "c35dcd2b488f4d2368d8db6d0f92c27b03794cc8",
            "commit_summary": "Apply patch based on https://issues.apache.org/jira/secure/attachment/12488362/acz.patch for [CODEC-125]\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1152642 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "Languages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.Languages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "getLanguages",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.getLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "language"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "join",
                    "function params": [
                        "strings",
                        "sep"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.join"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "languages"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules",
                        "languageSet",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "parsePhonemeExpr",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "parsePhoneme",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parsePhoneme"
                },
                {
                    "function name": "testEncodeAtz",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtz"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.data"
                }
            ],
            "date": "2011-07-31"
        },
        {
            "commit_id": 494,
            "hash": "5ecb2b8549ea8677d450d16d387ec9f4cbcbbc1a",
            "commit_summary": "Add tests for https://issues.apache.org/jira/browse/CODEC-125?focusedCommentId=13073380&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13073380\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1152645 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeAtzNotEmpty",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"
                }
            ],
            "date": "2011-07-31"
        },
        {
            "commit_id": 495,
            "hash": "377691c6a2c8e7f4798584d1bd4f2c8749f2fc11",
            "commit_summary": "we\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1152647 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncodeAtzNotEmpty",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"
                }
            ],
            "date": "2011-07-31"
        },
        {
            "commit_id": 496,
            "hash": "54f7ca3483251eab0621f75a3373231129753767",
            "commit_summary": "Add edge case tests (which may not make sense, I need to check with Matthew)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1152651 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "assertNotEmpty",
                    "function params": [
                        "bmpm",
                        "value"
                    ],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty1Letter",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"
                },
                {
                    "function name": "testEncodeAtzNotEmpty",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty2Letters",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"
                }
            ],
            "date": "2011-07-31"
        },
        {
            "commit_id": 497,
            "hash": "c714697cb1a79c30ec4a30adc14d8efbdd9933c7",
            "commit_summary": "Fix FindBugs issues.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1153502 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                }
            ],
            "date": "2011-08-03"
        },
        {
            "commit_id": 498,
            "hash": "0bc53db8bdba6c605fec29fd2c55ad847e14b2a2",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Apply Matthew's patch https://issues.apache.org/jira/secure/attachment/12489480/handleH.patch. Also: Reduce speed test loop boundary.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154269 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                }
            ],
            "date": "2011-08-05"
        },
        {
            "commit_id": 499,
            "hash": "6e2c9e115d9a3f37f47fc4162c20aa4e70f23e7b",
            "commit_summary": "Remove dead comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154271 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [],
            "date": "2011-08-05"
        },
        {
            "commit_id": 500,
            "hash": "43f0bf573406415b578aae341b08af949ea031ce",
            "commit_summary": "Bullet-proofing: Tests we do not blow up for any char input.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154276 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testLongestEnglishSurname",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty1Letter",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"
                },
                {
                    "function name": "createGenericApproxEncoder",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createGenericApproxEncoder"
                },
                {
                    "function name": "testEncodeAtzNotEmpty",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"
                },
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "testEncodeGna",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"
                },
                {
                    "function name": "testAllChars",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty2Letters",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"
                }
            ],
            "date": "2011-08-05"
        },
        {
            "commit_id": 501,
            "hash": "d202ba3b9b4a294499231446b7abe351ede0f997",
            "commit_summary": "Remove unused parameters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154282 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules",
                        "languageSet",
                        "strip"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                }
            ],
            "date": "2011-08-05"
        },
        {
            "commit_id": 502,
            "hash": "161677911f5ab798708503eb13859e8403281c7f",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Apply Matthew's patch https://issues.apache.org/jira/secure/attachment/12489548/performanceAndBugs.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154423 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "startsWith",
                    "function params": [
                        "input",
                        "prefix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.startsWith"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "index"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "start",
                        "end"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "o"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "getRContext",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getRContext"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "endsWith",
                    "function params": [
                        "input",
                        "suffix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.endsWith"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "left",
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "getLContext",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getLContext"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "sb"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "chars",
                        "input"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.contains"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "description"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "makePhonemes",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.makePhonemes"
                },
                {
                    "function name": "phonemeComparedToSelfIsZero",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.phonemeComparedToSelfIsZero"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "item"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "phonemeComparedToLaterIsNegative",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.phonemeComparedToLaterIsNegative"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 503,
            "hash": "6677acc3d03e2b68c6f0298285d35443c4ee0e3a",
            "commit_summary": "Code clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154427 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "guessLanguage",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguage"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "phoneticUtf8",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.phoneticUtf8"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 504,
            "hash": "e04a7e54a68bb76a7bf5c00c5c6f1efc83680e9c",
            "commit_summary": "Code clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154429 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "Phoneme",
                    "function params": [
                        "o"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 505,
            "hash": "1c7dec13b004f8c248ffb9203265f0d67bfe04ae",
            "commit_summary": "Code clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154430 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2011-08-06"
        },
        {
            "commit_id": 506,
            "hash": "9272992fc5edfae9ef806e5dd5ff926cded07cfe",
            "commit_summary": "Code clean ups.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "startsWith",
                    "function params": [
                        "input",
                        "prefix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.startsWith"
                },
                {
                    "function name": "endsWith",
                    "function params": [
                        "input",
                        "suffix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.endsWith"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.instance"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 507,
            "hash": "e3b7364d4d48f71f2583f2215da3bde8d890b359",
            "commit_summary": "Better API names (IMO)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154432 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.for"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.for"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "testInvalidLangIllegalStateException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalStateException"
                },
                {
                    "function name": "testInvalidLanguageIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException"
                },
                {
                    "function name": "testInvalidLangIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 508,
            "hash": "92fab79e30573bd8fbe3aad4a37ae3c6e6c38871",
            "commit_summary": "Sort methods AB.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154433 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "description"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "phonemeComparedToSelfIsZero",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.phonemeComparedToSelfIsZero"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "item"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 509,
            "hash": "dfff43abfeb97d5b34f6c7a3e779f1ba804b6631",
            "commit_summary": "Sort methods AB.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154434 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "getNameType",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.getNameType"
                },
                {
                    "function name": "isConcat",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.isConcat"
                },
                {
                    "function name": "getRuleType",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.getRuleType"
                },
                {
                    "function name": "getLang",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.getLang"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "start",
                        "end"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "getPattern",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getPattern"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "sb"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "index"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "stripQuotes",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.stripQuotes"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "getPhoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getPhoneme"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "getRContext",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getRContext"
                },
                {
                    "function name": "AppendableCharSeqeuence",
                    "function params": [
                        "left",
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AppendableCharSeqeuence"
                },
                {
                    "function name": "endsWith",
                    "function params": [
                        "input",
                        "suffix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.endsWith"
                },
                {
                    "function name": "getLContext",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.getLContext"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "chars",
                        "input"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.contains"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 510,
            "hash": "45041961f9015e8c89873deef96c5bdfeea19e6b",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Apply Matthew's patch https://issues.apache.org/jira/secure/attachment/12489569/fixmeInvariant.patch. This patch hoists the l-invariant code out of the loop over l. The d'ortley test input string exercises this branch. The \"van helsing\" input string should be exercising the alternate branch. Thank you MP!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154541 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                }
            ],
            "date": "2011-08-06"
        },
        {
            "commit_id": 511,
            "hash": "8317dc1a2924cfdaac6171418feffa7d15dfa311",
            "commit_summary": "Set test length to 40. Runs between 1.1 and 13 seconds at length 40 for me.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154639 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                }
            ],
            "date": "2011-08-07"
        },
        {
            "commit_id": 512,
            "hash": "dbe80e777ef25eca49e1c105409f84d7b30fde0c",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Methods in public interfaces are implicitly public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154723 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2011-08-07"
        },
        {
            "commit_id": 513,
            "hash": "9d1cc884ad052083fb72b4107a62b0cbe3c2a027",
            "commit_summary": "Javadoc: use the active voice.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154724 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2011-08-07"
        },
        {
            "commit_id": 514,
            "hash": "446dbef41a70e70e6c5993ff314c2a27e27fdc3e",
            "commit_summary": "Consistent {} usage.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154725 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                }
            ],
            "date": "2011-08-07"
        },
        {
            "commit_id": 515,
            "hash": "2ba6771d5958050e5fee61bf02b9eba9fc816152",
            "commit_summary": "Factor out constant answer in a singleton to save lots of memory on start up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154726 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "TrueRMatcher",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.TrueRMatcher"
                }
            ],
            "date": "2011-08-07"
        },
        {
            "commit_id": 516,
            "hash": "c74687e6ceef93101371c3ad066c542723087f4f",
            "commit_summary": "Factor out constant answer in a singleton to save lots of memory on start up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154729 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2011-08-07"
        },
        {
            "commit_id": 517,
            "hash": "b263fbfc808f7aab183890aea682557720a1ec86",
            "commit_summary": "Factor out constant answer in a singleton to save lots of memory on start up.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154730 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [],
            "date": "2011-08-07"
        },
        {
            "commit_id": 518,
            "hash": "5214caa011c0a976475f1f5ed2fbe4aa54c08589",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. No need to create 7000+ of the same object on startup and keep it around.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1154949 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "AllStringsRMatcher",
                    "function params": [
                        "input"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.AllStringsRMatcher"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.pattern"
                }
            ],
            "date": "2011-08-08"
        },
        {
            "commit_id": 519,
            "hash": "0c0c69288e84e858a34a0db2c1c385a35235f437",
            "commit_summary": "Renamed testSpeedCheck to testSpeedCheckRandom. Made testSpeedCheck deterministic.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1155027 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "testSpeedCheckRandom",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheckRandom"
                }
            ],
            "date": "2011-08-08"
        },
        {
            "commit_id": 520,
            "hash": "26951aa855bdd1927609a2dc72900a0adac08c6f",
            "commit_summary": "Add testSpeedCheckAZ\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1155040 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpeedCheckRandom",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheckRandom"
                },
                {
                    "function name": "testSpeedCheckAZ",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheckAZ"
                }
            ],
            "date": "2011-08-08"
        },
        {
            "commit_id": 521,
            "hash": "29524ee6b16bde662d61c69635760f574f12c1b7",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Applied patch https://issues.apache.org/jira/secure/attachment/12489755/fightingMemoryChurn.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1155135 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "guessLanguage",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.guessLanguage"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "cacheSubSequence",
                    "function params": [
                        "cached"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.cacheSubSequence"
                },
                {
                    "function name": "RPattern",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.RPattern"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "testSpeedCheck3",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"
                },
                {
                    "function name": "testSpeedCheck2",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"
                },
                {
                    "function name": "subSequenceWorks",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.subSequenceWorks"
                }
            ],
            "date": "2011-08-08"
        },
        {
            "commit_id": 522,
            "hash": "eafc2b9db93198b247c9481f9934226c11a12fb9",
            "commit_summary": "[CODEC-125] Implement a Beider-Morse phonetic matching codec. Applied patch https://issues.apache.org/jira/secure/attachment/12489767/comparator.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1155182 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "phonemeComparedToSelfIsZero",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.phonemeComparedToSelfIsZero"
                },
                {
                    "function name": "phonemeComparedToLaterIsNegative",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.phonemeComparedToLaterIsNegative"
                }
            ],
            "date": "2011-08-09"
        },
        {
            "commit_id": 523,
            "hash": "c2809b4b7ebbf2153114f0803d6b12e7f35cf5fd",
            "commit_summary": "Prefix @Test method names with \"test\".\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1155183 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "testPhonemeComparedToLaterIsNegative",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"
                },
                {
                    "function name": "testPhonemeComparedToSelfIsZero",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"
                },
                {
                    "function name": "testSubSequenceWorks",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"
                }
            ],
            "date": "2011-08-09"
        },
        {
            "commit_id": 524,
            "hash": "21d7caa09a2f0e4565670204e20301f9f8d71ed2",
            "commit_summary": "Repackage .codec. to .codec2. Change POM grouId from commons-codec to org.apache.commons. Change artifactId from commons-codec to commons-codec2.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1156841 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2011-08-11"
        },
        {
            "commit_id": 525,
            "hash": "d905bc98e372c13c1c43ccc60bfa688bf7531e07",
            "commit_summary": "Revert previous commit. update C:/svn/org/apache/commons/trunks-proper/codec -r HEAD --force\n    At revision 1157191.\nmerge --depth=infinity -r1156841:1156840 https://svn.apache.org/repos/asf/commons/proper/codec/trunk C:/svn/org/apache/commons/trunks-proper/codec\n    Status against revision: 1157191\n    --- Reverse-merging r1156841 through r1156840 into C:/svn/org/apache/commons/trunks-proper/codec\n    U   C:/svn/org/apache/commons/trunks-proper/codec/default.properties\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/digest\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/digest/DigestUtilsTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/ColognePhoneticTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/MetaphoneTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/RefinedSoundexTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/SoundexTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/Caverphone1Test.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/Caverphone2Test.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/DoubleMetaphone2Test.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/bm\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/bm/PhoneticEngineTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/bm/RuleTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/CharEncodingTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/DecoderExceptionTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base32Test.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/BinaryCodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base64Test.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/HexTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base64Codec13Test.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/BaseNCodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/StringUtilsTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base32TestData.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Codec105ErrorInputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/binary/Base64TestData.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net/BCodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net/QuotedPrintableCodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net/URLCodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net/UtilsTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net/RFC1522CodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/net/QCodecTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/BinaryEncoderAbstractTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/StringEncoderAbstractTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/EncoderExceptionTest.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec/StringEncoderComparatorTest.java\n    D   C:/svn/org/apache/commons/trunks-proper/codec/src/test/org/apache/commons/codec2\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/digest\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/digest/DigestUtils.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/digest/package.html\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/ColognePhonetic.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/Metaphone.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/RefinedSoundex.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/Soundex.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/SoundexUtils.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/Caverphone1.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/DoubleMetaphone.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/Caverphone2.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/AbstractCaverphone.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/Lang.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/NameType.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/ResourceConstants.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/Languages.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/Rule.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/bm/RuleType.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/language/package.html\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Base32.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Base64InputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Base64OutputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/BinaryCodec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Base64.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Hex.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/BaseNCodec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/StringUtils.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Base32InputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/Base32OutputStream.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/binary/package.html\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/Decoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/StringEncoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/BCodec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/QuotedPrintableCodec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/URLCodec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/Utils.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/RFC1522Codec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/QCodec.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/net/package.html\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/BinaryDecoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/package.html\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/Encoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/BinaryEncoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/CharEncoding.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/DecoderException.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/overview.html\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/StringDecoder.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/EncoderException.java\n    A   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec/StringEncoderComparator.java\n    D   C:/svn/org/apache/commons/trunks-proper/codec/src/java/org/apache/commons/codec2\n    U   C:/svn/org/apache/commons/trunks-proper/codec/pom.xml\n    Merge complete.\n    ===== File Statistics: =====\n    Deleted: 2\n    Added: 101\n    Updated: 2\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157192 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2011-08-12"
        },
        {
            "commit_id": 526,
            "hash": "b94d06cadfb8795cf19315158624f792ee666510",
            "commit_summary": "Javadoc: replace mangled char with HTML version\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157443 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-08-13"
        },
        {
            "commit_id": 527,
            "hash": "2e94c832384093901692765f901f510115bfed79",
            "commit_summary": "[CODEC-127] Non-ascii characters in source files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157545 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-08-14"
        },
        {
            "commit_id": 528,
            "hash": "45c71b732ee51851882898bfa331d0563b7291d6",
            "commit_summary": "[CODEC-127] Non-ascii characters in source files\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157550 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2011-08-14"
        },
        {
            "commit_id": 529,
            "hash": "800bfcaa98b883574e3f34f0100d55543d2826a8",
            "commit_summary": "Fix mangled chars (was e-acute, see r799815)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157579 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                }
            ],
            "date": "2011-08-14"
        },
        {
            "commit_id": 530,
            "hash": "03af5cc99956ac0b60ba64bfccc0389587b584ff",
            "commit_summary": "Fix mangled char\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157582 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                }
            ],
            "date": "2011-08-14"
        },
        {
            "commit_id": 531,
            "hash": "b472b1742ad55d0cdef007f10f6062990300eaf8",
            "commit_summary": "CODEC-127 - fix mangled characters\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157597 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                }
            ],
            "date": "2011-08-14"
        },
        {
            "commit_id": 532,
            "hash": "300d24e65b215b1e8278286bc8b1d7a0a9a871d6",
            "commit_summary": "CODEC-127 Convert to use Unicode in strings, but add comments in native encoding (utf-8)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157892 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                }
            ],
            "date": "2011-08-15"
        },
        {
            "commit_id": 533,
            "hash": "dace53f5b2dc2791fc6a0c6981fe2756be405cec",
            "commit_summary": "CODEC-127 Fix corrupted character\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157936 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                }
            ],
            "date": "2011-08-15"
        },
        {
            "commit_id": 534,
            "hash": "6db3ec307d73d1f80391e593789d2175b668d761",
            "commit_summary": "Test is useless unless it actually checks the result!\n[No wonder the corrupted chars were not found]\nSee CODEC-127\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157945 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                }
            ],
            "date": "2011-08-15"
        },
        {
            "commit_id": 535,
            "hash": "6f73fb162af41879fa801d86ae2772a9ac14121c",
            "commit_summary": "CODEC-127 Convert to use Unicode except in comments\nAlso simplify test\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157962 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testSetConcat",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"
                },
                {
                    "function name": "testEncodeAtzNotEmpty",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"
                }
            ],
            "date": "2011-08-15"
        },
        {
            "commit_id": 536,
            "hash": "7211918f48e27560e523727beff689ff8545ecd2",
            "commit_summary": "CODEC-127 Convert to use Unicode except in comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1157963 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.org.apache.commons.codec.language.bm.LanguageGuessingTest.data"
                }
            ],
            "date": "2011-08-15"
        },
        {
            "commit_id": 537,
            "hash": "486aa04647bb4f652015f3ea02c82b79c80a3de5",
            "commit_summary": "Rename to avoid name hiding\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1158920 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2011-08-17"
        },
        {
            "commit_id": 538,
            "hash": "3044c24009ed733df16e5a2a0e554edfaf5cbde3",
            "commit_summary": "Use blocks. Refer to constants where they are defined in BaseNCodec instead of the Base32 and Base64 subclasses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1161342 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "cacheSubSequence",
                    "function params": [
                        "cached"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.java.org.apache.commons.codec.language.bm.PhoneticEngine.cacheSubSequence"
                },
                {
                    "function name": "testBase32EmptyInputStreamMimeChuckSize",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize"
                },
                {
                    "function name": "testBase32EmptyInputStreamPemChuckSize",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize"
                },
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testBase32EmptyOutputStreamPemChunkSize",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testBase32EmptyOutputStreamMimeChunkSize",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testBase64EmptyInputStreamMimeChuckSize",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testBase64EmptyInputStreamPemChuckSize",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testBase64EmptyOutputStreamPemChunkSize",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize"
                },
                {
                    "function name": "testBase64EmptyOutputStreamMimeChunkSize",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize"
                },
                {
                    "function name": "testRfc1421Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc1421Section6Dot8ChunkSizeDefinition"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testRfc2045Section6Dot8ChunkSizeDefinition",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.org.apache.commons.codec.binary.Base64Test.testRfc2045Section6Dot8ChunkSizeDefinition"
                }
            ],
            "date": "2011-08-25"
        },
        {
            "commit_id": 539,
            "hash": "919d3ec4adbaf64cb6b7e9f40f82432b2159d510",
            "commit_summary": "Apply patch from [CODEC-128] Documentation spelling fixes. https://issues.apache.org/jira/secure/attachment/12494312/codec-spelling.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1170351 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/java/org/apache/commons/codec/CharEncoding.java",
                "src/java/org/apache/commons/codec/Encoder.java",
                "src/java/org/apache/commons/codec/StringEncoder.java",
                "src/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/java/org/apache/commons/codec/net/QCodec.java",
                "src/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2011-09-13"
        },
        {
            "commit_id": 540,
            "hash": "35cbae7087f2fef6dcf38c3d4fcac0b4d62cb1eb",
            "commit_summary": "[CODEC-129] Use standard Maven directory layout.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1173287 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2011-09-20"
        },
        {
            "commit_id": 541,
            "hash": "034c04194dba4a3d8b7282940f3f99ade6bf9a95",
            "commit_summary": "[CODEC-130] Base64InputStream.skip skips underlying stream, not output. Add tests for skip(long) edge cases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1175973 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                }
            ],
            "date": "2011-09-26"
        },
        {
            "commit_id": 542,
            "hash": "21015931d11bae2a37e390ff70ae55606a692ac1",
            "commit_summary": "[CODEC-130] Base64InputStream.skip skips underlying stream, not output. Add tests for skip(long) edge cases for the Base32 version of the code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1175974 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                }
            ],
            "date": "2011-09-26"
        },
        {
            "commit_id": 543,
            "hash": "b5657da870ca0947c7de4bf94b4b2cc5e23b3698",
            "commit_summary": "Apply documentation patch from Matthew Pocock. Thank you Matthew!\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1201511 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                }
            ],
            "date": "2011-11-13"
        },
        {
            "commit_id": 544,
            "hash": "0a2240910cd17193faa6beec3b97275e65163ba7",
            "commit_summary": "Javadoc: Use the active voice and small typos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1201514 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2011-11-13"
        },
        {
            "commit_id": 545,
            "hash": "d44dc8b805a7b8a99b264c5bd3f7acf8371247ef",
            "commit_summary": "Add back ctor for 1.6 to keep binary compatibility.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1201520 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [
                {
                    "function name": "StringEncoderComparator",
                    "function params": [],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.main.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                }
            ],
            "date": "2011-11-13"
        },
        {
            "commit_id": 546,
            "hash": "1d8ec5a48180fbbcf245110eaeb7841f6e305242",
            "commit_summary": "Comment out BM test console output.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1201528 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                }
            ],
            "date": "2011-11-13"
        },
        {
            "commit_id": 547,
            "hash": "bdf8e5c049a7f6bbe706c6d35bff55a79bba1e65",
            "commit_summary": "Add back code for 1.6 to keep binary compatibility.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1201529 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "caverphone",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "Caverphone",
                    "function params": [],
                    "file name": "Caverphone.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.Caverphone"
                },
                {
                    "function name": "setMaxLength",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.setMaxLength"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "getMaxLength",
                    "function params": [],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.getMaxLength"
                },
                {
                    "function name": "getEncoding",
                    "function params": [],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.getEncoding"
                }
            ],
            "date": "2011-11-13"
        },
        {
            "commit_id": 548,
            "hash": "197f9e393760d2add973a2bb492481eb00ec3de6",
            "commit_summary": "eol-style\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1202279 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java"
            ],
            "functions": [
                {
                    "function name": "caverphone",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "Caverphone",
                    "function params": [],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.Caverphone"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                }
            ],
            "date": "2011-11-15"
        },
        {
            "commit_id": 549,
            "hash": "f3db0de1fe8c429bd3c869108074fed4bdf25b3a",
            "commit_summary": "@Igore tests for a lineSeparator much bigger than DEFAULT_BUFFER_SIZE. See http://mail-archives.apache.org/mod_mbox/commons-dev/201202.mbox/%3C4F3C85D7.5060706@snafu.de%3E\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1245005 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                }
            ],
            "date": "2012-02-16"
        },
        {
            "commit_id": 550,
            "hash": "7e8c20bd1b0593c3496a168be573aed40609a433",
            "commit_summary": "[CODEC-121] QuotedPrintableCodec does not support soft line break per the 'quoted-printable' example on Wikipedia. Apply patch with minor modifications.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1297993 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "isWhitespace",
                    "function params": [
                        "b"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace"
                },
                {
                    "function name": "getUnsignedOctet",
                    "function params": [
                        "index",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "encodeByte",
                    "function params": [
                        "b",
                        "encode",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "testSoftLineBreakEncode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"
                },
                {
                    "function name": "testSoftLineBreakDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"
                },
                {
                    "function name": "testSkipNotEncodedCRLF",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF"
                },
                {
                    "function name": "testTrailingSpecial",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial"
                },
                {
                    "function name": "testUltimateSoftBreak",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak"
                },
                {
                    "function name": "testFinalBytes",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes"
                }
            ],
            "date": "2012-03-07"
        },
        {
            "commit_id": 551,
            "hash": "facbc3a39c5eb2ce190c1ec597015da47c51b2c8",
            "commit_summary": "[CODEC-132] BeiderMorseEncoder OOM issues\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298118 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "setMaxPhonemes",
                    "function params": [
                        "maxPhonemes"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes"
                },
                {
                    "function name": "setNameType",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType"
                },
                {
                    "function name": "setRuleType",
                    "function params": [
                        "ruleType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType"
                },
                {
                    "function name": "setConcat",
                    "function params": [
                        "concat"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "getMaxPhonemes",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.getMaxPhonemes"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty1Letter",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"
                },
                {
                    "function name": "testOOM",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"
                },
                {
                    "function name": "testAllChars",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                },
                {
                    "function name": "PhoneticEngineTest",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest"
                },
                {
                    "function name": "PhoneticEngineTest",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest"
                },
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                }
            ],
            "date": "2012-03-07"
        },
        {
            "commit_id": 552,
            "hash": "75cba401aebe256ccea215674cfe403bbe4a1a75",
            "commit_summary": "[CODEC-131] Updated links to reference material.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298173 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2012-03-07"
        },
        {
            "commit_id": 553,
            "hash": "84e1e79f3837fd112ae33ce03102abfe55ceedd4",
            "commit_summary": "[CODEC-63] Implement NYSIIS. Adding Encoder class and test both in the test directory until the encoder is fully baked. This should make it easier to patch further.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298387 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "Nysiis",
                    "function params": [],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.Nysiis"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "isTrueLength",
                    "function params": [],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.isTrueLength"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "c"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.isVowel"
                },
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.nysiis"
                },
                {
                    "function name": "Nysiis",
                    "function params": [
                        "trueLength"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.Nysiis"
                },
                {
                    "function name": "transcodeRemaining",
                    "function params": [
                        "prev",
                        "curr",
                        "next",
                        "aNext"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Nysiis.transcodeRemaining"
                },
                {
                    "function name": "testTranan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTranan"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.encodeAll"
                },
                {
                    "function name": "testSnad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnad"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [
                        "trueLength"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.createStringEncoder"
                },
                {
                    "function name": "testCap",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testCap"
                },
                {
                    "function name": "testSnat",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnat"
                },
                {
                    "function name": "testDan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDan"
                },
                {
                    "function name": "testDropBy",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.createStringEncoder"
                },
                {
                    "function name": "testDad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDad"
                },
                {
                    "function name": "testFal",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testFal"
                },
                {
                    "function name": "testBran",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testBran"
                },
                {
                    "function name": "testOthers",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testOthers"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 554,
            "hash": "805103c2fd53bf2a82575699da9b4f38a59c17fe",
            "commit_summary": "[CODEC-63] Implement NYSIIS. Adding Encoder class and test both in the test directory until the encoder is fully baked. This should make it easier to patch further.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298389 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testSnat",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSnat"
                },
                {
                    "function name": "testCap",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testCap"
                },
                {
                    "function name": "testDan",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDan"
                },
                {
                    "function name": "testDad",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDad"
                },
                {
                    "function name": "testFal",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testFal"
                },
                {
                    "function name": "testBran",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testBran"
                },
                {
                    "function name": "testDropBy2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy2"
                },
                {
                    "function name": "testOthers",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testOthers"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 555,
            "hash": "229ed00b517f1cc0e1262c6903d9e4e3f22d7896",
            "commit_summary": "[CODEC-63] Added explanation for different results to dropby.com, Raised CC to 100/100\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298576 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testSpecialBranches",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSpecialBranches"
                },
                {
                    "function name": "testDropBy2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy2"
                },
                {
                    "function name": "testTrueVariant",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTrueVariant"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 556,
            "hash": "28cb227f3b335fd11422e0579ed715624f6ed670",
            "commit_summary": "fixed spelling in NysiisTest\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298588 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testDropBy2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy2"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 557,
            "hash": "9869cfec93717e4a74433b5b954903a87e6e0868",
            "commit_summary": "More tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298599 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testTrueVariant",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTrueVariant"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [
                        "trueLength"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.createStringEncoder"
                },
                {
                    "function name": "testRule1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule1"
                },
                {
                    "function name": "testSpecialBranches",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testSpecialBranches"
                },
                {
                    "function name": "testRule4Dot1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot1"
                },
                {
                    "function name": "testRule2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule2"
                },
                {
                    "function name": "testRule6",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule6"
                },
                {
                    "function name": "testDropBy",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy"
                },
                {
                    "function name": "testRule5",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule5"
                },
                {
                    "function name": "testRule7",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule7"
                },
                {
                    "function name": "testDropBy2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy2"
                },
                {
                    "function name": "testOthers",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testOthers"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 558,
            "hash": "56219f1c3da9fb118c5e7a02525da397ee4f0f88",
            "commit_summary": "Move Nysiis into the main code base. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298610 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "isTrueLength",
                    "function params": [],
                    "file name": "Nysiis.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.isTrueLength"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 559,
            "hash": "256e0904cb8ab08dab368b140d3306158b922115",
            "commit_summary": "Cache Patterns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298617 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.nysiis"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 560,
            "hash": "cdf3dd2d31f2f0b8f9c61b4c88039bf3c43e38df",
            "commit_summary": "Add SVN keyword Id.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298618 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [],
            "date": "2012-03-08"
        },
        {
            "commit_id": 561,
            "hash": "a68102b3a67cab09f0898ee05cc7547e12061b82",
            "commit_summary": "Add SVN keyword Id.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298619 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [],
            "date": "2012-03-08"
        },
        {
            "commit_id": 562,
            "hash": "60cd70bcee64829c4756e0e7403f43fb385f99e6",
            "commit_summary": "Tests rule 4.2: Q \u2192 G, Z \u2192 S, M \u2192 N\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298645 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testRule4Dot2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot2"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 563,
            "hash": "e84f6f467fdf5a29bbbc14543d4da92deb5dc39a",
            "commit_summary": "Refactor test for less test fixture construction noise.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298649 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "assertEncodings",
                    "function params": [
                        "testValues"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.assertEncodings"
                },
                {
                    "function name": "testRule1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule1"
                },
                {
                    "function name": "testRule4Dot1",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot1"
                },
                {
                    "function name": "testRule2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule2"
                },
                {
                    "function name": "testRule6",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule6"
                },
                {
                    "function name": "testRule4Dot2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule4Dot2"
                },
                {
                    "function name": "testRule7",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule7"
                },
                {
                    "function name": "testRule5",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testRule5"
                },
                {
                    "function name": "testOthers",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testOthers"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 564,
            "hash": "0980312c6c4a3c29b5612e68c85d5d8056925974",
            "commit_summary": "Refactor test for less test fixture construction noise.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298650 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testDropBy",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 565,
            "hash": "86beeafa9acb781ddd7cfd82c60f9bcb94743264",
            "commit_summary": "Refactor test for less test fixture construction noise.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298651 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testDropBy2",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy2"
                }
            ],
            "date": "2012-03-08"
        },
        {
            "commit_id": 566,
            "hash": "642477acc96b92a5eb594037c1a01cc5df03193e",
            "commit_summary": "[CODEC-63] Merged duplicate unit tests, added algorithm outline to class description\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298958 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "testDropBy",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testDropBy"
                }
            ],
            "date": "2012-03-09"
        },
        {
            "commit_id": 567,
            "hash": "12cd9940f64a10950c25ef608808d21f2a00315b",
            "commit_summary": "Remove \"not fully baked\" comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298974 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [],
            "date": "2012-03-09"
        },
        {
            "commit_id": 568,
            "hash": "fd045494ccfa0f65cc725d2628b729d461f31987",
            "commit_summary": "Javadoc links.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298975 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [],
            "date": "2012-03-09"
        },
        {
            "commit_id": 569,
            "hash": "00530c91c80b6b926beb5b6f9c11127403407543",
            "commit_summary": "Remove @author tags per Apache guidelines.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298985 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [],
            "date": "2012-03-09"
        },
        {
            "commit_id": 570,
            "hash": "89de3df8f686c073d3ed60906b0f7f6483386c86",
            "commit_summary": "Added missing javadoc for Nysiis, renamed trueLength to strict\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298987 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.nysiis"
                },
                {
                    "function name": "Nysiis",
                    "function params": [
                        "strict"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.Nysiis"
                },
                {
                    "function name": "Nysiis",
                    "function params": [
                        "trueLength"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.Nysiis"
                },
                {
                    "function name": "isStrict",
                    "function params": [],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.isStrict"
                }
            ],
            "date": "2012-03-09"
        },
        {
            "commit_id": 571,
            "hash": "1471bc37d5db8921ba044cc150d49a05890b50e6",
            "commit_summary": "Add @since 1.7\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1298991 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [],
            "date": "2012-03-09"
        },
        {
            "commit_id": 572,
            "hash": "058b9726a927501f069f2ce0699dda7ab87ddead",
            "commit_summary": "Refactor repeated expression.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1301750 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                }
            ],
            "date": "2012-03-16"
        },
        {
            "commit_id": 573,
            "hash": "1e2151c26bccea33125da79e7c616c2c55edc855",
            "commit_summary": "Replace magic number (-1) with EOF constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1301754 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "read",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                }
            ],
            "date": "2012-03-16"
        },
        {
            "commit_id": 574,
            "hash": "fb78cbb077f6b0b6405ab0c7d74c7c3cce29bf9b",
            "commit_summary": "Replace magic number (-1) with EOF constant. Jaavdoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1301755 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2012-03-16"
        },
        {
            "commit_id": 575,
            "hash": "2697108cc9f1c7b089053143097c9f8843185462",
            "commit_summary": "Added unit test for CODEC-130.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1301974 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                }
            ],
            "date": "2012-03-17"
        },
        {
            "commit_id": 576,
            "hash": "10d8fc1dad1191f593c79cf6dad79af5cabe3ccf",
            "commit_summary": "Use existing string resource for unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1301976 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                }
            ],
            "date": "2012-03-17"
        },
        {
            "commit_id": 577,
            "hash": "403a784b81c5fb845aef1b34aefd56d0d3056964",
            "commit_summary": "[CODEC-132] Make phoneme order deterministic by using a LinkedHashSet, detected as part of the test case in lucene.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302191 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2012-03-18"
        },
        {
            "commit_id": 578,
            "hash": "61dcb07513fbb32c90e5ae90fa376bdf7705e2db",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302200 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [],
            "date": "2012-03-18"
        },
        {
            "commit_id": 579,
            "hash": "caa142d0399f10ce3ec6fb843e679e2d8c07c43f",
            "commit_summary": "[CODEC-130] Added unit test for Base32InputStream, improved Base64 unit test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302231 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                }
            ],
            "date": "2012-03-18"
        },
        {
            "commit_id": 580,
            "hash": "1fc451c79779bdbf788e8bfbec6dc031a47495d8",
            "commit_summary": "[CODEC-130] Provided implementation of skip and available for BaseNCodecInputStream, added unit tests.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302585 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.skip"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"
                }
            ],
            "date": "2012-03-19"
        },
        {
            "commit_id": 581,
            "hash": "fe56886f6d4c6f872caa23faa4b94e34b0b221a1",
            "commit_summary": "[CODEC-130] Base64InputStream.skip skips underlying stream, not output. Better exception information. Less verbose code with a single return. Order methods AB.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302622 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.skip"
                },
                {
                    "function name": "markSupported",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.markSupported"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                }
            ],
            "date": "2012-03-19"
        },
        {
            "commit_id": 582,
            "hash": "29220884e616c750cf8bed06ad939d1c366b8c94",
            "commit_summary": "CODEC-121 will be for 2.0. \n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302639 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "testSoftLineBreakEncode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"
                },
                {
                    "function name": "testSoftLineBreakDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"
                }
            ],
            "date": "2012-03-19"
        },
        {
            "commit_id": 583,
            "hash": "bc1c22bcb690e9a906abc6a42fa258b39edd9449",
            "commit_summary": "Really make sure we test skipping number of characters larger than the internal buffer.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302651 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"
                }
            ],
            "date": "2012-03-19"
        },
        {
            "commit_id": 584,
            "hash": "c4b947d96eb273089b6753534f673640efa77703",
            "commit_summary": "[CODEC-130] Base64InputStream.skip skips underlying stream, not output. Can skip more than Integer.MAX_VALUE at a time.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1302652 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.skip"
                }
            ],
            "date": "2012-03-19"
        },
        {
            "commit_id": 585,
            "hash": "4bbc660332f3e751ff7e68bdb2756e9d964f4858",
            "commit_summary": "Missing @Override\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1303083 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [],
            "date": "2012-03-20"
        },
        {
            "commit_id": 586,
            "hash": "25f149ae9564876c5459dcbb80feb1467a063ab9",
            "commit_summary": "Debox\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1303241 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java"
            ],
            "functions": [
                {
                    "function name": "data",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.data"
                }
            ],
            "date": "2012-03-21"
        },
        {
            "commit_id": 587,
            "hash": "ab27defc0f3a3ac9b797c23bdc32f35052492b1d",
            "commit_summary": "Don't use assertTrue for comparing equals\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1304137 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"
                }
            ],
            "date": "2012-03-22"
        },
        {
            "commit_id": 588,
            "hash": "f0ee4661a5e66274eb513902639f0a16edec1b0a",
            "commit_summary": "Fixed unit test HexTest.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1304217 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"
                }
            ],
            "date": "2012-03-23"
        },
        {
            "commit_id": 589,
            "hash": "c3c58f29b440392739dcce3c385048649ae735b1",
            "commit_summary": "Refix bug introduced in r1304137\n(accidentally converted assertFalse to assertEquals)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1304377 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"
                }
            ],
            "date": "2012-03-23"
        },
        {
            "commit_id": 590,
            "hash": "67c60388b44697df1d86bff42ddfc314d75e86bf",
            "commit_summary": "Reuse constant.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306034 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java"
            ],
            "functions": [],
            "date": "2012-03-27"
        },
        {
            "commit_id": 591,
            "hash": "65d05e0fd832de4fd148ad4668c3a4d110488cb8",
            "commit_summary": "Use simple exception var name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306035 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java"
            ],
            "functions": [
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                }
            ],
            "date": "2012-03-27"
        },
        {
            "commit_id": 592,
            "hash": "453c56cff0dbbc0ecefaa7f20b8df6d11d6d12ec",
            "commit_summary": "[CODEC-136] Use Charset objects when possible, create Charsets for required character encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306366 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Be"
                },
                {
                    "function name": "getBytesUnchecked",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUnchecked"
                },
                {
                    "function name": "getBytes",
                    "function params": [
                        "string",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytes"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUsAscii"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf8"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringIso8859_1"
                },
                {
                    "function name": "newIllegalStateException",
                    "function params": [
                        "charsetName",
                        "e"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newIllegalStateException"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf8"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Le"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf8"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUsAscii"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Be"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Le"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 593,
            "hash": "90caed967e6d24a4acd8a9f0739b75f6bb2e7b37",
            "commit_summary": "[CODEC-136] Use Charset objects when possible, create Charsets for required character encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306398 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "Hex",
                    "function params": [
                        "csName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "toString",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toString"
                },
                {
                    "function name": "getCharsetName",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.getCharsetName"
                },
                {
                    "function name": "Hex",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "Hex",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "getCharset",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.getCharset"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "Hex",
                    "function params": [],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "testCustomCharsetBadName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 594,
            "hash": "7bf19f98e6debf76ace944034f7e5d376d4870fd",
            "commit_summary": "[CODEC-136] Use Charset objects when possible, create Charsets for required character encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306412 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "BCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "BCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "BCodec",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.BCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.getDefaultCharset"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "getCharset",
                    "function params": [],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.getCharset"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "QCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "QCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.getDefaultCharset"
                },
                {
                    "function name": "getCharset",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.getCharset"
                },
                {
                    "function name": "QCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testInvalidEncoding"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 595,
            "hash": "d66b439c93f7d370d42b21b0d9b86446919880a8",
            "commit_summary": "Replace \"http://download.oracle.com/javase/1.5.0/docs/api/java/nio/charset/Charset.html\" with \"http://download.oracle.com/javase/6/docs/api/java/nio/charset/Charset.html\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306415 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 596,
            "hash": "759b3707f3f4a1e5eedbce479dccb0ec70237656",
            "commit_summary": "Replace \"<code>null</code>\" with \"{@code null}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306421 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 597,
            "hash": "e23e8e1df17a81b42073334a80fb896c67704522",
            "commit_summary": "Replace \"<code>true</code>\" with \"{@code true}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306423 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 598,
            "hash": "b0083b6f74be80bcf7b8bba77ad1dc56688a152f",
            "commit_summary": "Replace \"<code>false</code>\" with \"{@code false}\"\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306424 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 599,
            "hash": "4f7912d16b286daf1e0db27ad23c6b693a2db72f",
            "commit_summary": "[CODEC-136] Use Charset objects when possible, create Charsets for required character encodings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306431 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java"
            ],
            "functions": [
                {
                    "function name": "QCodec",
                    "function params": [],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.QCodec"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 600,
            "hash": "5dae4d949e1ce53048fdb817ce6e2a76cb3a25ee",
            "commit_summary": "git-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306437 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "getDefaultCharset",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getDefaultCharset"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "getCharset",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.getCharset"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testInvalidEncoding"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 601,
            "hash": "c5eeceac028ebb4332792f96221058097179d0ca",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306438 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 602,
            "hash": "12359b373d93cbb3cee653447115cd766f0425ba",
            "commit_summary": "Add deprecation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306445 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 603,
            "hash": "f282e951f122c9d4a8d65d92cab1949a98da786c",
            "commit_summary": "Rename pString to str, pObject to obj\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306455 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pString"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 604,
            "hash": "7c622a0022c15d145decebe7bb9a6c8055b4557c",
            "commit_summary": "Add missing '@Deprecated' annotations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306465 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2012-03-28"
        },
        {
            "commit_id": 605,
            "hash": "8f868d0c53820812f0298e53ee60c0cdddfbf8b2",
            "commit_summary": "Remove extra parens.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306466 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testEncodeIgnoreApostrophes",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes"
                },
                {
                    "function name": "testHWRuleEx3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"
                },
                {
                    "function name": "testEncodeIgnoreHyphens",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens"
                },
                {
                    "function name": "testB650",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testB650"
                },
                {
                    "function name": "testMsSqlServer2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer2"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "item"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 606,
            "hash": "9f7dffd9b9addc7999a01ba4378ea347bf6718f1",
            "commit_summary": "Use Java 5 loops.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306469 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java"
            ],
            "functions": [
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.encodeAll"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 607,
            "hash": "5819f2dbf638dd4befb1803e0e99dfe48a84f73d",
            "commit_summary": "Add missing @Override now we are using Java 1.6\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1306487 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "cacheSubSequence",
                    "function params": [
                        "cached"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.cacheSubSequence"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "RPattern",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.RPattern"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                }
            ],
            "date": "2012-03-28"
        },
        {
            "commit_id": 608,
            "hash": "778eb5418ac6627e67ffd69252d45f8f9fb2284a",
            "commit_summary": "Add methods from IO.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1307569 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java"
            ],
            "functions": [
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "testToCharset",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testToCharset"
                }
            ],
            "date": "2012-03-30"
        },
        {
            "commit_id": 609,
            "hash": "622088ba07b5b9452b73e2b2867549540e431732",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308111 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testIgnoringNonBase64InDecode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject"
                },
                {
                    "function name": "testDecodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"
                },
                {
                    "function name": "testFromAsciiByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                }
            ],
            "date": "2012-04-01"
        },
        {
            "commit_id": 610,
            "hash": "0a7bbe29d8ecc70ecb84c7f515ffc2e9394b0a75",
            "commit_summary": "Remove @author tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308156 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "available",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                }
            ],
            "date": "2012-04-01"
        },
        {
            "commit_id": 611,
            "hash": "5cd45cca92b4ba31d55f2e5d28aacf2a5d3fca22",
            "commit_summary": "Undo previous commit (svn merge -r 1308156:1308111 .)\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308314 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "available",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.reset"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                }
            ],
            "date": "2012-04-02"
        },
        {
            "commit_id": 612,
            "hash": "1ade8d502aacc1ab023cd01e751ace895cd753a1",
            "commit_summary": "Remove @author tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308315 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [],
            "date": "2012-04-02"
        },
        {
            "commit_id": 613,
            "hash": "9a2c8207033ef96ba390009ac971a0c0bbc797f7",
            "commit_summary": "CODEC-138 Complete FilterInputStream interface for BaseNCodecInputStream\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308606 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [
                {
                    "function name": "reset",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.reset"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readLimit"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.mark"
                }
            ],
            "date": "2012-04-02"
        },
        {
            "commit_id": 614,
            "hash": "d7b0b793a919c9f58eeaac692194cb62a71b8e18",
            "commit_summary": "Forgot @since markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1308607 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [],
            "date": "2012-04-02"
        },
        {
            "commit_id": 615,
            "hash": "3f41cf1609fae7c8848beb0655bcf67132c7a277",
            "commit_summary": "[CODEC-96] Base64 encode() method is no longer thread-safe, breaking clients using it as a shared BinaryEncoder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309055 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "hasData",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "available",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "available",
                    "function params": [],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.available"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "close",
                    "function params": [],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.close"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                }
            ],
            "date": "2012-04-03"
        },
        {
            "commit_id": 616,
            "hash": "e04ddcf7426d617036064e9b99d824eb4201d470",
            "commit_summary": "Fix Javadoc indent.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309060 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java"
            ],
            "functions": [],
            "date": "2012-04-03"
        },
        {
            "commit_id": 617,
            "hash": "c683f14ef654ac62480d6f5bce9609106e09d5e2",
            "commit_summary": "[CODEC-96] Base64 encode() method is no longer thread-safe, breaking clients using it as a shared BinaryEncoder. Make Context ivar final.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309062 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2012-04-03"
        },
        {
            "commit_id": 618,
            "hash": "85315cdf2f8a97083e891c026876223dd2d301d2",
            "commit_summary": "Exceptions not thrown\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309092 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodePadOnlyChunked",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked"
                },
                {
                    "function name": "testDecodePadOnly",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadOnly"
                },
                {
                    "function name": "testDecodePadMarkerIndex2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2"
                },
                {
                    "function name": "testDecodePadMarkerIndex3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3"
                },
                {
                    "function name": "testKnownDecodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownDecodings"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testKnownEncodings",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testKnownEncodings"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject"
                },
                {
                    "function name": "testDecodeByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray"
                },
                {
                    "function name": "testFromAsciiByteArray",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray"
                },
                {
                    "function name": "testCustomCharsetBadName",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharsetBadName"
                }
            ],
            "date": "2012-04-03"
        },
        {
            "commit_id": 619,
            "hash": "9efad96e5d9f9b9e02ef0bbd107ecdb0d07299d7",
            "commit_summary": "Missing @since markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309093 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2012-04-03"
        },
        {
            "commit_id": 620,
            "hash": "5536cf67cf7ae3b72d02f6c398f52a47c9578c0b",
            "commit_summary": "Missing @since markers\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309094 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [],
            "date": "2012-04-03"
        },
        {
            "commit_id": 621,
            "hash": "3976e6d39ec139267175324f6ebbabb9b2ecb619",
            "commit_summary": "Java 1.6 requires @Override for implementations\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1309096 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java"
            ],
            "functions": [],
            "date": "2012-04-03"
        },
        {
            "commit_id": 622,
            "hash": "4008ff9e49715f77cd6ac956b358160b7e416e69",
            "commit_summary": "[CODEC-133] Add classes for MD5/SHA1/SHA-512-based Unix crypt(3) hash variants.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1328414 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "b64from24bit",
                    "function params": [
                        "b2",
                        "b1",
                        "b0",
                        "outLen",
                        "buffer"
                    ],
                    "file name": "B64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.b64from24bit"
                },
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key"
                    ],
                    "file name": "Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "body",
                    "function params": [
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "permOp",
                    "function params": [
                        "a",
                        "b",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.permOp"
                },
                {
                    "function name": "fourBytesToInt",
                    "function params": [
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt"
                },
                {
                    "function name": "intToFourBytes",
                    "function params": [
                        "iValue",
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.intToFourBytes"
                },
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                },
                {
                    "function name": "byteToUnsigned",
                    "function params": [
                        "b"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned"
                },
                {
                    "function name": "hPermOp",
                    "function params": [
                        "a",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.hPermOp"
                },
                {
                    "function name": "testApr1CryptExplicitCall",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"
                },
                {
                    "function name": "testApr1CryptNullData",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"
                },
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"
                },
                {
                    "function name": "testApr1CryptStrings",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"
                },
                {
                    "function name": "testB64from24bit",
                    "function params": [],
                    "file name": "B64Test.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.B64Test.testB64from24bit"
                },
                {
                    "function name": "testDefaultCryptVariant",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"
                },
                {
                    "function name": "testCryptWithEmptySalt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"
                },
                {
                    "function name": "testMd5CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"
                },
                {
                    "function name": "testMd5CryptNullData",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"
                },
                {
                    "function name": "testMd5CryptExplicitCall",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"
                },
                {
                    "function name": "testMd5CryptBytes",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"
                },
                {
                    "function name": "testMd5CryptStrings",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"
                },
                {
                    "function name": "testSha256CryptBytes",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"
                },
                {
                    "function name": "testSha256CryptNullData",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"
                },
                {
                    "function name": "testSha256CryptExplicitCall",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"
                },
                {
                    "function name": "testSha256CryptStrings",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"
                },
                {
                    "function name": "testSha256CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"
                },
                {
                    "function name": "testSha512CryptStrings",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"
                },
                {
                    "function name": "testSha512CryptNullData",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"
                },
                {
                    "function name": "testSha512CryptExplicitCall",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"
                },
                {
                    "function name": "testSha512CryptBytes",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"
                },
                {
                    "function name": "testSha512CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"
                },
                {
                    "function name": "testUnixCryptStrings",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"
                },
                {
                    "function name": "testUnicCryptInvalidSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"
                },
                {
                    "function name": "testUnixCryptExplicitCall",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall"
                },
                {
                    "function name": "testUnixCryptNullData",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData"
                },
                {
                    "function name": "testUnixCryptBytes",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"
                },
                {
                    "function name": "testUnixCryptWithEmptySalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"
                }
            ],
            "date": "2012-04-20"
        },
        {
            "commit_id": 623,
            "hash": "0ce2d936f62bcc4da337b14b350a5f6576c3cc5a",
            "commit_summary": "Set SVN keyword Id.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1328425 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2012-04-20"
        },
        {
            "commit_id": 624,
            "hash": "7fd22ec3420a9d79b6b7dcf9af3ca1d9b0b16478",
            "commit_summary": "Set SVN keyword Id.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1328426 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2012-04-20"
        },
        {
            "commit_id": 625,
            "hash": "007d6b8423333630213d3ed1d2813ed22b59473d",
            "commit_summary": "[CODEC-139] DigestUtils: add updateDigest methods and make methods public.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1328553 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                },
                {
                    "function name": "getSha512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512Digest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "getSha256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha256Digest"
                },
                {
                    "function name": "getSha384Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha384Digest"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "testUpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testUpdateWithString"
                },
                {
                    "function name": "testUpdateWithByteArray",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testUpdateWithByteArray"
                }
            ],
            "date": "2012-04-21"
        },
        {
            "commit_id": 626,
            "hash": "63c51caac73a4e9059750c3146e3b028e44d1bb4",
            "commit_summary": "Javadoc tweak.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1329207 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [],
            "date": "2012-04-23"
        },
        {
            "commit_id": 627,
            "hash": "03d62b63f1d8c6551d59893fd3f5dc1add6d3132",
            "commit_summary": "Add thread-safety Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1333397 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2012-05-03"
        },
        {
            "commit_id": 628,
            "hash": "fbefe56c0a41a1742872c9d0f624e5c32710ab4e",
            "commit_summary": "Fix incorrect method call which was causing unnecessary boxing & unboxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1333705 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                }
            ],
            "date": "2012-05-04"
        },
        {
            "commit_id": 629,
            "hash": "07cf4e960d36aa15688e6a7989351b294ef749fa",
            "commit_summary": "Eliminate unused variable warning by slight code rearrangement\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1333710 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                }
            ],
            "date": "2012-05-04"
        },
        {
            "commit_id": 630,
            "hash": "30773983a39fc48638af556d4edf492642468f28",
            "commit_summary": "Replace StringBuffer with non-synch Builder\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1333715 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                },
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.constructString"
                }
            ],
            "date": "2012-05-04"
        },
        {
            "commit_id": 631,
            "hash": "188e25d4796370edbf3d07501f4a9676cfa2a5ca",
            "commit_summary": "CODEC-143 StringBuffer could be replaced by StringBuilder for local variables\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1333721 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java"
            ],
            "functions": [
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                },
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.nysiis"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                }
            ],
            "date": "2012-05-04"
        },
        {
            "commit_id": 632,
            "hash": "618ef8f477e2e5f5d85e129133613bfe82423b0c",
            "commit_summary": "Put identical methods together\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1333741 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "encodeAsString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeAsString"
                }
            ],
            "date": "2012-05-04"
        },
        {
            "commit_id": 633,
            "hash": "e4bded91eef4c3b7065d608a70e7a361c36ccb32",
            "commit_summary": "Replace \"This class is immutable and thread-safe.\" with \"<p>This class is immutable and thread-safe.</p>\" per Konstantin Kolinko's comment on the dev ML.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1342240 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java"
            ],
            "functions": [],
            "date": "2012-05-24"
        },
        {
            "commit_id": 634,
            "hash": "17c13858e25be3b6a99d8929edb9e1654470af0b",
            "commit_summary": "Use US-English spelling.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1343059 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [],
            "date": "2012-05-27"
        },
        {
            "commit_id": 635,
            "hash": "b66d41a25fe44847c828bfb188d60cba98117568",
            "commit_summary": "Fix Checkstyle issues: Line has trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1352268 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/EncoderException.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/CharEncodingTest.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/UtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4",
                        "criteria5",
                        "criteria6"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleC"
                },
                {
                    "function name": "handleD",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleD"
                },
                {
                    "function name": "handleH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleH"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "charAt",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.charAt"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4",
                        "criteria5"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "isSlavoGermanic",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "isLastChar",
                    "function params": [
                        "wdsz",
                        "n"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isLastChar"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doDecoding"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                },
                {
                    "function name": "testUpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testUpdateWithString"
                },
                {
                    "function name": "testSha384",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha384"
                },
                {
                    "function name": "testSha256",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha256"
                },
                {
                    "function name": "testSha512",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha512"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "testSetMaxCodeLength",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"
                },
                {
                    "function name": "testWhy",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWhy"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.constructString"
                },
                {
                    "function name": "testDecodeInvalidContent",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2012-06-20"
        },
        {
            "commit_id": 636,
            "hash": "288e3d9372af54555a152b8dd827ca211015d1d8",
            "commit_summary": "Fix Checkstyle issues: File does not end with a newline.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1352269 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [],
            "date": "2012-06-20"
        },
        {
            "commit_id": 637,
            "hash": "fefb442fc8beef6b044768ae4d110b4393521c61",
            "commit_summary": "Fix some checkstyle errors.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1364427 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                }
            ],
            "date": "2012-07-22"
        },
        {
            "commit_id": 638,
            "hash": "d2c0d2a2327e9ddf887b119fadbe5a5366f67e36",
            "commit_summary": "Javadoc cleanup of new crypt classes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1374394 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2012-08-17"
        },
        {
            "commit_id": 639,
            "hash": "536ede39c1bd58ae4aa6138103746b94164287ee",
            "commit_summary": "Cleanup of throws clauses in new crypt classes. Additional javadoc fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1374430 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "key"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "testApr1CryptExplicitCall",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"
                },
                {
                    "function name": "testApr1CryptNullData",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"
                },
                {
                    "function name": "testApr1CryptStrings",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"
                },
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"
                },
                {
                    "function name": "testDefaultCryptVariant",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"
                },
                {
                    "function name": "testCryptWithEmptySalt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"
                },
                {
                    "function name": "testMd5CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"
                },
                {
                    "function name": "testMd5CryptNullData",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"
                },
                {
                    "function name": "testMd5CryptBytes",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"
                },
                {
                    "function name": "testMd5CryptExplicitCall",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"
                },
                {
                    "function name": "testMd5CryptStrings",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"
                },
                {
                    "function name": "testSha256CryptStrings",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"
                },
                {
                    "function name": "testSha256CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"
                },
                {
                    "function name": "testSha256CryptBytes",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"
                },
                {
                    "function name": "testSha256CryptNullData",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"
                },
                {
                    "function name": "testSha256CryptExplicitCall",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"
                },
                {
                    "function name": "testSha512CryptNullData",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"
                },
                {
                    "function name": "testSha512CryptExplicitCall",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"
                },
                {
                    "function name": "testSha512CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"
                },
                {
                    "function name": "testSha512CryptStrings",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"
                },
                {
                    "function name": "testSha512CryptBytes",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"
                },
                {
                    "function name": "testUnixCryptWithEmptySalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt"
                },
                {
                    "function name": "testUnixCryptStrings",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"
                },
                {
                    "function name": "testUnicCryptInvalidSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt"
                },
                {
                    "function name": "testUnixCryptBytes",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"
                }
            ],
            "date": "2012-08-17"
        },
        {
            "commit_id": 640,
            "hash": "b69a53a56757ef6906a342eb0dfe30cd6400343d",
            "commit_summary": "Fix wrong apache header for UnixCrypt.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1375781 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [],
            "date": "2012-08-21"
        },
        {
            "commit_id": 641,
            "hash": "d9fba481f362f19f3ed0dc0f6e47429ad54fae32",
            "commit_summary": "Remove space at the end of the file but PMD still complains.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376610 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [],
            "date": "2012-08-23"
        },
        {
            "commit_id": 642,
            "hash": "0f2c16e35f19c1de7a1170cef3451bdc1beca3c9",
            "commit_summary": "Speed improvement for phonetic engine by implementing the suggested fixme.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376661 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                }
            ],
            "date": "2012-08-23"
        },
        {
            "commit_id": 643,
            "hash": "79a585cc2945f4f26f0a2d02bd66f58c2182d369",
            "commit_summary": "Javadoc fixes for Beider-Morse Encoder / Phonetic engine, removed debug prints.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376668 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2012-08-23"
        },
        {
            "commit_id": 644,
            "hash": "2cb3bbda5a0c09bdb4da5533df4ef7061c1c8125",
            "commit_summary": "[CODEC-146] Added regression tests for PhoneticEngine. Thanks to Julius Davies.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376676 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "testSolrSEPHARDIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC"
                },
                {
                    "function name": "testSolrASHKENAZI",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                },
                {
                    "function name": "testSolrGENERIC",
                    "function params": [],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC"
                }
            ],
            "date": "2012-08-23"
        },
        {
            "commit_id": 645,
            "hash": "f3d0617d2728eeba5a3c6f0d1d8d201168f560d2",
            "commit_summary": "Remove paragraph tag at start of javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376679 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [],
            "date": "2012-08-23"
        },
        {
            "commit_id": 646,
            "hash": "555b2b5788eb8d7a131cb6d02bdf10f4da6355b2",
            "commit_summary": "Javadoc cleanup, removal of leading paragraph.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376686 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2012-08-23"
        },
        {
            "commit_id": 647,
            "hash": "915f6d74a91adff2378765df55c0a1cc70dc7d34",
            "commit_summary": "Added missing version tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376690 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/ResourceConstants.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java"
            ],
            "functions": [],
            "date": "2012-08-23"
        },
        {
            "commit_id": 648,
            "hash": "a2dce9c960f04e62f77e4d086181f557aa72b244",
            "commit_summary": "Added missing version tags, changed Revision to Id if present.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376694 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java"
            ],
            "functions": [],
            "date": "2012-08-23"
        },
        {
            "commit_id": 649,
            "hash": "4889e27ae37895a859542def1fd5e3f134058017",
            "commit_summary": "Add missing javadoc, removed debug print.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1376705 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java"
            ],
            "functions": [
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                }
            ],
            "date": "2012-08-23"
        },
        {
            "commit_id": 650,
            "hash": "0cc4b1777cf14855de2591840ca430e26977bac4",
            "commit_summary": "Fix Checkstyle issues.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378197 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/CharEncoding.java"
            ],
            "functions": [],
            "date": "2012-08-28"
        },
        {
            "commit_id": 651,
            "hash": "53db3193cd593e83621da7204477baa9df1f1c57",
            "commit_summary": "Fix Checkstyle issues.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378200 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java"
            ],
            "functions": [],
            "date": "2012-08-28"
        },
        {
            "commit_id": 652,
            "hash": "09f58fbc8956b05aec9cdc7ce9d153639917f24d",
            "commit_summary": "Fix some Checkstyle issues.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378201 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                }
            ],
            "date": "2012-08-28"
        },
        {
            "commit_id": 653,
            "hash": "76c125c3b74a390a39cdcd6666cf7e9cea0e5c1d",
            "commit_summary": "Checkstyle, javadoc and formatting fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378724 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleC"
                },
                {
                    "function name": "handleD",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleD"
                },
                {
                    "function name": "handleH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleH"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                }
            ],
            "date": "2012-08-29"
        },
        {
            "commit_id": 654,
            "hash": "36dfa194e6155bbaf8d468403cc3982aceeda3b1",
            "commit_summary": "Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378740 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                }
            ],
            "date": "2012-08-29"
        },
        {
            "commit_id": 655,
            "hash": "7ab7ec58f461db059529715392dce4f7ef3bdf93",
            "commit_summary": "Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378743 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [],
            "date": "2012-08-29"
        },
        {
            "commit_id": 656,
            "hash": "4541fb80e0558682793a5bd2372a74984d62745f",
            "commit_summary": "Checkstyle fixes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378746 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "createResourceName",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createResourceName"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2012-08-29"
        },
        {
            "commit_id": 657,
            "hash": "48f86f12fbb2f46d359a03439919dc8e1a5bdd48",
            "commit_summary": "Checkstyle fixes, harmonised javadoc for param and throws tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378748 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2012-08-29"
        },
        {
            "commit_id": 658,
            "hash": "aead18acdf24c7619bd2b63a39603b20ccbafba9",
            "commit_summary": "Checkstyle fix.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378749 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                }
            ],
            "date": "2012-08-29"
        },
        {
            "commit_id": 659,
            "hash": "7f7bc85528d7ec75b5c5c49b0bb3f83dc99653d9",
            "commit_summary": "Fix checkstyle issues (line lengths).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378928 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 660,
            "hash": "b29483fc494c5b5cbf2c347685af6ab9a233e43f",
            "commit_summary": "Refactor but do not create new methods (presumably for performance). Start to simplify use of Context and what feels like side-effect programming. Also ends-up reducing line complexity (length) which makes Checksyle happy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378941 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 661,
            "hash": "17a88b3a7558387d75d27e22771993a45969944f",
            "commit_summary": "Add toString() method useful for debugging.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378947 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 662,
            "hash": "e0310e15c4cc157e944d047fea9aede327ab594d",
            "commit_summary": "Remove extra blank line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378950 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 663,
            "hash": "dd86760dce1d09cf7b223db77d9470326b566366",
            "commit_summary": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378955 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2012-08-30"
        },
        {
            "commit_id": 664,
            "hash": "e21c0af594f1d4ac7a1e1946e555bb829ae00a0c",
            "commit_summary": "Refactor: Use byte[] from ensureBufferSize() instead of always deferencing it from the context.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378962 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 665,
            "hash": "114830d0f1c0ae96b9b546849e2766694fd3e1e4",
            "commit_summary": "Refactor: Use byte[] from ensureBufferSize() instead of always deferencing it from the context.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378963 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 666,
            "hash": "1a3a1b306faec5e317c8be2ebb9e54244f6ab57d",
            "commit_summary": "Refactor: Use byte[] from ensureBufferSize() instead of always deferencing it from the context. Use final on lvars to clarify intent and avoid potential bugs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378965 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 667,
            "hash": "19478daf74e7a8a33c8705dc742cbc86a27ea91d",
            "commit_summary": "Use final on some lvars to clarify intent and avoid potential bugs. Should final be applied all over?\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378966 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 668,
            "hash": "0dedfd955d332edb9c265f45e9819461bcdd0979",
            "commit_summary": "Add SVN EOL setting\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1378996 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/test/java/org/apache/commons/codec/CharsetsTest.java"
            ],
            "functions": [
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "testToCharset",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testToCharset"
                },
                {
                    "function name": "testUtf16Le",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Le"
                },
                {
                    "function name": "testUtf8",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf8"
                },
                {
                    "function name": "testUtf16",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16"
                },
                {
                    "function name": "testIso8859_1",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testIso8859_1"
                },
                {
                    "function name": "testUtf16Be",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUtf16Be"
                },
                {
                    "function name": "testUsAscii",
                    "function params": [],
                    "file name": "CharsetsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/CharsetsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.CharsetsTest.testUsAscii"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 669,
            "hash": "88822456dd707763d6cc41ee4efdaf5f8bf44d60",
            "commit_summary": "Javadoc syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379012 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [],
            "date": "2012-08-30"
        },
        {
            "commit_id": 670,
            "hash": "211bbdffa3b35dd49d1b85ba4a86faf4dbd5ba44",
            "commit_summary": "Javadoc syntax\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379013 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [],
            "date": "2012-08-30"
        },
        {
            "commit_id": 671,
            "hash": "16b3e3e100c00cc3a5eea20d2bd2aecfad55754f",
            "commit_summary": "Eclipse warns that files are not closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379018 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 672,
            "hash": "0951540e669bc5b0f332bd821a269d409c9fa6bb",
            "commit_summary": "Suppress this specific boxing warning\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379019 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [],
            "date": "2012-08-30"
        },
        {
            "commit_id": 673,
            "hash": "717ff5c9380bafc945340c4ff46ef8b5129e0359",
            "commit_summary": "Eclipse warns that files are not closed\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379025 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java"
            ],
            "functions": [
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 674,
            "hash": "8c9b7a34de76e2412734cb49f6d48887877a46e2",
            "commit_summary": "Removed unneeded CR.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379048 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 675,
            "hash": "a078eee32106eb0c24527b7dcd4b045bd8e6cc0a",
            "commit_summary": "Harmonised javadoc, removed unneeded p tags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379049 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/CharEncoding.java",
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java"
            ],
            "functions": [],
            "date": "2012-08-30"
        },
        {
            "commit_id": 676,
            "hash": "026d5047d108ddd36bd807a3c119dd5057814161",
            "commit_summary": "Resolved FIXME comments: throw IAE when failed to parse resource files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379128 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 677,
            "hash": "982ece6cf0e165bab50586020cf845d20e0a68f0",
            "commit_summary": "Harmonize javadoc format style, add missing . at end of first paragraph.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379145 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/BinaryDecoder.java",
                "src/main/java/org/apache/commons/codec/BinaryEncoder.java",
                "src/main/java/org/apache/commons/codec/Decoder.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/Encoder.java",
                "src/main/java/org/apache/commons/codec/StringDecoder.java",
                "src/main/java/org/apache/commons/codec/StringEncoder.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java"
            ],
            "functions": [
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charsetName"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                }
            ],
            "date": "2012-08-30"
        },
        {
            "commit_id": 678,
            "hash": "f5b26b6aa2b1ab2cb3e7587d0940991b577e1511",
            "commit_summary": "Types casts fix two FindBugs report of RV_ABSOLUTE_VALUE_OF_RANDOM_INT.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379436 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2012-08-31"
        },
        {
            "commit_id": 679,
            "hash": "01a0540a78f58f4d69cbf01adfc387874bad0706",
            "commit_summary": "Refactor strings into a new class MessageDigestAlgorithms for public consumption.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379769 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "getMd5Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd5Digest"
                },
                {
                    "function name": "getSha512Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha512Digest"
                },
                {
                    "function name": "getSha256Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha256Digest"
                },
                {
                    "function name": "getSha384Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha384Digest"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 680,
            "hash": "28e7813133a8de8ded191fb6e010123a8e087cd9",
            "commit_summary": "Checksyle line length <= 120.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379781 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 681,
            "hash": "fc393f7bdf6c971cb0dcd977d3015ad5ce524149",
            "commit_summary": "Partial patch application of [CODEC-148] More tests and minor things.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379782 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java"
            ],
            "functions": [
                {
                    "function name": "testCtor",
                    "function params": [],
                    "file name": "Sha2CryptTest.java",
                    "file old path": null,
                    "file new path": "b/src/test/java/org/apache/commons/codec/digest/Sha2CryptTest.java",
                    "full name": "b.src.test.java.org.apache.commons.codec.digest.Sha2CryptTest.testCtor"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "MessageDigestAlgorithms",
                    "function params": [],
                    "file name": "MessageDigestAlgorithms.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/MessageDigestAlgorithms.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.MessageDigestAlgorithms.MessageDigestAlgorithms"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "testApr1CryptExplicitCall",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall"
                },
                {
                    "function name": "testApr1CryptNullData",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData"
                },
                {
                    "function name": "testApr1CryptStrings",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings"
                },
                {
                    "function name": "testApr1CryptWithInvalidSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt"
                },
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1LongSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt"
                },
                {
                    "function name": "testApr1CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt"
                },
                {
                    "function name": "testApr1CryptWithoutSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"
                },
                {
                    "function name": "testB64T",
                    "function params": [],
                    "file name": "B64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.B64Test.testB64T"
                },
                {
                    "function name": "testCryptWithEmptySalt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt"
                },
                {
                    "function name": "testDefaultCryptVariant",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant"
                },
                {
                    "function name": "testCrypt",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCrypt"
                },
                {
                    "function name": "testCryptWithBytes",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"
                },
                {
                    "function name": "testConstructable",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testConstructable"
                },
                {
                    "function name": "testMd5CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt"
                },
                {
                    "function name": "testCtor",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testCtor"
                },
                {
                    "function name": "testMd5CryptNullData",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData"
                },
                {
                    "function name": "testMd5CryptBytes",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes"
                },
                {
                    "function name": "testMd5CryptLongInput",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput"
                },
                {
                    "function name": "testMd5CryptExplicitCall",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall"
                },
                {
                    "function name": "testMd5CryptStrings",
                    "function params": [],
                    "file name": "Md5CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings"
                },
                {
                    "function name": "testSha256CryptStrings",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings"
                },
                {
                    "function name": "testSha256CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt"
                },
                {
                    "function name": "testSha256CryptBytes",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes"
                },
                {
                    "function name": "testSha256CryptNullData",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData"
                },
                {
                    "function name": "testSha256CryptExplicitCall",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall"
                },
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"
                },
                {
                    "function name": "testSha2CryptRounds",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds"
                },
                {
                    "function name": "testSha512CryptNullData",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData"
                },
                {
                    "function name": "testSha512CryptExplicitCall",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall"
                },
                {
                    "function name": "testSha512CryptWithEmptySalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt"
                },
                {
                    "function name": "testSha512CryptNullSalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullSalt"
                },
                {
                    "function name": "testSha2CryptWrongSalt",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt"
                },
                {
                    "function name": "testSha512CryptStrings",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings"
                },
                {
                    "function name": "testSha2CryptRounds",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds"
                },
                {
                    "function name": "testSha512CryptBytes",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes"
                },
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"
                },
                {
                    "function name": "testUnixCryptStrings",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings"
                },
                {
                    "function name": "testUnixCryptWithHalfSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt"
                },
                {
                    "function name": "testCtor",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testCtor"
                },
                {
                    "function name": "testUnixCryptWithoutSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"
                },
                {
                    "function name": "testUnixCryptBytes",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 682,
            "hash": "ace1dc41eb128bc0de794b376f446d276f80ef72",
            "commit_summary": "Partial patch application of [CODEC-148] More tests and minor things. Remove FindBugs' \"vacuous\" ops with 0xffffffff.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379785 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "body",
                    "function params": [
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 683,
            "hash": "07639a36fa0cec75b4d513b27bbefbedb9fc46d1",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379788 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Md5CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java"
            ],
            "functions": [],
            "date": "2012-09-01"
        },
        {
            "commit_id": 684,
            "hash": "a5aba02f5ff8a1b53147488324bdb11c2dad561f",
            "commit_summary": "[CODEC-152] DigestUtils.getDigest(String) looses the orginal exception.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379796 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 685,
            "hash": "abbaedb43f52aeb6ca5b494e8ec10d60e430f517",
            "commit_summary": "[CODEC-151] Remove unnecessary attempt to fill up the salt variable in UnixCrypt\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379804 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 686,
            "hash": "98a56ae2c54c1baee770cd0eae53c75c3709f2cb",
            "commit_summary": "Fix up !@$#% Git patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379805 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [],
            "date": "2012-09-01"
        },
        {
            "commit_id": 687,
            "hash": "6d151e706834e7b1ba831e9d3607156996f694ca",
            "commit_summary": "[CODEC-150] Remove unnecessary call to Math.abs().\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379806 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 688,
            "hash": "9c9a659e747a47986a2f310e773b253f662dc234",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379808 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/B64.java"
            ],
            "functions": [],
            "date": "2012-09-01"
        },
        {
            "commit_id": 689,
            "hash": "08f16c137ec17058350c03fa7eb9068377644c6a",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379809 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Crypt.java"
            ],
            "functions": [],
            "date": "2012-09-01"
        },
        {
            "commit_id": 690,
            "hash": "a3a31a19b6478800a0a71273012492385f6ab4ce",
            "commit_summary": "Javadoc.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379810 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java"
            ],
            "functions": [
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 691,
            "hash": "332615685c04e908fd8d752a2af4a8ee8287564c",
            "commit_summary": "Format the whole file and make the line length <= 120.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379811 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 692,
            "hash": "03fd13821d6f12e60af9de8959584975376c6b36",
            "commit_summary": "Javadoc and minor formating.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1379812 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                }
            ],
            "date": "2012-09-01"
        },
        {
            "commit_id": 693,
            "hash": "f2e7938365b6256e6f1a323602aa63d5df346ab1",
            "commit_summary": "[CODEC-155] DigestUtils.getDigest(String) should throw IllegalArgumentException instead of RuntimeException.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380010 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java"
            ],
            "functions": [
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 694,
            "hash": "3340c3582a5d28eb0bc02354c4860d594bd18ce1",
            "commit_summary": "Checkstyle: '+' should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380011 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 695,
            "hash": "9b5a2e0a60ed9ba66770fee64cc7bd25e20e2c02",
            "commit_summary": "Remove dead comment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380012 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 696,
            "hash": "2dfd03934382a9dba4c39dd248b8b6adbeb181e5",
            "commit_summary": "Checkstyle: binary op should be on the previous line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380013 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java"
            ],
            "functions": [
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 697,
            "hash": "531b5dcb45b80f1d72a305603e32105962b14ce7",
            "commit_summary": "[CODEC-156] DigestUtils: add APIs named after standard alg name SHA-1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380014 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "getSha1Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getSha1Digest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "testSha1UpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"
                },
                {
                    "function name": "testSha1UpdateWithByteArray",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"
                },
                {
                    "function name": "testShaUpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString"
                },
                {
                    "function name": "testShaUpdateWithByteArray",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 698,
            "hash": "fdb6743af113595cde1a722305ca571f27d03d41",
            "commit_summary": "[CODEC-157] DigestUtils: Add MD2 APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380018 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "getMd2Digest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getMd2Digest"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "testMd2HexLength",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"
                },
                {
                    "function name": "testMd2Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex"
                },
                {
                    "function name": "testMd2Length",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 699,
            "hash": "d915d755d1befffaac3a54ed667c05d6b6b74554",
            "commit_summary": "Remove extra blank line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380019 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testShaHex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testShaHex"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 700,
            "hash": "c45a7d3ac48e5e10551b9c98a73b6cd8e1a06958",
            "commit_summary": "[CODEC-156] DigestUtils: add APIs named after standard alg name SHA-1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380022 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 701,
            "hash": "33b47aa139c7a1a7bca6d56d37acaa3ed963eb35",
            "commit_summary": "Use camel-case for test method names.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380023 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testMd5HexLength",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength"
                },
                {
                    "function name": "testMd5Length",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 702,
            "hash": "5912d28fa0116ed7a284b6f550630a0ac054e33a",
            "commit_summary": "[CODEC-155] DigestUtils.getDigest(String) should throw IllegalArgumentException instead of RuntimeException. Use JUnit 4 expected annotation to test instead of try/catch block.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380024 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testInternalNoSuchAlgorithmException",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testInternalNoSuchAlgorithmException"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 703,
            "hash": "28692752c2a23fb3afa855ee22a26877ddc8bc06",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380025 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2012-09-02"
        },
        {
            "commit_id": 704,
            "hash": "1f5240e5f0a7c18e93dc68ee53c4a4ff9b6dfd69",
            "commit_summary": "[CODEC-156] DigestUtils: add APIs named after standard alg name SHA-1.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380026 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 705,
            "hash": "b72d9cb7c21bcfe225b360f07268e96f5e42fd06",
            "commit_summary": "Sort methods in test case alphabetically.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380027 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha1UpdateWithByteArray",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray"
                },
                {
                    "function name": "testMd2HexLength",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength"
                },
                {
                    "function name": "testSha1UpdateWithString",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString"
                },
                {
                    "function name": "testMd2Length",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length"
                },
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 706,
            "hash": "5d758fa487d0eeea19fec8209a72dd2744207e3b",
            "commit_summary": "Deprecate SHA APIs in favor of SHA-1 APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380028 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2012-09-02"
        },
        {
            "commit_id": 707,
            "hash": "f19882640438eea87c8ac66724c1acc1e1459d3b",
            "commit_summary": "Fix testSha1Hex so it only uses sha1Hex\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380038 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testSha1Hex",
                    "function params": [],
                    "file name": "DigestUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex"
                }
            ],
            "date": "2012-09-02"
        },
        {
            "commit_id": 708,
            "hash": "554058f5dca897586217fd9bc30fa9ff266a6584",
            "commit_summary": "Fix findbugs warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380304 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                }
            ],
            "date": "2012-09-03"
        },
        {
            "commit_id": 709,
            "hash": "b0abc067a8a5110211c4aaccc360f5087a78d3d5",
            "commit_summary": "Fixed findbugs warning wrt unused imports resulting from javadoc types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380305 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [],
            "date": "2012-09-03"
        },
        {
            "commit_id": 710,
            "hash": "031beb1467137e9ded0980767e51cea8c7cdfb69",
            "commit_summary": "Fix findbugs warning wrt missing default case, remove unneeded spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380307 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Metaphone.java"
            ],
            "functions": [
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                }
            ],
            "date": "2012-09-03"
        },
        {
            "commit_id": 711,
            "hash": "715eeae35c5e70695580a959b54d0e08f6a54a8c",
            "commit_summary": "Make use of paragraph tags consistent with rest of codec.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380309 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/Nysiis.java"
            ],
            "functions": [],
            "date": "2012-09-03"
        },
        {
            "commit_id": 712,
            "hash": "774607a6dc2a17869c9d96577fc45feead9be394",
            "commit_summary": "toString format.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380589 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "Context",
                    "function params": [],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.Context"
                }
            ],
            "date": "2012-09-04"
        },
        {
            "commit_id": 713,
            "hash": "81a9aa634ad54c424c958595e73151395fe34ab7",
            "commit_summary": "Add @since 1.7.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380822 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2012-09-04"
        },
        {
            "commit_id": 714,
            "hash": "b8e9258ae55a83f35f90f6a333dd167dee014675",
            "commit_summary": "Deprecate SHA APIs in favor of SHA-1 APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380823 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [],
            "date": "2012-09-04"
        },
        {
            "commit_id": 715,
            "hash": "914185bab8af0db467219526b7f04f9c8934bae0",
            "commit_summary": "Redirect SHA API calls to SHA-1 APIs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1380826 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "getShaDigest",
                    "function params": [],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getShaDigest"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                }
            ],
            "date": "2012-09-04"
        },
        {
            "commit_id": 716,
            "hash": "e1232cdff4ed4dc5157aa0ce03ad5c6d941cf7e2",
            "commit_summary": "Suppress deprecation warnings for tests that exerecise deprecated methods\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382482 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2012-09-09"
        },
        {
            "commit_id": 717,
            "hash": "176957dc93615f8d0760b354f149af4d8944ad9d",
            "commit_summary": "Explicit boxing\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382483 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java"
            ],
            "functions": [
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "item"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "testPhonemeComparedToLaterIsNegative",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 718,
            "hash": "dbb4fe76bfb52518173c4c24e045ead9be1749ab",
            "commit_summary": "Add default case: cannot happen currently, so throw IllegalStateException to trap invalid code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382485 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 719,
            "hash": "e74f18036edac56b093edeb0a9715c8399197b5d",
            "commit_summary": "Case 0 is exercised by tests, so is correct\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382488 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 720,
            "hash": "f863635731ad0a43e4fa62030bc9c745849fb6bb",
            "commit_summary": "Don't create Context if it is not needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382490 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 721,
            "hash": "ab25ca771e463eb6fb0bac8b1866ae670e8e92c0",
            "commit_summary": "Re-enable standard tests from RFC 4648.\nThese must work (and they do currently).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382495 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java"
            ],
            "functions": [
                {
                    "function name": "testRfc4648Section10DecodeEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 722,
            "hash": "2c3ce2826244217eeaea4ccf4539d3ab104f725f",
            "commit_summary": "Add default case: cannot happen currently, so throw IllegalStateException to trap invalid code changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382496 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 723,
            "hash": "6ba17fe1b8c84b954a3d19f126618e6c549c6d45",
            "commit_summary": "Javadoc\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382498 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base32.java"
            ],
            "functions": [],
            "date": "2012-09-09"
        },
        {
            "commit_id": 724,
            "hash": "65ff8044c2730ba23d373d8b5b978079b7f08968",
            "commit_summary": "Branch coverage for org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(String, String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382557 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testGetBytesUncheckedNullInput",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 725,
            "hash": "4de27c34ddc68b27d30c7ffabf248ff07c898870",
            "commit_summary": "Branch coverage for org.apache.commons.codec.binary.StringUtils.newString(byte[], String).\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1382558 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testNewStringNullInput",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput"
                }
            ],
            "date": "2012-09-09"
        },
        {
            "commit_id": 726,
            "hash": "211cacdcde78f77beb18fe3dc751545c464a7474",
            "commit_summary": "Add missing ASF header.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1383108 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/Sha2CryptTest.java"
            ],
            "functions": [],
            "date": "2012-09-10"
        },
        {
            "commit_id": 727,
            "hash": "04955ba87e328cd639d7248bf8d72b413613679c",
            "commit_summary": "Use valid input for testing byte conversion, as behaviour for invalid input is undefined.\nFixes test failure with IBM Java 1.6\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1383170 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java"
            ],
            "functions": [
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"
                }
            ],
            "date": "2012-09-10"
        },
        {
            "commit_id": 728,
            "hash": "55a0c64a1d75cab8930bcaad6fee3d62c10ac916",
            "commit_summary": "Javadoc corrections\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1393625 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                }
            ],
            "date": "2012-10-03"
        },
        {
            "commit_id": 729,
            "hash": "119ba35de96fbbe23876a8b9495292dc4c45dd84",
            "commit_summary": "Javadoc: fix uneditted references to Base32\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1394981 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2012-10-06"
        },
        {
            "commit_id": 730,
            "hash": "1137bb8a9c91cabdb65951c164819ea049ce845b",
            "commit_summary": "Remove unnecessary private method; call the underlying method directly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1395065 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java"
            ],
            "functions": [
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                }
            ],
            "date": "2012-10-06"
        },
        {
            "commit_id": 731,
            "hash": "ca5047cdc0a682af5db270423cc8705f2820d91d",
            "commit_summary": "Remove unnecessary private method; call the underlying method directly\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1395067 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java"
            ],
            "functions": [],
            "date": "2012-10-06"
        },
        {
            "commit_id": 732,
            "hash": "bedf8732cf2d09f4d5fd1360e2f23e7891af48aa",
            "commit_summary": "CODEC-160 Base64.encodeBase64URLSafeString doesn't add padding characters at the end.\nJavadoc updated to clarify this\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1396159 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/binary/Base64.java"
            ],
            "functions": [],
            "date": "2012-10-09"
        },
        {
            "commit_id": 733,
            "hash": "e4bc91c1bad25225cf335c1a8ecdf920f79a1f90",
            "commit_summary": "Remove trailing spaces.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1396319 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java"
            ],
            "functions": [
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                }
            ],
            "date": "2012-10-09"
        },
        {
            "commit_id": 734,
            "hash": "9e2f9e8f0062bce5a31988c8b01d638061b39dc1",
            "commit_summary": "<action dev=\"ggregory\" type=\"fix\" issue=\"CODEC-163\" due-to=\"leo141\">ColognePhonetic encoder unneccessarily creates many char arrays on every loop run.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1412589 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java"
            ],
            "functions": [
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                }
            ],
            "date": "2012-11-22"
        },
        {
            "commit_id": 735,
            "hash": "11dc48317f0a145a8f84c26f2780f6a8b823a829",
            "commit_summary": "Refactor to use a var arg method instead of private methods which are now no longer needed and removed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414901 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java"
            ],
            "functions": [
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4",
                        "criteria5",
                        "criteria6"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4",
                        "criteria5"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria1",
                        "criteria2",
                        "criteria3",
                        "criteria4"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                }
            ],
            "date": "2012-11-28"
        },
        {
            "commit_id": 736,
            "hash": "e2701a5a1872adc57a2735d39ac9a0dca37f75e3",
            "commit_summary": "<action dev=\"ggregory\" type=\"add\" issue=\"CODEC-161\" due-to=\"crice\">Add Match Rating Approach (MRA) phonetic algorithm encoder.</action>\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414916 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [],
            "functions": [
                {
                    "function name": "getMinRating",
                    "function params": [
                        "sumLength"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating"
                },
                {
                    "function name": "removeAccents",
                    "function params": [
                        "accentedWord"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "removeVowels",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels"
                },
                {
                    "function name": "cleanName",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName"
                },
                {
                    "function name": "getFirst3Last3",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.encode"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "letter"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel"
                },
                {
                    "function name": "removeDoubleConsonants",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.encode"
                },
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": null,
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                },
                {
                    "function name": "testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_BURNS_BOURNE_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_BRIAN_BRYAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SEAN_SHAUN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_SMYTH_to_SMYTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_PETE_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"
                },
                {
                    "function name": "testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"
                },
                {
                    "function name": "testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"
                },
                {
                    "function name": "testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_JOHN_MatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"
                },
                {
                    "function name": "testGetFirstLast3__ALEXANDER_Returns_Aleder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"
                },
                {
                    "function name": "testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"
                },
                {
                    "function name": "testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_Space_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"
                },
                {
                    "function name": "testGetEncoding_NoSpace_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"
                },
                {
                    "function name": "testIsVowel_CapitalA_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"
                },
                {
                    "function name": "testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"
                },
                {
                    "function name": "testGetEncoding_SMITH_to_SMTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"
                },
                {
                    "function name": "testGetMinRating_7_Return4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"
                },
                {
                    "function name": "testGetEncoding_One_Letter_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"
                },
                {
                    "function name": "getMatchRatingApproachEncoder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.getMatchRatingApproachEncoder"
                },
                {
                    "function name": "testGetEncoding_Null_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"
                },
                {
                    "function name": "testCompare_OONA_OONAGH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"
                },
                {
                    "function name": "testGetMinRating_2_Return1_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Return1_Successfully"
                },
                {
                    "function name": "testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_STEPHEN_STEVEN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_MICKY_MICHAEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"
                },
                {
                    "function name": "testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"
                },
                {
                    "function name": "testAccentRemoval_NINO_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"
                },
                {
                    "function name": "testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel__DECLAN_Returns_DCLN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"
                },
                {
                    "function name": "testCompare_CATHERINE_KATHRYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_STEPHEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"
                },
                {
                    "function name": "testCompare_STEVEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel_ALESSANDRA_Returns_ALSSNDR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"
                },
                {
                    "function name": "testRemoveDoubleDoubleVowel_BEETLE_NotRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"
                },
                {
                    "function name": "testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_SurnameCornerCase_Nulls_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"
                },
                {
                    "function name": "testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"
                },
                {
                    "function name": "testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"
                },
                {
                    "function name": "testcleanName_SuccessfullyClean",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"
                },
                {
                    "function name": "testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_HARPER_HRPR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"
                },
                {
                    "function name": "testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.createStringEncoder"
                },
                {
                    "function name": "testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_KARL_ALESSANDRO_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"
                },
                {
                    "function name": "testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"
                },
                {
                    "function name": "testCompare_SmallInput_CARK_Kl_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_PETERSON_PETERS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"
                },
                {
                    "function name": "testIsVowel_SmallD_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"
                },
                {
                    "function name": "testCompare_TOMASZ_TOM_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"
                },
                {
                    "function name": "testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"
                },
                {
                    "function name": "testCompare_ZACH_ZAKARIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel__AIDAN_Returns_ADN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"
                },
                {
                    "function name": "testCompare_SOPHIE_SOFIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemovalNormalString_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"
                },
                {
                    "function name": "testCompare_ShortNames_AL_ED_WorksButNoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"
                },
                {
                    "function name": "testGetMinRating_2_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"
                },
                {
                    "function name": "testCompare_SMITH_SMYTH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetFirstLast3_PETE_Returns_PETE",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"
                },
                {
                    "function name": "testAccentRemoval_AllLower_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_SAM_SAMUEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompareNameToSingleLetter_KARL_C_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": null,
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"
                }
            ],
            "date": "2012-11-28"
        },
        {
            "commit_id": 737,
            "hash": "c1e0ec2ef4af22f490391871fed4339530717f7d",
            "commit_summary": "Refactor tests to use generics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414922 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java"
            ],
            "functions": [
                {
                    "function name": "getStringEncoder",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.getStringEncoder"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.createStringEncoder"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.createStringEncoder"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.createStringEncoder"
                },
                {
                    "function name": "checkDoubleMetaphone",
                    "function params": [
                        "typeIndex",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.createStringEncoder"
                },
                {
                    "function name": "doubleMetaphoneNotEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.createStringEncoder"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                },
                {
                    "function name": "testNTilde",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde"
                },
                {
                    "function name": "testEmpty",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "testCCedilla",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualWithMATCHES",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"
                },
                {
                    "function name": "assertDoubleMetaphoneAlt",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt"
                },
                {
                    "function name": "assertDoubleMetaphone",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone"
                },
                {
                    "function name": "testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_BURNS_BOURNE_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_BRIAN_BRYAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SEAN_SHAUN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_SMYTH_to_SMYTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_PETE_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected"
                },
                {
                    "function name": "testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully"
                },
                {
                    "function name": "testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot"
                },
                {
                    "function name": "testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Forenames_SEAN_JOHN_MatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected"
                },
                {
                    "function name": "testGetFirstLast3__ALEXANDER_Returns_Aleder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder"
                },
                {
                    "function name": "testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant"
                },
                {
                    "function name": "testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_Space_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing"
                },
                {
                    "function name": "testGetEncoding_NoSpace_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_NoSpace_to_Nothing"
                },
                {
                    "function name": "testIsVowel_CapitalA_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_CapitalA_ReturnsTrue"
                },
                {
                    "function name": "testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected"
                },
                {
                    "function name": "testGetEncoding_SMITH_to_SMTH",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH"
                },
                {
                    "function name": "testGetMinRating_7_Return4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully"
                },
                {
                    "function name": "testGetEncoding_One_Letter_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing"
                },
                {
                    "function name": "testGetEncoding_Null_to_Nothing",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing"
                },
                {
                    "function name": "testCompare_OONA_OONAGH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch"
                },
                {
                    "function name": "testGetMinRating_2_Return1_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Return1_Successfully"
                },
                {
                    "function name": "testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_STEPHEN_STEVEN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch"
                },
                {
                    "function name": "testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_MICKY_MICHAEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched"
                },
                {
                    "function name": "testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0"
                },
                {
                    "function name": "testAccentRemoval_NINO_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NINO_NoChange"
                },
                {
                    "function name": "testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel__DECLAN_Returns_DCLN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN"
                },
                {
                    "function name": "testCompare_CATHERINE_KATHRYN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_STEPHEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant"
                },
                {
                    "function name": "testCompare_STEVEN_STEFAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel_ALESSANDRA_Returns_ALSSNDR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel_ALESSANDRA_Returns_ALSSNDR"
                },
                {
                    "function name": "testRemoveDoubleDoubleVowel_BEETLE_NotRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved"
                },
                {
                    "function name": "testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_SurnameCornerCase_Nulls_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch"
                },
                {
                    "function name": "testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch"
                },
                {
                    "function name": "testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant"
                },
                {
                    "function name": "testcleanName_SuccessfullyClean",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean"
                },
                {
                    "function name": "testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched"
                },
                {
                    "function name": "testGetEncoding_HARPER_HRPR",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR"
                },
                {
                    "function name": "testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.createStringEncoder"
                },
                {
                    "function name": "testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_KARL_ALESSANDRO_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch"
                },
                {
                    "function name": "testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully"
                },
                {
                    "function name": "testCompare_SmallInput_CARK_Kl_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched"
                },
                {
                    "function name": "testCompare_PETERSON_PETERS_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched"
                },
                {
                    "function name": "testIsVowel_SmallD_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse"
                },
                {
                    "function name": "testCompare_TOMASZ_TOM_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched"
                },
                {
                    "function name": "testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4"
                },
                {
                    "function name": "testCompare_ZACH_ZAKARIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched"
                },
                {
                    "function name": "testRemoveVowel__AIDAN_Returns_ADN",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN"
                },
                {
                    "function name": "testCompare_SOPHIE_SOFIA_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched"
                },
                {
                    "function name": "testAccentRemovalNormalString_NoChange",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange"
                },
                {
                    "function name": "testCompare_ShortNames_AL_ED_WorksButNoMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch"
                },
                {
                    "function name": "testGetMinRating_2_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully"
                },
                {
                    "function name": "testCompare_SMITH_SMYTH_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched"
                },
                {
                    "function name": "testGetFirstLast3_PETE_Returns_PETE",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE"
                },
                {
                    "function name": "testAccentRemoval_AllLower_SuccessfullyRemoved",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved"
                },
                {
                    "function name": "testCompare_SAM_SAMUEL_SuccessfullyMatched",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched"
                },
                {
                    "function name": "testCompareNameToSingleLetter_KARL_C_DoesNotMatch",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch"
                },
                {
                    "function name": "testWhy",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWhy"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.createStringEncoder"
                },
                {
                    "function name": "testWordsWithCIA",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA"
                },
                {
                    "function name": "testSetMaxLengthWithTruncation",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation"
                },
                {
                    "function name": "testDiscardOfSilentGN",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "testExceedLength",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testExceedLength"
                },
                {
                    "function name": "testDiscardOfSCEOrSCIOrSCY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                },
                {
                    "function name": "testTIOAndTIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX"
                },
                {
                    "function name": "testTranslateOfSCHAndCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH"
                },
                {
                    "function name": "testDiscardOfSilentHAfterG",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG"
                },
                {
                    "function name": "testTCH",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTCH"
                },
                {
                    "function name": "testMetaphone",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testMetaphone"
                },
                {
                    "function name": "testTranslateToJOfDGEOrDGIOrDGY",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY"
                },
                {
                    "function name": "testPHTOF",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testPHTOF"
                },
                {
                    "function name": "testSHAndSIOAndSIAToX",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX"
                },
                {
                    "function name": "testWordEndingInMB",
                    "function params": [],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.createStringEncoder"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testEncode"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testDifference"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.createStringEncoder"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                },
                {
                    "function name": "testMsSqlServer3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer3"
                },
                {
                    "function name": "testHWRuleEx2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx2"
                },
                {
                    "function name": "testHWRuleEx3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx3"
                },
                {
                    "function name": "testHWRuleEx1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testHWRuleEx1"
                },
                {
                    "function name": "testEncodeBatch4",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch4"
                },
                {
                    "function name": "testEncodeBasic",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBasic"
                },
                {
                    "function name": "createStringEncoder",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.createStringEncoder"
                },
                {
                    "function name": "testDifference",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testDifference"
                },
                {
                    "function name": "testEncodeBatch2",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch2"
                },
                {
                    "function name": "testBadCharacters",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testBadCharacters"
                },
                {
                    "function name": "testEncodeIgnoreTrimmable",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                },
                {
                    "function name": "testEncodeBatch3",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testEncodeBatch3"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testMsSqlServer1",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testMsSqlServer1"
                }
            ],
            "date": "2012-11-28"
        },
        {
            "commit_id": 738,
            "hash": "4c9b2228297650d9c7aeacbe31912ba241adfb38",
            "commit_summary": "Organize imports.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1414924 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/digest/DigestUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha2CryptTest.java"
            ],
            "functions": [],
            "date": "2012-11-28"
        },
        {
            "commit_id": 739,
            "hash": "ae4ea77b9f08e6d2282f1c373379b156cd184271",
            "commit_summary": "Remove cast.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429819 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java"
            ],
            "functions": [
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                }
            ],
            "date": "2013-01-07"
        },
        {
            "commit_id": 740,
            "hash": "bc9cfb6f0f630b705c8e9aa3ec79dd9c1c51f93b",
            "commit_summary": "Remove trailing whitespace.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429821 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                }
            ],
            "date": "2013-01-07"
        },
        {
            "commit_id": 741,
            "hash": "c6ad7fb90702a9103a3f565be0faac8ad5303b9f",
            "commit_summary": "Apply patch https://issues.apache.org/jira/secure/attachment/12561897/CODEC-161.patch\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429849 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testCompareNameSameNames_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testCompareNameNullSpace_ReturnsFalseSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully"
                },
                {
                    "function name": "testAccentRemoval_NullValue_ReturnNullSuccessfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully"
                }
            ],
            "date": "2013-01-07"
        },
        {
            "commit_id": 742,
            "hash": "ab1ee1b68b15234b62a840c4b1f6d2485d771450",
            "commit_summary": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429868 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/Charsets.java",
                "src/main/java/org/apache/commons/codec/DecoderException.java",
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                "src/main/java/org/apache/commons/codec/binary/Hex.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                "src/main/java/org/apache/commons/codec/language/Soundex.java",
                "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                "src/main/java/org/apache/commons/codec/net/BCodec.java",
                "src/main/java/org/apache/commons/codec/net/QCodec.java",
                "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                "src/main/java/org/apache/commons/codec/net/Utils.java",
                "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                "src/test/java/org/apache/commons/codec/net/URLCodecTest.java"
            ],
            "functions": [
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "toCharset",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Charsets.java",
                    "file old path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "file new path": "src/main/java/org/apache/commons/codec/Charsets.java",
                    "full name": "src.main.java.org.apache.commons.codec.Charsets.toCharset"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "DecoderException",
                    "function params": [
                        "message"
                    ],
                    "file name": "DecoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/DecoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.DecoderException.DecoderException"
                },
                {
                    "function name": "StringEncoderComparator",
                    "function params": [
                        "stringEncoder"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.main.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "StringEncoderComparator",
                    "function params": [
                        "stringEncoder"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.main.java.org.apache.commons.codec.StringEncoderComparator.StringEncoderComparator"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.main.java.org.apache.commons.codec.StringEncoderComparator.compare"
                },
                {
                    "function name": "compare",
                    "function params": [
                        "o1",
                        "o2"
                    ],
                    "file name": "StringEncoderComparator.java",
                    "file old path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "file new path": "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                    "full name": "src.main.java.org.apache.commons.codec.StringEncoderComparator.compare"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.isInAlphabet"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.isInAlphabet"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "useHex"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "Base32",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.Base32"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "base64"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decode"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isInAlphabet"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64URLSafe",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafe"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isInAlphabet"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeBase64Chunked",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64Chunked"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64String"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "encodeInteger",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeInteger"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "lineLength",
                        "lineSeparator",
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "encodeBase64String",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64String"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64String"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "encodeBase64Chunked",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64Chunked"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "decodeInteger",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeInteger"
                },
                {
                    "function name": "toIntegerBytes",
                    "function params": [
                        "bigInt"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.toIntegerBytes"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encode"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "octet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "decodeBase64",
                    "function params": [
                        "base64Data"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "Base64",
                    "function params": [
                        "urlSafe"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.Base64"
                },
                {
                    "function name": "encodeBase64URLSafe",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafe"
                },
                {
                    "function name": "encodeBase64URLSafeString",
                    "function params": [
                        "binaryData"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64URLSafeString"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "isArrayByteBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isArrayByteBase64"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "base64"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "isBase64",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.isBase64"
                },
                {
                    "function name": "decodeInteger",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.decodeInteger"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "isWhiteSpace",
                    "function params": [
                        "byteToCheck"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace"
                },
                {
                    "function name": "encodeAsString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeAsString"
                },
                {
                    "function name": "resizeBuffer",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.resizeBuffer"
                },
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                },
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "encodeToString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeToString"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "arrayOctet",
                        "allowWSPad"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "available",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "hasData",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.hasData"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "available",
                    "function params": [
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.available"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encode"
                },
                {
                    "function name": "encodeAsString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeAsString"
                },
                {
                    "function name": "getEncodedLength",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.getEncodedLength"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "basen"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "ensureBufferSize",
                    "function params": [
                        "size",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.decode"
                },
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "isInAlphabet",
                    "function params": [
                        "basen"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.isInAlphabet"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "encodeToString",
                    "function params": [
                        "pArray"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.encodeToString"
                },
                {
                    "function name": "containsAlphabetOrPad",
                    "function params": [
                        "arrayOctet"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "readResults",
                    "function params": [
                        "b",
                        "bPos",
                        "bAvail",
                        "context"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.readResults"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.skip"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "in",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "read",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.read"
                },
                {
                    "function name": "BaseNCodecInputStream",
                    "function params": [
                        "in",
                        "baseNCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.BaseNCodecInputStream"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readLimit"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.mark"
                },
                {
                    "function name": "mark",
                    "function params": [
                        "readLimit"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.mark"
                },
                {
                    "function name": "skip",
                    "function params": [
                        "n"
                    ],
                    "file name": "BaseNCodecInputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecInputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecInputStream.skip"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "out",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                },
                {
                    "function name": "write",
                    "function params": [
                        "i"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "i"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "write",
                    "function params": [
                        "offset",
                        "len"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.write"
                },
                {
                    "function name": "BaseNCodecOutputStream",
                    "function params": [
                        "out",
                        "basedCodec",
                        "doEncode"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.BaseNCodecOutputStream"
                },
                {
                    "function name": "flush",
                    "function params": [
                        "propogate"
                    ],
                    "file name": "BaseNCodecOutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodecOutputStream.flush"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.decode"
                },
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.encode"
                },
                {
                    "function name": "isEmpty",
                    "function params": [
                        "array"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.isEmpty"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.decode"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toByteArray"
                },
                {
                    "function name": "toAsciiChars",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars"
                },
                {
                    "function name": "isEmpty",
                    "function params": [
                        "array"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.isEmpty"
                },
                {
                    "function name": "toAsciiString",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiString"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.encode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.encode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "toByteArray",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toByteArray"
                },
                {
                    "function name": "toAsciiString",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiString"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.decode"
                },
                {
                    "function name": "toAsciiBytes",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "raw"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.encode"
                },
                {
                    "function name": "fromAscii",
                    "function params": [
                        "ascii"
                    ],
                    "file name": "BinaryCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BinaryCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BinaryCodec.fromAscii"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "toDigit",
                    "function params": [
                        "ch",
                        "index"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toDigit"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "Hex",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "Hex",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toLowerCase"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "Hex",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "array"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decode"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "toDigit",
                    "function params": [
                        "ch",
                        "index"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.toDigit"
                },
                {
                    "function name": "decodeHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.decodeHex"
                },
                {
                    "function name": "Hex",
                    "function params": [
                        "charset"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.Hex"
                },
                {
                    "function name": "encodeHexString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHexString"
                },
                {
                    "function name": "encodeHex",
                    "function params": [
                        "data",
                        "toDigits"
                    ],
                    "file name": "Hex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Hex.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Hex.encodeHex"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUsAscii"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Be"
                },
                {
                    "function name": "getBytesUnchecked",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUnchecked"
                },
                {
                    "function name": "newStringUtf16Be",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Be"
                },
                {
                    "function name": "getBytes",
                    "function params": [
                        "string",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytes"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringIso8859_1"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Le"
                },
                {
                    "function name": "newStringUsAscii",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUsAscii"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "getBytesUnchecked",
                    "function params": [
                        "string",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUnchecked"
                },
                {
                    "function name": "getBytes",
                    "function params": [
                        "string",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytes"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Be",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Be"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charset"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "newString",
                    "function params": [
                        "bytes",
                        "charsetName"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newString"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf8"
                },
                {
                    "function name": "getBytesUtf16",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16"
                },
                {
                    "function name": "newStringIso8859_1",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringIso8859_1"
                },
                {
                    "function name": "newIllegalStateException",
                    "function params": [
                        "charsetName",
                        "e"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newIllegalStateException"
                },
                {
                    "function name": "getBytesUsAscii",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUsAscii"
                },
                {
                    "function name": "getBytesUtf8",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf8"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf8"
                },
                {
                    "function name": "newStringUtf8",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf8"
                },
                {
                    "function name": "newStringUtf16",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le"
                },
                {
                    "function name": "newIllegalStateException",
                    "function params": [
                        "charsetName",
                        "e"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newIllegalStateException"
                },
                {
                    "function name": "newStringUtf16Le",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newStringUtf16Le"
                },
                {
                    "function name": "getBytesIso8859_1",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesIso8859_1"
                },
                {
                    "function name": "getBytesUtf16Le",
                    "function params": [
                        "string"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.getBytesUtf16Le"
                },
                {
                    "function name": "b64from24bit",
                    "function params": [
                        "b2",
                        "b1",
                        "b0",
                        "outLen",
                        "buffer"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.b64from24bit"
                },
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "getRandomSalt",
                    "function params": [
                        "num"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.getRandomSalt"
                },
                {
                    "function name": "b64from24bit",
                    "function params": [
                        "b2",
                        "b1",
                        "b0",
                        "outLen",
                        "buffer"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.b64from24bit"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "key",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Crypt.crypt"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "updateDigest",
                    "function params": [
                        "messageDigest",
                        "valueToDigest"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.updateDigest"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "md2",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2"
                },
                {
                    "function name": "md5Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5Hex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "getDigest",
                    "function params": [
                        "algorithm"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.getDigest"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "sha1Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1Hex"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha384",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "md5",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md5"
                },
                {
                    "function name": "sha384Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha384Hex"
                },
                {
                    "function name": "digest",
                    "function params": [
                        "digest",
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.digest"
                },
                {
                    "function name": "sha512Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512Hex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha256Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256Hex"
                },
                {
                    "function name": "sha1",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha1"
                },
                {
                    "function name": "sha256",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha256"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "md2Hex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.md2Hex"
                },
                {
                    "function name": "shaHex",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.shaHex"
                },
                {
                    "function name": "sha512",
                    "function params": [
                        "data"
                    ],
                    "file name": "DigestUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/DigestUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.DigestUtils.sha512"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "prefix"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "apr1Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt"
                },
                {
                    "function name": "md5Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Md5Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Md5Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Md5Crypt.md5Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha256Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes",
                        "salt"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "sha512Crypt",
                    "function params": [
                        "keyBytes"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt"
                },
                {
                    "function name": "hPermOp",
                    "function params": [
                        "a",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.hPermOp"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "fourBytesToInt",
                    "function params": [
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt"
                },
                {
                    "function name": "fourBytesToInt",
                    "function params": [
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                },
                {
                    "function name": "byteToUnsigned",
                    "function params": [
                        "b"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned"
                },
                {
                    "function name": "hPermOp",
                    "function params": [
                        "a",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.hPermOp"
                },
                {
                    "function name": "dEncrypt",
                    "function params": [
                        "el",
                        "r",
                        "s",
                        "e0",
                        "e1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.dEncrypt"
                },
                {
                    "function name": "body",
                    "function params": [
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "byteToUnsigned",
                    "function params": [
                        "b"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "body",
                    "function params": [
                        "eSwap0",
                        "eSwap1"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.body"
                },
                {
                    "function name": "permOp",
                    "function params": [
                        "a",
                        "b",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.permOp"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original",
                        "salt"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "intToFourBytes",
                    "function params": [
                        "iValue",
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.intToFourBytes"
                },
                {
                    "function name": "intToFourBytes",
                    "function params": [
                        "iValue",
                        "offset"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.intToFourBytes"
                },
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "crypt",
                    "function params": [
                        "original"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.crypt"
                },
                {
                    "function name": "desSetKey",
                    "function params": [],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.desSetKey"
                },
                {
                    "function name": "permOp",
                    "function params": [
                        "a",
                        "b",
                        "n",
                        "m"
                    ],
                    "file name": "UnixCrypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/UnixCrypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.UnixCrypt.permOp"
                },
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.AbstractCaverphone.encode"
                },
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.AbstractCaverphone.isEncodeEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "AbstractCaverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/AbstractCaverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.AbstractCaverphone.encode"
                },
                {
                    "function name": "caverphone",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "caverphone",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.caverphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.encode"
                },
                {
                    "function name": "isCaverphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Caverphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone.isCaverphoneEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone1.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone1.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone1.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "Caverphone2.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Caverphone2.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Caverphone2.encode"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "colognePhonetic",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.colognePhonetic"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "arrayContains",
                    "function params": [
                        "arr",
                        "key"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.arrayContains"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "preprocess",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.preprocess"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "chr"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "data"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "ch"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "ch"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "arrayContains",
                    "function params": [
                        "arr",
                        "key"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.arrayContains"
                },
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "text1",
                        "text2"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual"
                },
                {
                    "function name": "CologneOutputBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer"
                },
                {
                    "function name": "CologneBuffer",
                    "function params": [
                        "buffSize"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneBuffer"
                },
                {
                    "function name": "CologneInputBuffer",
                    "function params": [
                        "start",
                        "length"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer"
                },
                {
                    "function name": "isEncodeEqual",
                    "function params": [
                        "text1",
                        "text2"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.isEncodeEqual"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "text"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "object"
                    ],
                    "file name": "ColognePhonetic.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/ColognePhonetic.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.ColognePhonetic.encode"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isVowel"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "isSilentStart",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSilentStart"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "charAt",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.charAt"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "ch"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isVowel"
                },
                {
                    "function name": "handleC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleC"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "handleH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleH"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleX",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleX"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "isSlavoGermanic",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.setMaxCodeLen"
                },
                {
                    "function name": "handleAEIOUY",
                    "function params": [
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionCH0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH0"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "handleL",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleL"
                },
                {
                    "function name": "conditionL0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionL0"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "conditionCH1",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionCH1"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "isSlavoGermanic",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic"
                },
                {
                    "function name": "handleCC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCC"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleSC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleSC"
                },
                {
                    "function name": "handleC",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleC"
                },
                {
                    "function name": "handleD",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleD"
                },
                {
                    "function name": "handleH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleH"
                },
                {
                    "function name": "handleGH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleGH"
                },
                {
                    "function name": "isSilentStart",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isSilentStart"
                },
                {
                    "function name": "charAt",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.charAt"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "value",
                        "start",
                        "length",
                        "criteria"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.contains"
                },
                {
                    "function name": "handleCH",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleCH"
                },
                {
                    "function name": "handleT",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleT"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "handleW",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleW"
                },
                {
                    "function name": "DoubleMetaphoneResult",
                    "function params": [
                        "primary",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult"
                },
                {
                    "function name": "conditionM0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionM0"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "doubleMetaphone",
                    "function params": [
                        "value"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "handleD",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleD"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.encode"
                },
                {
                    "function name": "conditionC0",
                    "function params": [
                        "value",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.conditionC0"
                },
                {
                    "function name": "isDoubleMetaphoneEqual",
                    "function params": [
                        "value1",
                        "value2"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.isDoubleMetaphoneEqual"
                },
                {
                    "function name": "handleP",
                    "function params": [
                        "value",
                        "result",
                        "index"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleP"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "removeAccents",
                    "function params": [
                        "accentedWord"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents"
                },
                {
                    "function name": "removeDoubleConsonants",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "removeVowels",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels"
                },
                {
                    "function name": "cleanName",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName"
                },
                {
                    "function name": "getFirst3Last3",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "letter"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel"
                },
                {
                    "function name": "removeDoubleConsonants",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "letter"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel"
                },
                {
                    "function name": "isEncodeEquals",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "isMetaphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isMetaphoneEqual"
                },
                {
                    "function name": "regionMatch",
                    "function params": [
                        "string",
                        "index",
                        "test"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.regionMatch"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "string",
                        "index"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isVowel"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.setMaxCodeLen"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "isLastChar",
                    "function params": [
                        "wdsz",
                        "n"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isLastChar"
                },
                {
                    "function name": "isNextChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isNextChar"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "metaphone",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.metaphone"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.encode"
                },
                {
                    "function name": "isMetaphoneEqual",
                    "function params": [
                        "str1",
                        "str2"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isMetaphoneEqual"
                },
                {
                    "function name": "isPreviousChar",
                    "function params": [
                        "string",
                        "index",
                        "c"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isPreviousChar"
                },
                {
                    "function name": "isLastChar",
                    "function params": [
                        "wdsz",
                        "n"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.isLastChar"
                },
                {
                    "function name": "setMaxCodeLen",
                    "function params": [
                        "maxCodeLen"
                    ],
                    "file name": "Metaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Metaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Metaphone.setMaxCodeLen"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "nysiis",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.nysiis"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Nysiis.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Nysiis.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Nysiis.encode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.difference"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "c"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.getMappingCode"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.soundex"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.difference"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.encode"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "RefinedSoundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "RefinedSoundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/RefinedSoundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.RefinedSoundex.RefinedSoundex"
                },
                {
                    "function name": "map",
                    "function params": [
                        "ch"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "setMaxLength",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.setMaxLength"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "soundex",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.soundex"
                },
                {
                    "function name": "map",
                    "function params": [
                        "ch"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.map"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "str",
                        "index"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.encode"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "Soundex",
                    "function params": [
                        "mapping"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.Soundex"
                },
                {
                    "function name": "setMaxLength",
                    "function params": [
                        "maxLength"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.setMaxLength"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "s1",
                        "s2"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.difference"
                },
                {
                    "function name": "getMappingCode",
                    "function params": [
                        "str",
                        "index"
                    ],
                    "file name": "Soundex.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/Soundex.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.Soundex.getMappingCode"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.clean"
                },
                {
                    "function name": "differenceEncoded",
                    "function params": [
                        "es1",
                        "es2"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.differenceEncoded"
                },
                {
                    "function name": "differenceEncoded",
                    "function params": [
                        "es1",
                        "es2"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.differenceEncoded"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "encoder",
                        "s1",
                        "s2"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.difference"
                },
                {
                    "function name": "difference",
                    "function params": [
                        "encoder",
                        "s1",
                        "s2"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.difference"
                },
                {
                    "function name": "clean",
                    "function params": [
                        "str"
                    ],
                    "file name": "SoundexUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/SoundexUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.SoundexUtils.clean"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode"
                },
                {
                    "function name": "setRuleType",
                    "function params": [
                        "ruleType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType"
                },
                {
                    "function name": "setRuleType",
                    "function params": [
                        "ruleType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setRuleType"
                },
                {
                    "function name": "setMaxPhonemes",
                    "function params": [
                        "maxPhonemes"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes"
                },
                {
                    "function name": "setConcat",
                    "function params": [
                        "concat"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat"
                },
                {
                    "function name": "setMaxPhonemes",
                    "function params": [
                        "maxPhonemes"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setMaxPhonemes"
                },
                {
                    "function name": "setNameType",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "source"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode"
                },
                {
                    "function name": "setNameType",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setNameType"
                },
                {
                    "function name": "setConcat",
                    "function params": [
                        "concat"
                    ],
                    "file name": "BeiderMorseEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/BeiderMorseEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.BeiderMorseEncoder.setConcat"
                },
                {
                    "function name": "LangRule",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.LangRule"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.instance"
                },
                {
                    "function name": "LangRule",
                    "function params": [
                        "pattern",
                        "languages",
                        "acceptOnMatch"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.LangRule"
                },
                {
                    "function name": "Lang",
                    "function params": [
                        "rules",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.Lang"
                },
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "LangRule",
                    "function params": [
                        "txt"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.LangRule"
                },
                {
                    "function name": "loadFromResource",
                    "function params": [
                        "languageRulesResourceName",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.loadFromResource"
                },
                {
                    "function name": "LangRule",
                    "function params": [
                        "pattern",
                        "languages",
                        "acceptOnMatch"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.LangRule"
                },
                {
                    "function name": "guessLanguage",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguage"
                },
                {
                    "function name": "guessLanguage",
                    "function params": [
                        "text"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguage"
                },
                {
                    "function name": "instance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.instance"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.for"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.for"
                },
                {
                    "function name": "guessLanguages",
                    "function params": [
                        "input"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.guessLanguages"
                },
                {
                    "function name": "Lang",
                    "function params": [
                        "rules",
                        "languages"
                    ],
                    "file name": "Lang.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Lang.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Lang.Lang"
                },
                {
                    "function name": "Languages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.Languages"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.for"
                },
                {
                    "function name": "langResourceName",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.langResourceName"
                },
                {
                    "function name": "langResourceName",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.langResourceName"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "Languages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.Languages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [
                        "langs"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "languages"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "language"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "languagesResourceName"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "other"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "LanguageSet",
                    "function params": [],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.LanguageSet"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.getInstance"
                },
                {
                    "function name": "SomeLanguages",
                    "function params": [
                        "language"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.SomeLanguages"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Languages.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Languages.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Languages.for"
                },
                {
                    "function name": "NameType",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameType.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.NameType.NameType"
                },
                {
                    "function name": "NameType",
                    "function params": [
                        "name"
                    ],
                    "file name": "NameType.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/NameType.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.NameType.NameType"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "join",
                    "function params": [
                        "strings",
                        "sep"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.join"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "applyFinalRules",
                    "function params": [
                        "phonemeBuilder",
                        "finalRules"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "languages"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "languages"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "join",
                    "function params": [
                        "strings",
                        "sep"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.join"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [
                        "finalRules",
                        "input",
                        "phonemeBuilder",
                        "i",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "input",
                        "languageSet"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.encode"
                },
                {
                    "function name": "cacheSubSequence",
                    "function params": [
                        "cached"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.cacheSubSequence"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemeExpr",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "PhonemeBuilder",
                    "function params": [
                        "str"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhonemeBuilder"
                },
                {
                    "function name": "RulesApplication",
                    "function params": [],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.RulesApplication"
                },
                {
                    "function name": "parsePhonemeExpr",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr"
                },
                {
                    "function name": "startsWith",
                    "function params": [
                        "input",
                        "prefix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.startsWith"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "Rule",
                    "function params": [
                        "pattern",
                        "lContext",
                        "rContext",
                        "phoneme"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Rule"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "chars",
                        "input"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.contains"
                },
                {
                    "function name": "startsWith",
                    "function params": [
                        "input",
                        "prefix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.startsWith"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "parsePhoneme",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhoneme"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "phonemeText",
                        "languages"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "parseRules",
                    "function params": [
                        "scanner",
                        "location"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parseRules"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                },
                {
                    "function name": "parsePhoneme",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhoneme"
                },
                {
                    "function name": "RPattern",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.RPattern"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                },
                {
                    "function name": "endsWith",
                    "function params": [
                        "input",
                        "suffix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.endsWith"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "createResourceName",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createResourceName"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "pattern",
                    "function params": [
                        "regex"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.pattern"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "right"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "parsePhonemeExpr",
                    "function params": [
                        "ph"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr"
                },
                {
                    "function name": "Phoneme",
                    "function params": [
                        "str"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                },
                {
                    "function name": "patternAndContextMatches",
                    "function params": [
                        "input",
                        "i"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.patternAndContextMatches"
                },
                {
                    "function name": "PhonemeList",
                    "function params": [
                        "phonemes"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.PhonemeList"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "Phoneme",
                    "function params": [],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.Phoneme"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                },
                {
                    "function name": "createScanner",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createScanner"
                },
                {
                    "function name": "endsWith",
                    "function params": [
                        "input",
                        "suffix"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.endsWith"
                },
                {
                    "function name": "createResourceName",
                    "function params": [
                        "nameType",
                        "rt",
                        "lang"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.createResourceName"
                },
                {
                    "function name": "contains",
                    "function params": [
                        "chars",
                        "input"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.contains"
                },
                {
                    "function name": "RuleType",
                    "function params": [
                        "name"
                    ],
                    "file name": "RuleType.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.RuleType.RuleType"
                },
                {
                    "function name": "RuleType",
                    "function params": [
                        "name"
                    ],
                    "file name": "RuleType.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/RuleType.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.RuleType.RuleType"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doDecoding"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "value"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.decode"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doEncoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "value",
                        "charset"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.encode"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "BCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/BCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.BCodec.doDecoding"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "setEncodeBlanks",
                    "function params": [
                        "b"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.setEncodeBlanks"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doDecoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doEncoding"
                },
                {
                    "function name": "doDecoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doDecoding"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.encode"
                },
                {
                    "function name": "setEncodeBlanks",
                    "function params": [
                        "b"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.setEncodeBlanks"
                },
                {
                    "function name": "doEncoding",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.doEncoding"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decodeQuotedPrintable",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "QuotedPrintableCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.QuotedPrintableCodec"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "b",
                        "buffer"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encode"
                },
                {
                    "function name": "encodeQuotedPrintable",
                    "function params": [
                        "printable",
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "QuotedPrintableCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/QuotedPrintableCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.QuotedPrintableCodec.decode"
                },
                {
                    "function name": "encodeText",
                    "function params": [
                        "text",
                        "charset"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.encodeText"
                },
                {
                    "function name": "decodeText",
                    "function params": [
                        "text"
                    ],
                    "file name": "RFC1522Codec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/RFC1522Codec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.RFC1522Codec.decodeText"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "URLCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "URLCodec",
                    "function params": [
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.URLCodec"
                },
                {
                    "function name": "decodeUrl",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decodeUrl"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "decode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str",
                        "charset"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "obj"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "str"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encode"
                },
                {
                    "function name": "encodeUrl",
                    "function params": [
                        "urlsafe",
                        "bytes"
                    ],
                    "file name": "URLCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/URLCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.URLCodec.encodeUrl"
                },
                {
                    "function name": "digit16",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.digit16"
                },
                {
                    "function name": "digit16",
                    "function params": [
                        "b"
                    ],
                    "file name": "Utils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/net/Utils.java",
                    "full name": "src.main.java.org.apache.commons.codec.net.Utils.digit16"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "BinaryEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/BinaryEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.BinaryEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "testConstructorStringThrowable",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.DecoderExceptionTest.testConstructorStringThrowable"
                },
                {
                    "function name": "testConstructorThrowable",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.DecoderExceptionTest.testConstructorThrowable"
                },
                {
                    "function name": "testConstructor0",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.DecoderExceptionTest.testConstructor0"
                },
                {
                    "function name": "testConstructorString",
                    "function params": [],
                    "file name": "DecoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/DecoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.DecoderExceptionTest.testConstructorString"
                },
                {
                    "function name": "testConstructorThrowable",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.EncoderExceptionTest.testConstructorThrowable"
                },
                {
                    "function name": "testConstructorStringThrowable",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.EncoderExceptionTest.testConstructorStringThrowable"
                },
                {
                    "function name": "testConstructor0",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.EncoderExceptionTest.testConstructor0"
                },
                {
                    "function name": "testConstructorString",
                    "function params": [],
                    "file name": "EncoderExceptionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/EncoderExceptionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.EncoderExceptionTest.testConstructorString"
                },
                {
                    "function name": "checkEncodings",
                    "function params": [
                        "data"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings"
                },
                {
                    "function name": "testEncodeEmpty",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeEmpty"
                },
                {
                    "function name": "checkEncodingVariations",
                    "function params": [
                        "expected"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations"
                },
                {
                    "function name": "testEncodeWithInvalidObject",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeWithInvalidObject"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding"
                },
                {
                    "function name": "checkEncodings",
                    "function params": [
                        "data"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings"
                },
                {
                    "function name": "testLocaleIndependence",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence"
                },
                {
                    "function name": "checkEncodingVariations",
                    "function params": [
                        "expected"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncodingVariations"
                },
                {
                    "function name": "checkEncoding",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "StringEncoderAbstractTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderAbstractTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderAbstractTest.testEncodeNull"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphone",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone"
                },
                {
                    "function name": "testComparatorWithDoubleMetaphoneAndInvalidInput",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput"
                },
                {
                    "function name": "testComparatorWithSoundex",
                    "function params": [],
                    "file name": "StringEncoderComparatorTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/StringEncoderComparatorTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testRead0"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105"
                },
                {
                    "function name": "testBase32EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByChunk"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130"
                },
                {
                    "function name": "testBase32InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase32EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStream"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase32InputStreamByChunk",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base32InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testBase32OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testBase32OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase32EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream"
                },
                {
                    "function name": "testBase32EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base32OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStream"
                },
                {
                    "function name": "testRandomBytes",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytes"
                },
                {
                    "function name": "testRandomBytesHex",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesHex"
                },
                {
                    "function name": "testBase32Chunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Chunked"
                },
                {
                    "function name": "testRandomBytesChunked",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked"
                },
                {
                    "function name": "testSingleCharEncoding",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding"
                },
                {
                    "function name": "testBase32Samples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32Samples"
                },
                {
                    "function name": "testBase32HexSamples",
                    "function params": [],
                    "file name": "Base32Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32Test.testBase32HexSamples"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "codec",
                        "size"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32TestData.randomData"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32TestData.resizeArray"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in",
                        "buf"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32TestData.streamToBytes"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "codec",
                        "size"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32TestData.randomData"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32TestData.bytesContain"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base32TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base32TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base32TestData.bytesContain"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "initSTRINGS",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.initSTRINGS"
                },
                {
                    "function name": "initCHUNKED_STRINGS",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.initCHUNKED_STRINGS"
                },
                {
                    "function name": "testStaticEncodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked"
                },
                {
                    "function name": "testBinaryEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder"
                },
                {
                    "function name": "initBYTES",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.initBYTES"
                },
                {
                    "function name": "utf8",
                    "function params": [
                        "s"
                    ],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.utf8"
                },
                {
                    "function name": "testStaticEncode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode"
                },
                {
                    "function name": "testEncoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testEncoder"
                },
                {
                    "function name": "testBinaryDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder"
                },
                {
                    "function name": "testStaticDecode",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode"
                },
                {
                    "function name": "testDecoder",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testDecoder"
                },
                {
                    "function name": "testStaticDecodeChunked",
                    "function params": [],
                    "file name": "Base64Codec13Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Codec13Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByChunk"
                },
                {
                    "function name": "testSkipBig",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig"
                },
                {
                    "function name": "testSkipToEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd"
                },
                {
                    "function name": "testSkipNone",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone"
                },
                {
                    "function name": "testSkipWrongArgument",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument"
                },
                {
                    "function name": "testCodec105",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105"
                },
                {
                    "function name": "testCodec101",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101"
                },
                {
                    "function name": "testRead0",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testRead0"
                },
                {
                    "function name": "testInputStreamReader",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader"
                },
                {
                    "function name": "testSkipPastEnd",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testMarkSupported",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported"
                },
                {
                    "function name": "testReadNull",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64InputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte"
                },
                {
                    "function name": "testCodec130",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testAvailable",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testByteByByte"
                },
                {
                    "function name": "testReadOutOfBounds",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds"
                },
                {
                    "function name": "testBase64EmptyInputStream",
                    "function params": [
                        "chuckSize"
                    ],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStream"
                },
                {
                    "function name": "testBase64InputStreamByChunk",
                    "function params": [],
                    "file name": "Base64InputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64InputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testBase64OutputStreamByteByByte",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte"
                },
                {
                    "function name": "testWriteToNullCoverage",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage"
                },
                {
                    "function name": "testBase64EmptyOutputStream",
                    "function params": [
                        "chunkSize"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStream"
                },
                {
                    "function name": "testBase64OutputStreamByChunk",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testWriteOutOfBounds",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds"
                },
                {
                    "function name": "testByteByByte",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByteByByte"
                },
                {
                    "function name": "testCodec98NPE",
                    "function params": [],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE"
                },
                {
                    "function name": "testByChunk",
                    "function params": [
                        "encoded",
                        "decoded",
                        "chunkSize",
                        "seperator"
                    ],
                    "file name": "Base64OutputStreamTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64OutputStreamTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64OutputStreamTest.testByChunk"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testBase64"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean_UrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe"
                },
                {
                    "function name": "testRfc4648Section10DecodeWithCrLf",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf"
                },
                {
                    "function name": "testNonBase64Test",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testNonBase64Test"
                },
                {
                    "function name": "testEncodeDecodeSmall",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall"
                },
                {
                    "function name": "testConstructors",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructors"
                },
                {
                    "function name": "testEncodeDecode",
                    "function params": [
                        "plainText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecode"
                },
                {
                    "function name": "testCodeInteger4",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger4"
                },
                {
                    "function name": "testCodeInteger3",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger3"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom"
                },
                {
                    "function name": "testUUID",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUUID"
                },
                {
                    "function name": "testStringToByteVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testStringToByteVariations"
                },
                {
                    "function name": "testDecodeEncode",
                    "function params": [
                        "encodedText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeEncode"
                },
                {
                    "function name": "testCodeInteger1",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger1"
                },
                {
                    "function name": "testObjectDecodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter"
                },
                {
                    "function name": "testUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testUrlSafe"
                },
                {
                    "function name": "testDecodeEncode",
                    "function params": [
                        "encodedText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeEncode"
                },
                {
                    "function name": "testCodec112",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec112"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "testCodeIntegerNull",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull"
                },
                {
                    "function name": "testObjectDecodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter"
                },
                {
                    "function name": "testCodec68",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodec68"
                },
                {
                    "function name": "testChunkedEncodeMultipleOf76",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76"
                },
                {
                    "function name": "testDecodeWithWhitespace",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace"
                },
                {
                    "function name": "testEncodeDecode",
                    "function params": [
                        "plainText"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeDecode"
                },
                {
                    "function name": "testObjectEncodeWithValidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter"
                },
                {
                    "function name": "testPairs",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testPairs"
                },
                {
                    "function name": "testConstructor_Int_ByteArray_Boolean",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean"
                },
                {
                    "function name": "testIsUrlSafe",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsUrlSafe"
                },
                {
                    "function name": "testObjectEncodeWithInvalidParameter",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter"
                },
                {
                    "function name": "testSingletons",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testSingletons"
                },
                {
                    "function name": "toString",
                    "function params": [
                        "data"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.toString"
                },
                {
                    "function name": "testCodeInteger2",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testCodeInteger2"
                },
                {
                    "function name": "testHugeLineSeparator",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testHugeLineSeparator"
                },
                {
                    "function name": "testIsStringBase64",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testIsStringBase64"
                },
                {
                    "function name": "testObjectEncode",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testObjectEncode"
                },
                {
                    "function name": "testByteToStringVariations",
                    "function params": [],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testByteToStringVariations"
                },
                {
                    "function name": "testEncodeOverMaxSize",
                    "function params": [
                        "maxSize"
                    ],
                    "file name": "Base64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "urlSafe"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64TestData.randomData"
                },
                {
                    "function name": "resizeArray",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64TestData.resizeArray"
                },
                {
                    "function name": "randomData",
                    "function params": [
                        "size",
                        "urlSafe"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64TestData.randomData"
                },
                {
                    "function name": "streamToBytes",
                    "function params": [
                        "in",
                        "buf"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64TestData.streamToBytes"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64TestData.bytesContain"
                },
                {
                    "function name": "bytesContain",
                    "function params": [
                        "bytes",
                        "c"
                    ],
                    "file name": "Base64TestData.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Base64TestData.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Base64TestData.bytesContain"
                },
                {
                    "function name": "setUp",
                    "function params": [],
                    "file name": "BaseNCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BaseNCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BaseNCodecTest.setUp"
                },
                {
                    "function name": "testEncodeObjectNull",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull"
                },
                {
                    "function name": "testEncodeObjectException",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject"
                },
                {
                    "function name": "assertDecodeObject",
                    "function params": [
                        "bits",
                        "encodeMe"
                    ],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.assertDecodeObject"
                },
                {
                    "function name": "testDecodeObjectException",
                    "function params": [],
                    "file name": "BinaryCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/BinaryCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException"
                },
                {
                    "function name": "read",
                    "function params": [
                        "pos",
                        "len"
                    ],
                    "file name": "Codec105ErrorInputStream.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Codec105ErrorInputStream.read"
                },
                {
                    "function name": "read",
                    "function params": [
                        "pos",
                        "len"
                    ],
                    "file name": "Codec105ErrorInputStream.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/Codec105ErrorInputStream.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.Codec105ErrorInputStream.read"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "testDecodeBadCharacterPos0",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0"
                },
                {
                    "function name": "log",
                    "function params": [
                        "t"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "testHelloWorldUpperCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                },
                {
                    "function name": "testDecodeArrayOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters"
                },
                {
                    "function name": "log",
                    "function params": [
                        "s"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "testDecodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeClassCastException"
                },
                {
                    "function name": "log",
                    "function params": [
                        "t"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "charsetSanityCheck",
                    "function params": [
                        "name"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.charsetSanityCheck"
                },
                {
                    "function name": "testEncodeDecodeRandom",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom"
                },
                {
                    "function name": "testEncodeClassCastException",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeClassCastException"
                },
                {
                    "function name": "testEncodeZeroes",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testEncodeZeroes"
                },
                {
                    "function name": "testHelloWorldLowerCaseHex",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex"
                },
                {
                    "function name": "checkDecodeHexOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexOddCharacters"
                },
                {
                    "function name": "testDecodeStringOddCharacters",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeStringOddCharacters"
                },
                {
                    "function name": "log",
                    "function params": [
                        "s"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.log"
                },
                {
                    "function name": "testDecodeBadCharacterPos1",
                    "function params": [],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1"
                },
                {
                    "function name": "testCustomCharset",
                    "function params": [
                        "name",
                        "parent"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.testCustomCharset"
                },
                {
                    "function name": "checkDecodeHexOddCharacters",
                    "function params": [
                        "data"
                    ],
                    "file name": "HexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/HexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.HexTest.checkDecodeHexOddCharacters"
                },
                {
                    "function name": "testGetBytesIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1"
                },
                {
                    "function name": "testNewStringBadEnc",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc"
                },
                {
                    "function name": "testNewStringUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16"
                },
                {
                    "function name": "testGetBytesUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8"
                },
                {
                    "function name": "testNewString",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewString"
                },
                {
                    "function name": "testNewStringUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii"
                },
                {
                    "function name": "testNewStringIso8859_1",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1"
                },
                {
                    "function name": "testNewString",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewString"
                },
                {
                    "function name": "testGetBytesUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le"
                },
                {
                    "function name": "testGetBytesUnchecked",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked"
                },
                {
                    "function name": "testGetBytesUncheckedBadName",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName"
                },
                {
                    "function name": "testGetBytesUsAscii",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii"
                },
                {
                    "function name": "testGetBytesUnchecked",
                    "function params": [
                        "charsetName"
                    ],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUnchecked"
                },
                {
                    "function name": "testNewStringUtf16Le",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le"
                },
                {
                    "function name": "testGetBytesUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be"
                },
                {
                    "function name": "testNewStringUtf8",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8"
                },
                {
                    "function name": "testNewStringUtf16Be",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be"
                },
                {
                    "function name": "testGetBytesUtf16",
                    "function params": [],
                    "file name": "StringUtilsTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/binary/StringUtilsTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16"
                },
                {
                    "function name": "testApr1CryptBytes",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes"
                },
                {
                    "function name": "testApr1CryptWithoutSalt",
                    "function params": [],
                    "file name": "Apr1CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Apr1CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt"
                },
                {
                    "function name": "testB64from24bit",
                    "function params": [],
                    "file name": "B64Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/B64Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.B64Test.testB64from24bit"
                },
                {
                    "function name": "testCryptWithBytes",
                    "function params": [],
                    "file name": "CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.CryptTest.testCryptWithBytes"
                },
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha256CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha256CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize"
                },
                {
                    "function name": "testSha256LargetThanBlocksize",
                    "function params": [],
                    "file name": "Sha512CryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/Sha512CryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize"
                },
                {
                    "function name": "testUnixCryptWithoutSalt",
                    "function params": [],
                    "file name": "UnixCryptTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/digest/UnixCryptTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt"
                },
                {
                    "function name": "testSpecificationV1Examples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples"
                },
                {
                    "function name": "testWikipediaExamples",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone1Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone1Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone1Test.testEndMb"
                },
                {
                    "function name": "testIsCaverphoneEquals",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals"
                },
                {
                    "function name": "testCaverphoneRevisitedExamples",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples"
                },
                {
                    "function name": "testSpecificationExamples",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples"
                },
                {
                    "function name": "testEndMb",
                    "function params": [],
                    "file name": "Caverphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/Caverphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.Caverphone2Test.testEndMb"
                },
                {
                    "function name": "testExamples",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testExamples"
                },
                {
                    "function name": "testIsEncodeEquals",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testIsEncodeEquals"
                },
                {
                    "function name": "testVariationsMeyer",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer"
                },
                {
                    "function name": "testHyphen",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testHyphen"
                },
                {
                    "function name": "testVariationsMella",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella"
                },
                {
                    "function name": "testEdgeCases",
                    "function params": [],
                    "file name": "ColognePhoneticTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/ColognePhoneticTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases"
                },
                {
                    "function name": "checkDoubleMetaphone",
                    "function params": [
                        "typeIndex",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone"
                },
                {
                    "function name": "checkDoubleMetaphone",
                    "function params": [
                        "typeIndex",
                        "alternate"
                    ],
                    "file name": "DoubleMetaphone2Test.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphone2Test.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphone2Test.checkDoubleMetaphone"
                },
                {
                    "function name": "doubleMetaphoneNotEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended2",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualExtended3",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3"
                },
                {
                    "function name": "validateFixture",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualBasic",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic"
                },
                {
                    "function name": "assertDoubleMetaphone",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone"
                },
                {
                    "function name": "assertDoubleMetaphoneAlt",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt"
                },
                {
                    "function name": "testSetMaxCodeLength",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "validateFixture",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.validateFixture"
                },
                {
                    "function name": "testIsDoubleMetaphoneEqualWithMATCHES",
                    "function params": [],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES"
                },
                {
                    "function name": "doubleMetaphoneNotEqualTest",
                    "function params": [
                        "alternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneNotEqualTest"
                },
                {
                    "function name": "assertDoubleMetaphoneAlt",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphoneAlt"
                },
                {
                    "function name": "doubleMetaphoneEqualTest",
                    "function params": [
                        "pairs",
                        "useAlternate"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.doubleMetaphoneEqualTest"
                },
                {
                    "function name": "assertDoubleMetaphone",
                    "function params": [
                        "expected",
                        "source"
                    ],
                    "file name": "DoubleMetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/DoubleMetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.DoubleMetaphoneTest.assertDoubleMetaphone"
                },
                {
                    "function name": "validateFixture",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.validateFixture"
                },
                {
                    "function name": "validateFixture",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.validateFixture"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "assertMetaphoneEqual",
                    "function params": [
                        "pairs"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertMetaphoneEqual"
                },
                {
                    "function name": "assertIsMetaphoneEqual",
                    "function params": [
                        "source",
                        "matches"
                    ],
                    "file name": "MetaphoneTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MetaphoneTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MetaphoneTest.assertIsMetaphoneEqual"
                },
                {
                    "function name": "assertEncodings",
                    "function params": [
                        "testValues"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.assertEncodings"
                },
                {
                    "function name": "assertEncodings",
                    "function params": [
                        "testValues"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.assertEncodings"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.encodeAll"
                },
                {
                    "function name": "testTrueVariant",
                    "function params": [],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.testTrueVariant"
                },
                {
                    "function name": "encodeAll",
                    "function params": [
                        "strings",
                        "expectedEncoding"
                    ],
                    "file name": "NysiisTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/NysiisTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.NysiisTest.encodeAll"
                },
                {
                    "function name": "testGetMappingCodeNonLetter",
                    "function params": [],
                    "file name": "RefinedSoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/RefinedSoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter"
                },
                {
                    "function name": "testUsMappingEWithAcute",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute"
                },
                {
                    "function name": "testUsMappingOWithDiaeresis",
                    "function params": [],
                    "file name": "SoundexTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/SoundexTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis"
                },
                {
                    "function name": "testSetConcat",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat"
                },
                {
                    "function name": "createGenericApproxEncoder",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.createGenericApproxEncoder"
                },
                {
                    "function name": "testAllChars",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars"
                },
                {
                    "function name": "testLongestEnglishSurname",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname"
                },
                {
                    "function name": "testSpeedCheck2",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty2Letters",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters"
                },
                {
                    "function name": "testNegativeIndexForRuleMatchIndexOutOfBoundsException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException"
                },
                {
                    "function name": "assertNotEmpty",
                    "function params": [
                        "bmpm",
                        "value"
                    ],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty"
                },
                {
                    "function name": "testAsciiEncodeNotEmpty1Letter",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter"
                },
                {
                    "function name": "assertNotEmpty",
                    "function params": [
                        "bmpm",
                        "value"
                    ],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.assertNotEmpty"
                },
                {
                    "function name": "testEncodeAtzNotEmpty",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty"
                },
                {
                    "function name": "testSpeedCheck",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck"
                },
                {
                    "function name": "testSpeedCheck3",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3"
                },
                {
                    "function name": "testSetRuleTypeExact",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact"
                },
                {
                    "function name": "testSetNameTypeAsh",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh"
                },
                {
                    "function name": "testEncodeGna",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna"
                },
                {
                    "function name": "testOOM",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM"
                },
                {
                    "function name": "testSetRuleTypeToRulesIllegalArgumentException",
                    "function params": [],
                    "file name": "BeiderMorseEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/BeiderMorseEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeToRulesIllegalArgumentException"
                },
                {
                    "function name": "testLanguageGuessing",
                    "function params": [],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing"
                },
                {
                    "function name": "LanguageGuessingTest",
                    "function params": [
                        "name",
                        "language",
                        "exactness"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest"
                },
                {
                    "function name": "LanguageGuessingTest",
                    "function params": [
                        "name",
                        "language",
                        "exactness"
                    ],
                    "file name": "LanguageGuessingTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/LanguageGuessingTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.LanguageGuessingTest.LanguageGuessingTest"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "args",
                        "concat",
                        "input"
                    ],
                    "file name": "PhoneticEngineRegressionTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineRegressionTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.encode"
                },
                {
                    "function name": "PhoneticEngineTest",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest"
                },
                {
                    "function name": "testEncode",
                    "function params": [],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode"
                },
                {
                    "function name": "PhoneticEngineTest",
                    "function params": [
                        "name",
                        "phoneticExpected",
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngineTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/PhoneticEngineTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.PhoneticEngineTest.PhoneticEngineTest"
                },
                {
                    "function name": "makePhonemes",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.makePhonemes"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "description"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "testPhonemeComparedToSelfIsZero",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToSelfIsZero"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "description"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "item"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "testPhonemeComparedToLaterIsNegative",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testPhonemeComparedToLaterIsNegative"
                },
                {
                    "function name": "testSubSequenceWorks",
                    "function params": [],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.testSubSequenceWorks"
                },
                {
                    "function name": "NegativeIntegerBaseMatcher",
                    "function params": [
                        "item"
                    ],
                    "file name": "RuleTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/bm/RuleTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.bm.RuleTest.NegativeIntegerBaseMatcher"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testNullInput"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.constructString"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testEncodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.constructString"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "BCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/BCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testLetUsMakeCloverHappy",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy"
                },
                {
                    "function name": "testEncodeDecodeBlanks",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testNullInput"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testEncodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.constructString"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "testSoftLineBreakEncode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testSoftLineBreakDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.constructString"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "QuotedPrintableCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/QuotedPrintableCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "assertExpectedDecoderException",
                    "function params": [
                        "s"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException"
                },
                {
                    "function name": "assertExpectedDecoderException",
                    "function params": [
                        "s"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.assertExpectedDecoderException"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "testNullInput",
                    "function params": [],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.testNullInput"
                },
                {
                    "function name": "RFC1522TestCodec",
                    "function params": [
                        "bytes"
                    ],
                    "file name": "RFC1522CodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/RFC1522CodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.RFC1522CodecTest.RFC1522TestCodec"
                },
                {
                    "function name": "testSafeCharEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.constructString"
                },
                {
                    "function name": "constructString",
                    "function params": [
                        "unicodeChars"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.constructString"
                },
                {
                    "function name": "testInvalidEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding"
                },
                {
                    "function name": "testDefaultEncoding",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding"
                },
                {
                    "function name": "testDecodeInvalidContent",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent"
                },
                {
                    "function name": "testEncodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeObjects"
                },
                {
                    "function name": "testUTF8RoundTrip",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip"
                },
                {
                    "function name": "testDecodeObjects",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeObjects"
                },
                {
                    "function name": "testDecodeInvalid",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid"
                },
                {
                    "function name": "testUnsafeEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode"
                },
                {
                    "function name": "testDecodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull"
                },
                {
                    "function name": "validateState",
                    "function params": [
                        "urlCodec"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.validateState"
                },
                {
                    "function name": "testEncodeDecodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull"
                },
                {
                    "function name": "testBasicEncodeDecode",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode"
                },
                {
                    "function name": "testEncodeStringWithNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull"
                },
                {
                    "function name": "testEncodeUrlWithNullBitSet",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet"
                },
                {
                    "function name": "testDecodeWithNullArray",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray"
                },
                {
                    "function name": "validateState",
                    "function params": [
                        "urlCodec"
                    ],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.validateState"
                },
                {
                    "function name": "testEncodeNull",
                    "function params": [],
                    "file name": "URLCodecTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/net/URLCodecTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.net.URLCodecTest.testEncodeNull"
                }
            ],
            "date": "2013-01-07"
        },
        {
            "commit_id": 743,
            "hash": "885806d5ab409034079fadd2107049fad17808e1",
            "commit_summary": "Convert ivar to static final field.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429870 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "removeDoubleConsonants",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants"
                }
            ],
            "date": "2013-01-07"
        },
        {
            "commit_id": 744,
            "hash": "680ce0b52f5124c652329525ed60087e83f22540",
            "commit_summary": "Use final where possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429871 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/EncoderException.java"
            ],
            "functions": [
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message",
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "message"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                },
                {
                    "function name": "EncoderException",
                    "function params": [
                        "cause"
                    ],
                    "file name": "EncoderException.java",
                    "file old path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "file new path": "src/main/java/org/apache/commons/codec/EncoderException.java",
                    "full name": "src.main.java.org.apache.commons.codec.EncoderException.EncoderException"
                }
            ],
            "date": "2013-01-07"
        },
        {
            "commit_id": 745,
            "hash": "40f4e917f076147faf2492fd3cd837937476295c",
            "commit_summary": "Fix spelling of 'nomenclature'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1429873 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [],
            "date": "2013-01-07"
        },
        {
            "commit_id": 746,
            "hash": "55a865b17bc1d1de321dd12605edc4ae8308d5b1",
            "commit_summary": "Fix checkstyle warnings.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1435550 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java",
                "src/main/java/org/apache/commons/codec/binary/Base32.java",
                "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64.java",
                "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                "src/main/java/org/apache/commons/codec/digest/B64.java",
                "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                "src/main/java/org/apache/commons/codec/language/bm/Rule.java"
            ],
            "functions": [
                {
                    "function name": "decode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.decode"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "in",
                        "inPos",
                        "inAvail",
                        "context"
                    ],
                    "file name": "Base32.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32.encode"
                },
                {
                    "function name": "Base32InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32InputStream.Base32InputStream"
                },
                {
                    "function name": "Base32OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base32OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base32OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base32OutputStream.Base32OutputStream"
                },
                {
                    "function name": "encodeBase64",
                    "function params": [
                        "binaryData",
                        "isChunked",
                        "urlSafe",
                        "maxResultSize"
                    ],
                    "file name": "Base64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64.encodeBase64"
                },
                {
                    "function name": "Base64InputStream",
                    "function params": [
                        "in",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64InputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64InputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64InputStream.Base64InputStream"
                },
                {
                    "function name": "Base64OutputStream",
                    "function params": [
                        "out",
                        "doEncode",
                        "lineLength",
                        "lineSeparator"
                    ],
                    "file name": "Base64OutputStream.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/Base64OutputStream.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.Base64OutputStream.Base64OutputStream"
                },
                {
                    "function name": "BaseNCodec",
                    "function params": [
                        "unencodedBlockSize",
                        "encodedBlockSize",
                        "lineLength",
                        "chunkSeparatorLength"
                    ],
                    "file name": "BaseNCodec.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/BaseNCodec.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.BaseNCodec.BaseNCodec"
                },
                {
                    "function name": "newIllegalStateException",
                    "function params": [
                        "charsetName",
                        "e"
                    ],
                    "file name": "StringUtils.java",
                    "file old path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "file new path": "src/main/java/org/apache/commons/codec/binary/StringUtils.java",
                    "full name": "src.main.java.org.apache.commons.codec.binary.StringUtils.newIllegalStateException"
                },
                {
                    "function name": "b64from24bit",
                    "function params": [
                        "b2",
                        "b1",
                        "b0",
                        "outLen",
                        "buffer"
                    ],
                    "file name": "B64.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/B64.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.B64.b64from24bit"
                },
                {
                    "function name": "sha2Crypt",
                    "function params": [
                        "keyBytes",
                        "salt",
                        "saltPrefix",
                        "blocksize",
                        "algorithm"
                    ],
                    "file name": "Sha2Crypt.java",
                    "file old path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "file new path": "src/main/java/org/apache/commons/codec/digest/Sha2Crypt.java",
                    "full name": "src.main.java.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt"
                },
                {
                    "function name": "handleJ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleJ"
                },
                {
                    "function name": "handleG",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleG"
                },
                {
                    "function name": "handleS",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleS"
                },
                {
                    "function name": "handleR",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleR"
                },
                {
                    "function name": "handleZ",
                    "function params": [
                        "value",
                        "result",
                        "index",
                        "slavoGermanic"
                    ],
                    "file name": "DoubleMetaphone.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/DoubleMetaphone.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.DoubleMetaphone.handleZ"
                },
                {
                    "function name": "isVowel",
                    "function params": [
                        "letter"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel"
                },
                {
                    "function name": "encode",
                    "function params": [
                        "pObject"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.encode"
                },
                {
                    "function name": "PhoneticEngine",
                    "function params": [
                        "nameType",
                        "ruleType",
                        "concat",
                        "maxPhonemes"
                    ],
                    "file name": "PhoneticEngine.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.PhoneticEngine.PhoneticEngine"
                },
                {
                    "function name": "getInstance",
                    "function params": [
                        "nameType",
                        "rt",
                        "langs"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.getInstance"
                },
                {
                    "function name": "for",
                    "function params": [
                        "s"
                    ],
                    "file name": "Rule.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/bm/Rule.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.bm.Rule.for"
                }
            ],
            "date": "2013-01-19"
        },
        {
            "commit_id": 747,
            "hash": "382d41d7b5ebfa324e5e5fe08ad3709a2c0132a5",
            "commit_summary": "Reverting added suppress warnings for rawtypes/unchecked.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1435573 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/StringEncoderComparator.java"
            ],
            "functions": [],
            "date": "2013-01-19"
        },
        {
            "commit_id": 748,
            "hash": "78856d8417f9c63c2b6a5616f27df06b1e462ed9",
            "commit_summary": "[CODEC-161] Add Match Rating Approach (MRA) phonetic algorithm encoder.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1436559 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [
                {
                    "function name": "testgetMinRating_11_Returns_3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully"
                },
                {
                    "function name": "testGetMinRating_13_Returns_1_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully"
                },
                {
                    "function name": "testgetMinRating_10_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_7_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully"
                },
                {
                    "function name": "testGetMinRating_1_Returns5_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_6_Returns4_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully"
                },
                {
                    "function name": "testisVowel_SingleVowel_ReturnsTrue",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisVowel_SingleVowel_ReturnsTrue"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_8_Returns3_Successfully",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully"
                },
                {
                    "function name": "testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse"
                },
                {
                    "function name": "testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse"
                },
                {
                    "function name": "testgetMinRating_5_Returns4_Successfully2",
                    "function params": [],
                    "file name": "MatchRatingApproachEncoderTest.java",
                    "file old path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "file new path": "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java",
                    "full name": "src.test.java.org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2"
                }
            ],
            "date": "2013-01-21"
        },
        {
            "commit_id": 749,
            "hash": "a408bf65949670393896e202077bc70ee89c3956",
            "commit_summary": "Remove extra white space.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1436560 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/test/java/org/apache/commons/codec/language/MatchRatingApproachEncoderTest.java"
            ],
            "functions": [],
            "date": "2013-01-21"
        },
        {
            "commit_id": 750,
            "hash": "7a560b28c8acde0f75cd274f6d9a50ab02b2ac26",
            "commit_summary": "Remove unnecessary parentheses.\n\ngit-svn-id: https://svn.apache.org/repos/asf/commons/proper/codec/trunk@1436561 13f79535-47bb-0310-9956-ffa450edef68",
            "modified_files": [
                "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java"
            ],
            "functions": [
                {
                    "function name": "getMinRating",
                    "function params": [
                        "sumLength"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating"
                },
                {
                    "function name": "leftToRightThenRightToLeftProcessing",
                    "function params": [
                        "name1",
                        "name2"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing"
                },
                {
                    "function name": "removeVowels",
                    "function params": [
                        "name"
                    ],
                    "file name": "MatchRatingApproachEncoder.java",
                    "file old path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "file new path": "src/main/java/org/apache/commons/codec/language/MatchRatingApproachEncoder.java",
                    "full name": "src.main.java.org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels"
                }
            ],
            "date": "2013-01-21"
        }
    ]
}